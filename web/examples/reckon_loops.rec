// Reckon Language Loops Test Data
//
// File:	reckon_loops.rec
// Author:	Bob Walton (walton@acm.org)
// Date:	Mon Dec  2 07:38:57 EST 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Loop Statements
//
power = 1
i = 0
next power, next i = repeat:
    if i >= 10: exit
    next power * = 2
    next i + = 1

next power = 1
next i = 0
repeat:
    if i >= 10: exit
    next power * = 2
    next i + = 1

j = 1
repeat:
    next j = 0
        // This is discarded when iteration exits.
    exit

j

do:
    next j = 0
        // This is retained when block exits.
    exit

j


// Iterators
//
next power = 1
next i = 0
repeat while i < 6:
    next power * = 2
    next i + = 1

next power = 1
next i = 0
do while i < 6:
    next power * = 2
    next i + = 1

next power = 1
next i = 0
while i < 6:
    next power * = 2
    next i + = 1

next power = 1
next i = 0
until i >= 6:
    next power * = 2
    next i + = 1

next power = 1
next i = 0
while i < 6 at most 5 times:
    next power * = 2
    next i + = 1

next power = 1
do exactly 4 times:
    next power * = 2

next power = 1
do 4 times:
    next power * = 2
