// Reckon Language Assignments Test Data
//
// File:	reckon_assignments.rec
// Author:	Bob Walton (walton@acm.org)
// Date:	Sun Nov 17 07:21:59 PM EST 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Simple Expression Assignments
//
X = 5
Z = 8
Y = Z

Y = 10
    // It is illegal to reassign Y.
next Y = 10
    // It is legal to assign a next Y.

next Z = - Z
next Z = X + Z
next Z = X + Y - Z
next Z = X + ( Y - Z )

// Multi-Variable Expression Assignments
//
X
Y

next X, next Y = Y, X

X
Y

P, Q = X * Y, X + Y

// Block Assignments
//
E, F =:
    E = 25
    F = -25

E
F

next E, next F =:
    next E = 35
       // This does not take effect until after
       // this subblock has executed
    next F = E
       // The value of E is the value before the
       // subblock executes

E
F

J, K =:
    J = E
    K = J + 1
        // J is write-only inside this subblock

// Use of if. else if, else inside subblock
//
next E = 25
SIGN E = do:
    // The `do' here is cosmetic and has no effect.
    if E < 0: SIGN E = -1
        // SIGN E = -1 is a restricted statement (it
	// is an operand of `if ... : ...') that
	// cannot allocate new variables, but it can
	// write write-only variables.
    else if E == 0: SIGN E = 0
    else: SIGN E = +1

// Next promotion
//
do:
    next E = E + 10
        // next E is promoted replacing `do' by
	// `next E = do'.

// Exit statements
//
exit

X1 =:
    X1 = 5
    X1 = 15
    exit
    X1 = 25

X1

X2 = do BLOCK2:
    X2 = 5
    X2 = 15
    do BLOCK3:
        exit BLOCK2
    X2 = 25

X2

