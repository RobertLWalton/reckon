// Reckon Language List Test Data
//
// File:        reckon_lists.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Feb 21 07:32:52 AM EST 2025
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// List Construction
//
X = [1 + 0, 1 + 1, 1 + 2, 1 + 3]
[1, 2, 3, 4]
Y = [10, 20, X, 30]  // Y is flattened
[10, 20, 1, 2, 3, 4, 30]
Z = [[1, 2, 3]]      // Z is flattened
[1, 2, 3]
next Z = [ "Baker", "Bill", "Bob", "Butch" ]
["Baker", "Bill", "Bob", "Butch"]
W = []
[]
V = [ "Carol", "Clara" ]
["Carol", "Clara"]
next Y = [ 10, Z, 20, W, 30, V ]  // Y is flattened
[10, "Baker", "Bill", "Bob", "Butch", 20, 30, "Carol", "Clara"]

// List Element Access
//
Y
[10, "Baker", "Bill", "Bob", "Butch", 20, 30, "Carol", "Clara"]
Z3 = Y[3]
"Bob"
Z6 = Y[3 + 3]
30
Z10 = Y[10]         // Y[10] does not exist
*NONE*
Zm1 = Y[-1]         // Y[-1] does not exist
*NONE*
Zl = length ( Y )   // The number of elements in Y
9
// Compute the sum of elements of a list
//
next X = [ 1, 5, 2, 8, 9 ]
[1, 5, 2, 8, 9]
Xl = length ( X )
5
sum = 0
0
i = 0
0
while i < Xl:
    next sum + = X[i]
    next i + = 1
25
5
sum
25

// List Element Assignment
//
next X = [ 1, 2, 3, 4 ]
[1, 2, 3, 4]
X[1] = 20
X
[1, 20, 3, 4]
X[0], X[2] = X[2], X[0]
X
[3, 20, 1, 4]
TOP, X[3] = X[3], 400
4
X
[3, 20, 1, 400]
X[10] = "Bozo"     // X[10] does not exist
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    SET: vector element does not exist
* {49:224,32,280} SET SET 8 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    ARGS = [3, 20, 1, 400] 10
[no output due to run-time error]

// List Element Modification
//
X
[3, 20, 1, 400]
X[1] + = 1000
X
[3, 1020, 1, 400]
X[0] * = 1000
X[2] / = 10
X
[3000, 1020, 0.1, 400]
X[10] - = 5    // X[10] does not exist
               // It reads as *NONE* and causes
               // FATAL PROGRAM ERROR when written
!!!!!!!!!!!!!!!!!!!!!!!!! ERROR: invalid operand(s)
* {61:243,33,305} SUB: * = nan <= *NONE* - 5
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    SET: vector element does not exist
* {59:244,33,306} SET SET 9 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    ARGS = [3000, 1020, 0.1, 400] 10
[no output due to run-time error]

// List Push and Pop
//
next X = [ 1, 2, 3 ]
[1, 2, 3]
X[] = 4    // Push 4 to end of list
X
[1, 2, 3, 4]
next Z = X[]    // Pop 4 from end of list
4
X
[1, 2, 3]
X[] + = 8    // Add 8 to last element of list
X
[1, 2, 11]
// Compute L = [ 1, 2, 3, ..., 10 ]
L = []
[]
L[]       // Popping empty list
*NONE*
next i = 1
1
while i <= 10:
    L[] = i
    next i + = 1
11
L
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
// Compute sum of elements of L
next sum = 0
0
repeat:
    E = L[]
    if E == *NONE*: exit
    next sum + = E
55
L
[]
sum
55

// List Assignment and Copying
//
next X = [ 1, 2, 3 ]
[1, 2, 3]
next Y = X
[1, 2, 3]
next Z = copy ( X )
[1, 2, 3]
// X and Y point at same list,
// Z points at different list
X[1] = 20
Z[1] = -2
X
[1, 20, 3]
Y
[1, 20, 3]
Z
[1, -2, 3]
next W = [ 1, 2 ]
[1, 2]
next X = [ 1, 2, 3 ]
[1, 2, 3]
X[1] = W
next Y = copy ( X )
[1, [1, 2], 3]
// X and Y point at different lists,
// but second element of BOTH lists points at W
X[0] = 100
Y[0] = "A"
W[] = "B"
X
[100, [1, 2, "B"], 3]
Y
["A", [1, 2, "B"], 3]

// Cascaded List Labels
//
next X = [1, 2, 3]
[1, 2, 3]
next Y = [ 10, 20, 30 ]
[10, 20, 30]
Y[1] = X        // Now Y[1] and X point at same list
Y
[10, [1, 2, 3], 30]
X[] = "Butch"
Y
[10, [1, 2, 3, "Butch"], 30]
Y[1][0]
1
Y[1][3]
"Butch"
Y[1][4]        // Does not exist, X has only 4 elements
*NONE*
Y[1][]         // Pops X
"Butch"
Y[1][] = 5000  // Pushes 5000 to X
X
[1, 2, 3, 5000]
Y
[10, [1, 2, 3, 5000], 30]
