// Reckon Language Function Test Data
//
// File:        reckon_functions.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Wed May 14 03:31:18 AM EDT 2025
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

function add (X) (Y):
    Z = X + Y
    return Z
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|function
     {|add (X) (Y)|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z|} =
               {|{|X|} + {|Y|}|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|return
               {|Z|}|}|}|}

Z = add (5) (7)
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z|} =
     {|add (5) (7)|}|}

function (X) sub (Y):
    return X - Y;
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|function
     {|(X) sub (Y)|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = ";", .initiator = *LOGICAL_LINE*|return
               {|{|X|} - {|Y|}|}|}|}|}

W = (5) sub (7)
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|W|} =
     {|(5) sub (7)|}|}
