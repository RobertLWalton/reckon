// Reckon Language Numerics Test Data
//
// File:        reckon_numerics.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Thu Oct 24 02:01:41 AM EDT 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Integers
//
456
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|456|}
456 is integer
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|456|}
     [< is integer >]|}
4.56e2
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|456|}
4.56e2 is integer
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|456|}
     [< is integer >]|}
456 == 4.56e2
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|456|} ==
     {|456|}|}
-456 == -45.6e1
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|-456|} ==
     {|-456|}|}
123 == 12300e-2
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|123|} ==
     {|123|}|}
1e20 is integer
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|1e+20|}
     [< is integer >]|}
    // FALSE because value not in range (-1e15,+1e15)
9 / 2 is integer
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
     {|{|9|} / {|2|}|} [< is integer >]|}
4.5 is integer
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|4.5|}
     [< is integer >]|}
9 / 3 is integer
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
     {|{|9|} / {|3|}|} [< is integer >]|}
-0 == +0
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|-0|} ==
     {|0|}|}
-1 == +1
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|-1|} ==
     {|1|}|}

// Floating Point Numbers
//
3.14
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|3.14|}
-3.14
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|-3.14|}
314e-2
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|3.14|}
3.14 == 314e-2
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|3.14|} ==
     {|3.14|}|}
5.7e-4
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|0.00057|}
123 / 1000 == 0.123
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
     {|{|123|} / {|1000|}|} == {|0.123|}|}
1 + 1e-16
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|1|} +
     {|1e-16|}|}
1 + 1e-16 == 1
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
     {|{|1|} + {|1e-16|}|} == {|1|}|}
1 + 1e-15
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|1|} +
     {|1e-15|}|}
1 + 1e-15 == 1
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
     {|{|1|} + {|1e-15|}|} == {|1|}|}
1 + 4e-15
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|1|} +
     {|4e-15|}|}
1 + 5e-15
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|1|} +
     {|5e-15|}|}
1 + 1e-14
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|{|1|} +
     {|1e-14|}|}
1 + 1e-14 == 1
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
     {|{|1|} + {|1e-14|}|} == {|1|}|}


// Special Numbers
//
inf
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|inf|}
Inf
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|inf|}
-inf
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|-inf|}
-Inf
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|-inf|}
-1e500
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|-inf|}
nan
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|nan|}
NaN
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|nan|}
+NaN
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|nan|}
-Nan
{"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|-nan|}
