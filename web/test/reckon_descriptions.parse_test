// Reckon Language Descriptions Test Data
//
// File:        reckon_descriptions.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Sat Aug 30 02:52:43 AM EDT 2025
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Description Statements:
//
a person:
    name = `Jill'
    weight = 114
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|a {|person|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|name|} = `Jill'|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|weight|} = {|114|}|}|}|}

X = a person:
    name = `Jack'
    weight = 148
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|{|X|} = {|a {|person|}|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|name|} = `Jack'|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|weight|} = {|148|}|}|}|}

X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}

Y = a marriage:
    husband = X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|{|Y|} = {|a {|marriage|}|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|husband|} = {|X|}|}|}|}

a person:
    name = `Joe'
    weight = 100 * 2 + 75
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|a {|person|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|name|} = `Joe'|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|weight|} = {|{|{|100|} * {|2|}|} + {|75|}|}|}|}|}

Z = `John Doe'
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z|} =
     `John Doe'|}
S = `Hello [ Z ]'
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|S|} =
     `Hello [Z]'|}
T = `Hello `[Z]'.'
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|T|} =
     `Hello `[Z]' "."'|}
`[Z]'
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|`[Z]'|}

Q ={s: first = `[Z[0]]', last = `[Z[1]]'| Hello [Z]|}
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Q|} =
     {s: first = `[Z [0]]', last = `[Z [1]]'|Hello [Z]|s}|}
