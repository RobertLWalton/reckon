* {0:0,1,1} PUSHI: *FALSE* <= *FALSE*
* {0:1,2,2} PUSHI: *TRUE* <= *TRUE*
* {0:2,3,3} PUSHI: *NONE* <= *NONE*
// Reckon Language Numbers Test Data
//
// File:        reckon_numbers.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Nov  8 01:57:30 PM EST 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Numbers
//
100 is number
* {13:3,4,4} PUSHI: * <= *FALSE*
* {13:4,5,5} PUSHI: * <= 100
* {13:5,4,6} JMPNUM location 7 is successful: true <= 100
* {13:7,3,7} POPS: * <= * = *FALSE*
* {13:8,4,8} PUSHI: * <= *TRUE*
3.141529 is number
* {14:9,5,9} PUSHI: * <= *FALSE*
* {14:10,6,10} PUSHI: * <= 3.141529
* {14:11,5,11} JMPNUM location 13 is successful: true <= 3.141529
* {14:13,4,12} POPS: * <= * = *FALSE*
* {14:14,5,13} PUSHI: * <= *TRUE*
+inf is number
* {15:15,6,14} PUSHI: * <= *FALSE*
* {15:16,7,15} PUSHI: * <= inf
* {15:17,6,16} JMPNUM location 19 is successful: true <= inf
* {15:19,5,17} POPS: * <= * = *FALSE*
* {15:20,6,18} PUSHI: * <= *TRUE*
nan is number
* {16:21,7,19} PUSHI: * <= *FALSE*
* {16:22,8,20} PUSHI: * <= nan
* {16:23,7,21} JMPNUM location 25 is successful: true <= nan
* {16:25,6,22} POPS: * <= * = *FALSE*
* {16:26,7,23} PUSHI: * <= *TRUE*

// Integers
//
456
* {20:27,8,24} PUSHI: * <= 456
456 is integer
* {21:28,9,25} PUSHI: * <= *FALSE*
* {21:29,10,26} PUSHI: * <= 456
* {21:30,9,27} JMPINT location 32 is successful: true <= 456
* {21:32,8,28} POPS: * <= * = *FALSE*
* {21:33,9,29} PUSHI: * <= *TRUE*
4.56e2
* {22:34,10,30} PUSHI: * <= 456
4.56e2 is integer
* {23:35,11,31} PUSHI: * <= *FALSE*
* {23:36,12,32} PUSHI: * <= 456
* {23:37,11,33} JMPINT location 39 is successful: true <= 456
* {23:39,10,34} POPS: * <= * = *FALSE*
* {23:40,11,35} PUSHI: * <= *TRUE*
456 == 4.56e2
    // x == y tests whether x equals y
* {25:41,12,36} PUSHI: * <= *FALSE*
* {24:42,13,37} PUSHI: * <= 456
* {24:43,14,38} PUSHI: * <= 456
* {24:44,12,39} JMPNEQ location 47 is UNsuccessful: false <= 456 != 456
* {25:45,11,40} POPS: * <= * = *FALSE*
* {25:46,12,41} PUSHI: * <= *TRUE*
-456 == -45.6e1
* {26:47,13,42} PUSHI: * <= *FALSE*
* {26:48,14,43} PUSHI: * <= -456
* {26:49,15,44} PUSHI: * <= -456
* {26:50,13,45} JMPNEQ location 53 is UNsuccessful: false <= -456
                != -456
* {26:51,12,46} POPS: * <= * = *FALSE*
* {26:52,13,47} PUSHI: * <= *TRUE*
123 == 12300e-2
* {27:53,14,48} PUSHI: * <= *FALSE*
* {27:54,15,49} PUSHI: * <= 123
* {27:55,16,50} PUSHI: * <= 123
* {27:56,14,51} JMPNEQ location 59 is UNsuccessful: false <= 123 != 123
* {27:57,13,52} POPS: * <= * = *FALSE*
* {27:58,14,53} PUSHI: * <= *TRUE*
1e20 is integer
    // FALSE because value not in range (-1e15,+1e15)
* {29:59,15,54} PUSHI: * <= *FALSE*
* {28:60,16,55} PUSHI: * <= 1e+20
* {29:61,15,56} JMPINT location 63 is UNsuccessful: false <= 1e+20
* {29:62,15,57} JMP location 65
9 / 2 is integer
* {30:65,16,58} PUSHI: * <= *FALSE*
* {30:66,17,59} PUSHI: * <= 9
* {30:67,18,60} PUSHI: * <= 2
* {30:68,17,61} DIV: * = 4.5 <= 9 / 2
* {30:69,16,62} JMPINT location 71 is UNsuccessful: false <= 4.5
* {30:70,16,63} JMP location 73
4.5 is integer
* {31:73,17,64} PUSHI: * <= *FALSE*
* {31:74,18,65} PUSHI: * <= 4.5
* {31:75,17,66} JMPINT location 77 is UNsuccessful: false <= 4.5
* {31:76,17,67} JMP location 79
9 / 3 is integer
* {32:79,18,68} PUSHI: * <= *FALSE*
* {32:80,19,69} PUSHI: * <= 9
* {32:81,20,70} PUSHI: * <= 3
* {32:82,19,71} DIV: * = 3 <= 9 / 3
* {32:83,18,72} JMPINT location 85 is successful: true <= 3
* {32:85,17,73} POPS: * <= * = *FALSE*
* {32:86,18,74} PUSHI: * <= *TRUE*
-0 == +0
* {33:87,19,75} PUSHI: * <= *FALSE*
* {33:88,20,76} PUSHI: * <= -0
* {33:89,21,77} PUSHI: * <= 0
* {33:90,19,78} JMPNEQ location 93 is UNsuccessful: false <= -0 != 0
* {33:91,18,79} POPS: * <= * = *FALSE*
* {33:92,19,80} PUSHI: * <= *TRUE*
-1 == +1
* {34:93,20,81} PUSHI: * <= *FALSE*
* {34:94,21,82} PUSHI: * <= -1
* {34:95,22,83} PUSHI: * <= 1
* {34:96,20,84} JMPNEQ location 99 is successful: true <= -1 != 1

// Finites
//
3.14
* {38:99,21,85} PUSHI: * <= 3.14
3.14 is finite
* {39:100,22,86} PUSHI: * <= *FALSE*
* {39:101,23,87} PUSHI: * <= 3.14
* {39:102,22,88} JMPFIN location 104 is successful: true <= 3.14
* {39:104,21,89} POPS: * <= * = *FALSE*
* {39:105,22,90} PUSHI: * <= *TRUE*
-3.14 is finite
* {40:106,23,91} PUSHI: * <= *FALSE*
* {40:107,24,92} PUSHI: * <= -3.14
* {40:108,23,93} JMPFIN location 110 is successful: true <= -3.14
* {40:110,22,94} POPS: * <= * = *FALSE*
* {40:111,23,95} PUSHI: * <= *TRUE*
314e-2 is finite
* {41:112,24,96} PUSHI: * <= *FALSE*
* {41:113,25,97} PUSHI: * <= 3.14
* {41:114,24,98} JMPFIN location 116 is successful: true <= 3.14
* {41:116,23,99} POPS: * <= * = *FALSE*
* {41:117,24,100} PUSHI: * <= *TRUE*
3.14 == 314e-2
* {42:118,25,101} PUSHI: * <= *FALSE*
* {42:119,26,102} PUSHI: * <= 3.14
* {42:120,27,103} PUSHI: * <= 3.14
* {42:121,25,104} JMPNEQ location 124 is UNsuccessful: false <= 3.14
                  != 3.14
* {42:122,24,105} POPS: * <= * = *FALSE*
* {42:123,25,106} PUSHI: * <= *TRUE*
3 is finite
    // integers are also finite numbers
* {44:124,26,107} PUSHI: * <= *FALSE*
* {43:125,27,108} PUSHI: * <= 3
* {44:126,26,109} JMPFIN location 128 is successful: true <= 3
* {44:128,25,110} POPS: * <= * = *FALSE*
* {44:129,26,111} PUSHI: * <= *TRUE*
5.7e-4
* {45:130,27,112} PUSHI: * <= 0.00057
123 / 1000 == 0.123
* {46:131,28,113} PUSHI: * <= *FALSE*
* {46:132,29,114} PUSHI: * <= 123
* {46:133,30,115} PUSHI: * <= 1000
* {46:134,29,116} DIV: * = 0.123 <= 123 / 1000
* {46:135,30,117} PUSHI: * <= 0.123
* {46:136,28,118} JMPNEQ location 139 is UNsuccessful: false <= 0.123
                  != 0.123
* {46:137,27,119} POPS: * <= * = *FALSE*
* {46:138,28,120} PUSHI: * <= *TRUE*
1 + 1e-16
    // Sum differs from 1 in 17'th place which is not stored
* {47:139,29,121} PUSHI: * <= 1
* {47:140,30,122} PUSHI: * <= 1e-16
* {48:141,29,123} ADD: * = 1 <= 1 + 1e-16
1 + 1e-16 == 1
* {49:142,30,124} PUSHI: * <= *FALSE*
* {49:143,31,125} PUSHI: * <= 1
* {49:144,32,126} PUSHI: * <= 1e-16
* {49:145,31,127} ADD: * = 1 <= 1 + 1e-16
* {49:146,32,128} PUSHI: * <= 1
* {49:147,30,129} JMPNEQ location 150 is UNsuccessful: false <= 1 != 1
* {49:148,29,130} POPS: * <= * = *FALSE*
* {49:149,30,131} PUSHI: * <= *TRUE*
1 + 1e-15
    // Sum differs from 1 in 16'th place which is stored in
    // part but is not output
* {50:150,31,132} PUSHI: * <= 1
* {50:151,32,133} PUSHI: * <= 1e-15
* {52:152,31,134} ADD: * = 1 <= 1 + 1e-15
1 + 1e-15 == 1
* {53:153,32,135} PUSHI: * <= *FALSE*
* {53:154,33,136} PUSHI: * <= 1
* {53:155,34,137} PUSHI: * <= 1e-15
* {53:156,33,138} ADD: * = 1 <= 1 + 1e-15
* {53:157,34,139} PUSHI: * <= 1
* {53:158,32,140} JMPNEQ location 161 is successful: true <= 1 != 1
1 + 4e-15
* {54:161,33,141} PUSHI: * <= 1
* {54:162,34,142} PUSHI: * <= 4e-15
* {54:163,33,143} ADD: * = 1 <= 1 + 4e-15
1 + 5e-15
* {55:164,34,144} PUSHI: * <= 1
* {55:165,35,145} PUSHI: * <= 5e-15
* {55:166,34,146} ADD: * = 1.00000000000001 <= 1 + 5e-15
1 + 1e-14
    // Sum differs from 1 in 15'th place which is stored
* {56:167,35,147} PUSHI: * <= 1
* {56:168,36,148} PUSHI: * <= 1e-14
* {57:169,35,149} ADD: * = 1.00000000000001 <= 1 + 1e-14
1 + 1e-14 == 1
* {58:170,36,150} PUSHI: * <= *FALSE*
* {58:171,37,151} PUSHI: * <= 1
* {58:172,38,152} PUSHI: * <= 1e-14
* {58:173,37,153} ADD: * = 1.00000000000001 <= 1 + 1e-14
* {58:174,38,154} PUSHI: * <= 1
* {58:175,36,155} JMPNEQ location 178 is successful: true
                  <= 1.00000000000001 != 1
+0
* {59:178,37,156} PUSHI: * <= 0
-0
* {60:179,38,157} PUSHI: * <= -0
+0 == -0
    // +0 and -0 are stored as different values,
    // But they are equal.
* {63:180,39,158} PUSHI: * <= *FALSE*
* {61:181,40,159} PUSHI: * <= 0
* {61:182,41,160} PUSHI: * <= -0
* {61:183,39,161} JMPNEQ location 186 is UNsuccessful: false <= 0 != -0
* {63:184,38,162} POPS: * <= * = *FALSE*
* {63:185,39,163} PUSHI: * <= *TRUE*
1e309 is finite
    // Outside the range of a finite number, i.e., outside
    // (-1e308.+1e308).
* {66:186,40,164} PUSHI: * <= *FALSE*
* {64:187,41,165} PUSHI: * <= inf
* {66:188,40,166} JMPFIN location 190 is UNsuccessful: false <= inf
* {66:189,40,167} JMP location 192

// Infinities
//
inf is infinite
* {70:192,41,168} PUSHI: * <= *FALSE*
* {70:193,42,169} PUSHI: * <= inf
* {70:194,41,170} JMPINF location 196 is successful: true <= inf
* {70:196,40,171} POPS: * <= * = *FALSE*
* {70:197,41,172} PUSHI: * <= *TRUE*
Inf is infinite
* {71:198,42,173} PUSHI: * <= *FALSE*
* {71:199,43,174} PUSHI: * <= inf
* {71:200,42,175} JMPINF location 202 is successful: true <= inf
* {71:202,41,176} POPS: * <= * = *FALSE*
* {71:203,42,177} PUSHI: * <= *TRUE*
-INF is infinite
* {72:204,43,178} PUSHI: * <= *FALSE*
* {72:205,44,179} PUSHI: * <= -inf
* {72:206,43,180} JMPINF location 208 is successful: true <= -inf
* {72:208,42,181} POPS: * <= * = *FALSE*
* {72:209,43,182} PUSHI: * <= *TRUE*
-1e500
    // If a number is too large to store, it is changed
    // to an infinity.
* {73:210,44,183} PUSHI: * <= -inf
+inf + +inf
    // Sum of two large unknown numbers is a large unknown number
* {76:211,45,184} PUSHI: * <= inf
* {76:212,46,185} PUSHI: * <= inf
* {77:213,45,186} ADD: * = inf <= inf + inf
+inf + -inf
    // Difference of two large unknown numbers is unknown
* {78:214,46,187} PUSHI: * <= inf
* {78:215,47,188} PUSHI: * <= -inf
!!!!!!!!!!!!!!!!!!!!!!!!! ERROR: invalid operand(s)
* {79:216,46,189} ADD: * = -nan <= inf + -inf
+inf * -inf
    // Product of two large unknown numbers is a large unknown number
* {80:217,47,190} PUSHI: * <= inf
* {80:218,48,191} PUSHI: * <= -inf
* {81:219,47,192} MUL: * = -inf <= inf * -inf
+inf / +inf
    // Ratio of two large unknown numbers is unknown
* {82:220,48,193} PUSHI: * <= inf
* {82:221,49,194} PUSHI: * <= inf
!!!!!!!!!!!!!!!!!!!!!!!!! ERROR: invalid operand(s)
* {83:222,48,195} DIV: * = -nan <= inf / inf
1 / +0
    // Positive finite number divided by very small but unknown
    // positive number is a large unknown positive number
* {84:223,49,196} PUSHI: * <= 1
* {84:224,50,197} PUSHI: * <= 0
!!!!!!!!!!!!!!!!!!!!!!!!! ERROR: divide by zero
* {86:225,49,198} DIV: * = inf <= 1 / 0
1 / -0
    // Positive finite number divided by very small but unknown
    // negative number is a large unknown negative number
* {87:226,50,199} PUSHI: * <= 1
* {87:227,51,200} PUSHI: * <= -0
!!!!!!!!!!!!!!!!!!!!!!!!! ERROR: divide by zero
* {89:228,50,201} DIV: * = -inf <= 1 / -0
+inf == +inf
    // Equality of two large unknown numbers is unknown
* {91:229,51,202} PUSHI: * <= *FALSE*
* {90:230,52,203} PUSHI: * <= inf
* {90:231,53,204} PUSHI: * <= inf
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
                  conditional jump instruction
* {90:232,51,205} JMPNEQ location 235 with invalid operand(s)
                  ARGS = inf inf
[no output due to run-time error]
+inf == -inf
    // Two large unknown numbers of different signs are not equal
* {93:229,51,205} PUSHI: * <= *FALSE*
* {92:230,52,206} PUSHI: * <= inf
* {92:231,53,207} PUSHI: * <= -inf
* {92:232,51,208} JMPNEQ location 235 is successful: true <= inf != -inf

// Not-A-Numbers (more properly, unknown or uncomputable numbers)
//
// Also see +inf + -inf and +inf / +inf above
//
nan is undefined number
* {99:235,52,209} PUSHI: * <= *FALSE*
* {99:236,53,210} PUSHI: * <= nan
* {99:237,52,211} JMPNAN location 239 is successful: true <= nan
* {99:239,51,212} POPS: * <= * = *FALSE*
* {99:240,52,213} PUSHI: * <= *TRUE*
NaN is undefined number
* {100:241,53,214} PUSHI: * <= *FALSE*
* {100:242,54,215} PUSHI: * <= nan
* {100:243,53,216} JMPNAN location 245 is successful: true <= nan
* {100:245,52,217} POPS: * <= * = *FALSE*
* {100:246,53,218} PUSHI: * <= *TRUE*
-Nan is undefined number
* {101:247,54,219} PUSHI: * <= *FALSE*
* {101:248,55,220} PUSHI: * <= -nan
* {101:249,54,221} JMPNAN location 251 is successful: true <= -nan
* {101:251,53,222} POPS: * <= * = *FALSE*
* {101:252,54,223} PUSHI: * <= *TRUE*
1 + nan
* {102:253,55,224} PUSHI: * <= 1
* {102:254,56,225} PUSHI: * <= nan
* {102:255,55,226} ADD: * = nan <= 1 + nan
nan + 1
* {103:256,56,227} PUSHI: * <= nan
* {103:257,57,228} PUSHI: * <= 1
* {103:258,56,229} ADD: * = nan <= nan + 1
5 * nan
* {104:259,57,230} PUSHI: * <= 5
* {104:260,58,231} PUSHI: * <= nan
* {104:261,57,232} MUL: * = nan <= 5 * nan
1 / nan
* {105:262,58,233} PUSHI: * <= 1
* {105:263,59,234} PUSHI: * <= nan
* {105:264,58,235} DIV: * = nan <= 1 / nan
nan / 5
* {106:265,59,236} PUSHI: * <= nan
* {106:266,60,237} PUSHI: * <= 5
* {106:267,59,238} DIV: * = nan <= nan / 5
nan == 8
* {107:268,60,239} PUSHI: * <= *FALSE*
* {107:269,61,240} PUSHI: * <= nan
* {107:270,62,241} PUSHI: * <= 8
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
                   conditional jump instruction
* {107:271,60,242} JMPNEQ location 274 with invalid operand(s)
                   ARGS = nan 8
[no output due to run-time error]
2 < nan
* {108:268,60,242} PUSHI: * <= *FALSE*
* {108:269,61,243} PUSHI: * <= 2
* {108:270,62,244} PUSHI: * <= nan
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
                   conditional jump instruction
* {108:271,60,245} JMPGEQ location 274 with invalid operand(s)
                   ARGS = 2 nan
[no output due to run-time error]
nan == nan
* {109:268,60,245} PUSHI: * <= *FALSE*
* {109:269,61,246} PUSHI: * <= nan
* {109:270,62,247} PUSHI: * <= nan
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
                   conditional jump instruction
* {109:271,60,248} JMPNEQ location 274 with invalid operand(s)
                   ARGS = nan nan
[no output due to run-time error]
