* {0:0,1,1} PUSHI: *FALSE* <= *FALSE*
* {0:1,2,2} PUSHI: *TRUE* <= *TRUE*
// Reckon Language Numbers Test Data
//
// File:        reckon_numbers.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Nov  8 01:57:30 PM EST 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Numbers
//
100 is number
* {13:2,3,3} PUSHI: * <= *FALSE*
* {13:3,4,4} PUSHI: * <= 100
* {13:4,3,5} JMPNUM location 6 is successful: true <= 100
* {13:6,2,6} POPS: * <= * = *FALSE*
* {13:7,3,7} PUSHI: * <= *TRUE*
3.141529 is number
* {14:8,4,8} PUSHI: * <= *FALSE*
* {14:9,5,9} PUSHI: * <= 3.141529
* {14:10,4,10} JMPNUM location 12 is successful: true <= 3.141529
* {14:12,3,11} POPS: * <= * = *FALSE*
* {14:13,4,12} PUSHI: * <= *TRUE*
+inf is number
* {15:14,5,13} PUSHI: * <= *FALSE*
* {15:15,6,14} PUSHI: * <= inf
* {15:16,5,15} JMPNUM location 18 is successful: true <= inf
* {15:18,4,16} POPS: * <= * = *FALSE*
* {15:19,5,17} PUSHI: * <= *TRUE*
nan is number
* {16:20,6,18} PUSHI: * <= *FALSE*
* {16:21,7,19} PUSHI: * <= nan
* {16:22,6,20} JMPNUM location 24 is successful: true <= nan
* {16:24,5,21} POPS: * <= * = *FALSE*
* {16:25,6,22} PUSHI: * <= *TRUE*

// Integers
//
456
* {20:26,7,23} PUSHI: * <= 456
456 is integer
* {21:27,8,24} PUSHI: * <= *FALSE*
* {21:28,9,25} PUSHI: * <= 456
* {21:29,8,26} JMPINT location 31 is successful: true <= 456
* {21:31,7,27} POPS: * <= * = *FALSE*
* {21:32,8,28} PUSHI: * <= *TRUE*
4.56e2
* {22:33,9,29} PUSHI: * <= 456
4.56e2 is integer
* {23:34,10,30} PUSHI: * <= *FALSE*
* {23:35,11,31} PUSHI: * <= 456
* {23:36,10,32} JMPINT location 38 is successful: true <= 456
* {23:38,9,33} POPS: * <= * = *FALSE*
* {23:39,10,34} PUSHI: * <= *TRUE*
456 == 4.56e2
    // x == y tests whether x equals y
* {25:40,11,35} PUSHI: * <= *FALSE*
* {24:41,12,36} PUSHI: * <= 456
* {24:42,13,37} PUSHI: * <= 456
* {24:43,11,38} JMPNEQ location 46 is UNsuccessful: false <= 456 != 456
* {25:44,10,39} POPS: * <= * = *FALSE*
* {25:45,11,40} PUSHI: * <= *TRUE*
-456 == -45.6e1
* {26:46,12,41} PUSHI: * <= *FALSE*
* {26:47,13,42} PUSHI: * <= -456
* {26:48,14,43} PUSHI: * <= -456
* {26:49,12,44} JMPNEQ location 52 is UNsuccessful: false <= -456
                != -456
* {26:50,11,45} POPS: * <= * = *FALSE*
* {26:51,12,46} PUSHI: * <= *TRUE*
123 == 12300e-2
* {27:52,13,47} PUSHI: * <= *FALSE*
* {27:53,14,48} PUSHI: * <= 123
* {27:54,15,49} PUSHI: * <= 123
* {27:55,13,50} JMPNEQ location 58 is UNsuccessful: false <= 123 != 123
* {27:56,12,51} POPS: * <= * = *FALSE*
* {27:57,13,52} PUSHI: * <= *TRUE*
1e20 is integer
    // FALSE because value not in range (-1e15,+1e15)
* {29:58,14,53} PUSHI: * <= *FALSE*
* {28:59,15,54} PUSHI: * <= 1e+20
* {29:60,14,55} JMPINT location 62 is UNsuccessful: false <= 1e+20
* {29:61,14,56} JMP location 64
9 / 2 is integer
* {30:64,15,57} PUSHI: * <= *FALSE*
* {30:65,16,58} PUSHI: * <= 9
* {30:66,17,59} PUSHI: * <= 2
* {30:67,16,60} DIV: * = 4.5 <= 9 / 2
* {30:68,15,61} JMPINT location 70 is UNsuccessful: false <= 4.5
* {30:69,15,62} JMP location 72
4.5 is integer
* {31:72,16,63} PUSHI: * <= *FALSE*
* {31:73,17,64} PUSHI: * <= 4.5
* {31:74,16,65} JMPINT location 76 is UNsuccessful: false <= 4.5
* {31:75,16,66} JMP location 78
9 / 3 is integer
* {32:78,17,67} PUSHI: * <= *FALSE*
* {32:79,18,68} PUSHI: * <= 9
* {32:80,19,69} PUSHI: * <= 3
* {32:81,18,70} DIV: * = 3 <= 9 / 3
* {32:82,17,71} JMPINT location 84 is successful: true <= 3
* {32:84,16,72} POPS: * <= * = *FALSE*
* {32:85,17,73} PUSHI: * <= *TRUE*
-0 == +0
* {33:86,18,74} PUSHI: * <= *FALSE*
* {33:87,19,75} PUSHI: * <= -0
* {33:88,20,76} PUSHI: * <= 0
* {33:89,18,77} JMPNEQ location 92 is UNsuccessful: false <= -0 != 0
* {33:90,17,78} POPS: * <= * = *FALSE*
* {33:91,18,79} PUSHI: * <= *TRUE*
-1 == +1
* {34:92,19,80} PUSHI: * <= *FALSE*
* {34:93,20,81} PUSHI: * <= -1
* {34:94,21,82} PUSHI: * <= 1
* {34:95,19,83} JMPNEQ location 98 is successful: true <= -1 != 1

// Finites
//
3.14
* {38:98,20,84} PUSHI: * <= 3.14
3.14 is finite
* {39:99,21,85} PUSHI: * <= *FALSE*
* {39:100,22,86} PUSHI: * <= 3.14
* {39:101,21,87} JMPFIN location 103 is successful: true <= 3.14
* {39:103,20,88} POPS: * <= * = *FALSE*
* {39:104,21,89} PUSHI: * <= *TRUE*
-3.14 is finite
* {40:105,22,90} PUSHI: * <= *FALSE*
* {40:106,23,91} PUSHI: * <= -3.14
* {40:107,22,92} JMPFIN location 109 is successful: true <= -3.14
* {40:109,21,93} POPS: * <= * = *FALSE*
* {40:110,22,94} PUSHI: * <= *TRUE*
314e-2 is finite
* {41:111,23,95} PUSHI: * <= *FALSE*
* {41:112,24,96} PUSHI: * <= 3.14
* {41:113,23,97} JMPFIN location 115 is successful: true <= 3.14
* {41:115,22,98} POPS: * <= * = *FALSE*
* {41:116,23,99} PUSHI: * <= *TRUE*
3.14 == 314e-2
* {42:117,24,100} PUSHI: * <= *FALSE*
* {42:118,25,101} PUSHI: * <= 3.14
* {42:119,26,102} PUSHI: * <= 3.14
* {42:120,24,103} JMPNEQ location 123 is UNsuccessful: false <= 3.14
                  != 3.14
* {42:121,23,104} POPS: * <= * = *FALSE*
* {42:122,24,105} PUSHI: * <= *TRUE*
3 is finite
    // integers are also finite numbers
* {44:123,25,106} PUSHI: * <= *FALSE*
* {43:124,26,107} PUSHI: * <= 3
* {44:125,25,108} JMPFIN location 127 is successful: true <= 3
* {44:127,24,109} POPS: * <= * = *FALSE*
* {44:128,25,110} PUSHI: * <= *TRUE*
5.7e-4
* {45:129,26,111} PUSHI: * <= 0.00057
123 / 1000 == 0.123
* {46:130,27,112} PUSHI: * <= *FALSE*
* {46:131,28,113} PUSHI: * <= 123
* {46:132,29,114} PUSHI: * <= 1000
* {46:133,28,115} DIV: * = 0.123 <= 123 / 1000
* {46:134,29,116} PUSHI: * <= 0.123
* {46:135,27,117} JMPNEQ location 138 is UNsuccessful: false <= 0.123
                  != 0.123
* {46:136,26,118} POPS: * <= * = *FALSE*
* {46:137,27,119} PUSHI: * <= *TRUE*
1 + 1e-16
    // Sum differs from 1 in 17'th place which is not stored
* {47:138,28,120} PUSHI: * <= 1
* {47:139,29,121} PUSHI: * <= 1e-16
* {48:140,28,122} ADD: * = 1 <= 1 + 1e-16
1 + 1e-16 == 1
* {49:141,29,123} PUSHI: * <= *FALSE*
* {49:142,30,124} PUSHI: * <= 1
* {49:143,31,125} PUSHI: * <= 1e-16
* {49:144,30,126} ADD: * = 1 <= 1 + 1e-16
* {49:145,31,127} PUSHI: * <= 1
* {49:146,29,128} JMPNEQ location 149 is UNsuccessful: false <= 1 != 1
* {49:147,28,129} POPS: * <= * = *FALSE*
* {49:148,29,130} PUSHI: * <= *TRUE*
1 + 1e-15
    // Sum differs from 1 in 16'th place which is stored in
    // part but is not output
* {50:149,30,131} PUSHI: * <= 1
* {50:150,31,132} PUSHI: * <= 1e-15
* {52:151,30,133} ADD: * = 1 <= 1 + 1e-15
1 + 1e-15 == 1
* {53:152,31,134} PUSHI: * <= *FALSE*
* {53:153,32,135} PUSHI: * <= 1
* {53:154,33,136} PUSHI: * <= 1e-15
* {53:155,32,137} ADD: * = 1 <= 1 + 1e-15
* {53:156,33,138} PUSHI: * <= 1
* {53:157,31,139} JMPNEQ location 160 is successful: true <= 1 != 1
1 + 4e-15
* {54:160,32,140} PUSHI: * <= 1
* {54:161,33,141} PUSHI: * <= 4e-15
* {54:162,32,142} ADD: * = 1 <= 1 + 4e-15
1 + 5e-15
* {55:163,33,143} PUSHI: * <= 1
* {55:164,34,144} PUSHI: * <= 5e-15
* {55:165,33,145} ADD: * = 1.00000000000001 <= 1 + 5e-15
1 + 1e-14
    // Sum differs from 1 in 15'th place which is stored
* {56:166,34,146} PUSHI: * <= 1
* {56:167,35,147} PUSHI: * <= 1e-14
* {57:168,34,148} ADD: * = 1.00000000000001 <= 1 + 1e-14
1 + 1e-14 == 1
* {58:169,35,149} PUSHI: * <= *FALSE*
* {58:170,36,150} PUSHI: * <= 1
* {58:171,37,151} PUSHI: * <= 1e-14
* {58:172,36,152} ADD: * = 1.00000000000001 <= 1 + 1e-14
* {58:173,37,153} PUSHI: * <= 1
* {58:174,35,154} JMPNEQ location 177 is successful: true
                  <= 1.00000000000001 != 1
+0
* {59:177,36,155} PUSHI: * <= 0
-0
* {60:178,37,156} PUSHI: * <= -0
+0 == -0
    // +0 and -0 are stored as different values,
    // But they are equal.
* {63:179,38,157} PUSHI: * <= *FALSE*
* {61:180,39,158} PUSHI: * <= 0
* {61:181,40,159} PUSHI: * <= -0
* {61:182,38,160} JMPNEQ location 185 is UNsuccessful: false <= 0 != -0
* {63:183,37,161} POPS: * <= * = *FALSE*
* {63:184,38,162} PUSHI: * <= *TRUE*
1e309 is finite
    // Outside the range of a finite number, i.e., outside
    // (-1e308.+1e308).
* {66:185,39,163} PUSHI: * <= *FALSE*
* {64:186,40,164} PUSHI: * <= inf
* {66:187,39,165} JMPFIN location 189 is UNsuccessful: false <= inf
* {66:188,39,166} JMP location 191

// Infinities
//
inf is infinite
* {70:191,40,167} PUSHI: * <= *FALSE*
* {70:192,41,168} PUSHI: * <= inf
* {70:193,40,169} JMPINF location 195 is successful: true <= inf
* {70:195,39,170} POPS: * <= * = *FALSE*
* {70:196,40,171} PUSHI: * <= *TRUE*
Inf is infinite
* {71:197,41,172} PUSHI: * <= *FALSE*
* {71:198,42,173} PUSHI: * <= inf
* {71:199,41,174} JMPINF location 201 is successful: true <= inf
* {71:201,40,175} POPS: * <= * = *FALSE*
* {71:202,41,176} PUSHI: * <= *TRUE*
-INF is infinite
* {72:203,42,177} PUSHI: * <= *FALSE*
* {72:204,43,178} PUSHI: * <= -inf
* {72:205,42,179} JMPINF location 207 is successful: true <= -inf
* {72:207,41,180} POPS: * <= * = *FALSE*
* {72:208,42,181} PUSHI: * <= *TRUE*
-1e500
    // If a number is too large to store, it is changed
    // to an infinity.
* {73:209,43,182} PUSHI: * <= -inf
+inf + +inf
    // Sum of two large unknown numbers is a large unknown number
* {76:210,44,183} PUSHI: * <= inf
* {76:211,45,184} PUSHI: * <= inf
* {77:212,44,185} ADD: * = inf <= inf + inf
+inf + -inf
    // Difference of two large unknown numbers is unknown
* {78:213,45,186} PUSHI: * <= inf
* {78:214,46,187} PUSHI: * <= -inf
!!! ERROR: invalid operand(s)
* {79:215,45,188} ADD: * = -nan <= inf + -inf
+inf * -inf
    // Product of two large unknown numbers is a large unknown number
* {80:216,46,189} PUSHI: * <= inf
* {80:217,47,190} PUSHI: * <= -inf
* {81:218,46,191} MUL: * = -inf <= inf * -inf
+inf / +inf
    // Ratio of two large unknown numbers is unknown
* {82:219,47,192} PUSHI: * <= inf
* {82:220,48,193} PUSHI: * <= inf
!!! ERROR: invalid operand(s)
* {83:221,47,194} DIV: * = -nan <= inf / inf
1 / +0
    // Positive finite number divided by very small but unknown
    // positive number is a large unknown positive number
* {84:222,48,195} PUSHI: * <= 1
* {84:223,49,196} PUSHI: * <= 0
!!! ERROR: divide by zero
* {86:224,48,197} DIV: * = inf <= 1 / 0
1 / -0
    // Positive finite number divided by very small but unknown
    // negative number is a large unknown negative number
* {87:225,49,198} PUSHI: * <= 1
* {87:226,50,199} PUSHI: * <= -0
!!! ERROR: divide by zero
* {89:227,49,200} DIV: * = -inf <= 1 / -0
+inf == +inf
    // Equality of two large unknown numbers is unknown
* {91:228,50,201} PUSHI: * <= *FALSE*
* {90:229,51,202} PUSHI: * <= inf
* {90:230,52,203} PUSHI: * <= inf
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {90:231,50,204} JMPNEQ location 234 with invalid operand(s)
[no output due to run-time error]
+inf == -inf
    // Two large unknown numbers of different signs are not equal
* {93:234,53,204} PUSHI: * <= *FALSE*
* {92:235,54,205} PUSHI: * <= inf
* {92:236,55,206} PUSHI: * <= -inf
* {92:237,53,207} JMPNEQ location 240 is successful: true <= inf != -inf

// Not-A-Numbers (more properly, unknown or uncomputable numbers)
//
// Also see +inf + -inf and +inf / +inf above
//
nan is undefined number
* {99:240,54,208} PUSHI: * <= *FALSE*
* {99:241,55,209} PUSHI: * <= nan
* {99:242,54,210} JMPNAN location 244 is successful: true <= nan
* {99:244,53,211} POPS: * <= * = *FALSE*
* {99:245,54,212} PUSHI: * <= *TRUE*
NaN is undefined number
* {100:246,55,213} PUSHI: * <= *FALSE*
* {100:247,56,214} PUSHI: * <= nan
* {100:248,55,215} JMPNAN location 250 is successful: true <= nan
* {100:250,54,216} POPS: * <= * = *FALSE*
* {100:251,55,217} PUSHI: * <= *TRUE*
-Nan is undefined number
* {101:252,56,218} PUSHI: * <= *FALSE*
* {101:253,57,219} PUSHI: * <= -nan
* {101:254,56,220} JMPNAN location 256 is successful: true <= -nan
* {101:256,55,221} POPS: * <= * = *FALSE*
* {101:257,56,222} PUSHI: * <= *TRUE*
1 + nan
* {102:258,57,223} PUSHI: * <= 1
* {102:259,58,224} PUSHI: * <= nan
* {102:260,57,225} ADD: * = nan <= 1 + nan
nan + 1
* {103:261,58,226} PUSHI: * <= nan
* {103:262,59,227} PUSHI: * <= 1
* {103:263,58,228} ADD: * = nan <= nan + 1
5 * nan
* {104:264,59,229} PUSHI: * <= 5
* {104:265,60,230} PUSHI: * <= nan
* {104:266,59,231} MUL: * = nan <= 5 * nan
1 / nan
* {105:267,60,232} PUSHI: * <= 1
* {105:268,61,233} PUSHI: * <= nan
* {105:269,60,234} DIV: * = nan <= 1 / nan
nan / 5
* {106:270,61,235} PUSHI: * <= nan
* {106:271,62,236} PUSHI: * <= 5
* {106:272,61,237} DIV: * = nan <= nan / 5
nan == 8
* {107:273,62,238} PUSHI: * <= *FALSE*
* {107:274,63,239} PUSHI: * <= nan
* {107:275,64,240} PUSHI: * <= 8
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {107:276,62,241} JMPNEQ location 279 with invalid operand(s)
[no output due to run-time error]
2 < nan
* {108:279,65,241} PUSHI: * <= *FALSE*
* {108:280,66,242} PUSHI: * <= 2
* {108:281,67,243} PUSHI: * <= nan
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {108:282,65,244} JMPGEQ location 285 with invalid operand(s)
[no output due to run-time error]
nan == nan
* {109:285,68,244} PUSHI: * <= *FALSE*
* {109:286,69,245} PUSHI: * <= nan
* {109:287,70,246} PUSHI: * <= nan
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {109:288,68,247} JMPNEQ location 291 with invalid operand(s)
[no output due to run-time error]
