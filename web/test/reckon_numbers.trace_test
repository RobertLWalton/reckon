* {0:0,1,1} PUSHI: FALSE <= FALSE
* {0:1,2,2} PUSHI: TRUE <= TRUE
// Reckon Language Numbers Test Data
//
// File:        reckon_numbers.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Sat Nov  2 05:49:09 EDT 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Integers
//
456
* {12:2,3,3} PUSHI: * <= 456
456 is integer
* {13:3,4,4} PUSHI: * <= FALSE
* {13:4,5,5} PUSHI: * <= 456
* {13:5,4,6} JMPINT location 7 is successful: true <= 456
* {13:7,3,7} POPS: * <= * = FALSE
* {13:8,4,8} PUSHI: * <= TRUE
4.56e2
* {14:9,5,9} PUSHI: * <= 456
4.56e2 is integer
* {15:10,6,10} PUSHI: * <= FALSE
* {15:11,7,11} PUSHI: * <= 456
* {15:12,6,12} JMPINT location 14 is successful: true <= 456
* {15:14,5,13} POPS: * <= * = FALSE
* {15:15,6,14} PUSHI: * <= TRUE
456 == 4.56e2
    // x == y tests whether x equals y
* {17:16,7,15} PUSHI: * <= FALSE
* {16:17,8,16} PUSHI: * <= 456
* {16:18,9,17} PUSHI: * <= 456
* {16:19,7,18} JMPNEQ location 22 is UNsuccessful: false <= 456 != 456
* {17:20,6,19} POPS: * <= * = FALSE
* {17:21,7,20} PUSHI: * <= TRUE
-456 == -45.6e1
* {18:22,8,21} PUSHI: * <= FALSE
* {18:23,9,22} PUSHI: * <= -456
* {18:24,10,23} PUSHI: * <= -456
* {18:25,8,24} JMPNEQ location 28 is UNsuccessful: false <= -456 != -456
* {18:26,7,25} POPS: * <= * = FALSE
* {18:27,8,26} PUSHI: * <= TRUE
123 == 12300e-2
* {19:28,9,27} PUSHI: * <= FALSE
* {19:29,10,28} PUSHI: * <= 123
* {19:30,11,29} PUSHI: * <= 123
* {19:31,9,30} JMPNEQ location 34 is UNsuccessful: false <= 123 != 123
* {19:32,8,31} POPS: * <= * = FALSE
* {19:33,9,32} PUSHI: * <= TRUE
1e20 is integer
    // FALSE because value not in range (-1e15,+1e15)
* {21:34,10,33} PUSHI: * <= FALSE
* {20:35,11,34} PUSHI: * <= 1e+20
* {21:36,10,35} JMPINT location 38 is UNsuccessful: false <= 1e+20
* {21:37,10,36} JMP location 40
9 / 2 is integer
* {22:40,11,37} PUSHI: * <= FALSE
* {22:41,12,38} PUSHI: * <= 9
* {22:42,13,39} PUSHI: * <= 2
* {22:43,12,40} DIV: * = 4.5 <= 9 / 2
* {22:44,11,41} JMPINT location 46 is UNsuccessful: false <= 4.5
* {22:45,11,42} JMP location 48
4.5 is integer
* {23:48,12,43} PUSHI: * <= FALSE
* {23:49,13,44} PUSHI: * <= 4.5
* {23:50,12,45} JMPINT location 52 is UNsuccessful: false <= 4.5
* {23:51,12,46} JMP location 54
9 / 3 is integer
* {24:54,13,47} PUSHI: * <= FALSE
* {24:55,14,48} PUSHI: * <= 9
* {24:56,15,49} PUSHI: * <= 3
* {24:57,14,50} DIV: * = 3 <= 9 / 3
* {24:58,13,51} JMPINT location 60 is successful: true <= 3
* {24:60,12,52} POPS: * <= * = FALSE
* {24:61,13,53} PUSHI: * <= TRUE
-0 == +0
* {25:62,14,54} PUSHI: * <= FALSE
* {25:63,15,55} PUSHI: * <= -0
* {25:64,16,56} PUSHI: * <= 0
* {25:65,14,57} JMPNEQ location 68 is UNsuccessful: false <= -0 != 0
* {25:66,13,58} POPS: * <= * = FALSE
* {25:67,14,59} PUSHI: * <= TRUE
-1 == +1
* {26:68,15,60} PUSHI: * <= FALSE
* {26:69,16,61} PUSHI: * <= -1
* {26:70,17,62} PUSHI: * <= 1
* {26:71,15,63} JMPNEQ location 74 is successful: true <= -1 != 1

// Finites
//
3.14
* {30:74,16,64} PUSHI: * <= 3.14
3.14 is finite
* {31:75,17,65} PUSHI: * <= FALSE
* {31:76,18,66} PUSHI: * <= 3.14
* {31:77,17,67} JMPFIN location 79 is successful: true <= 3.14
* {31:79,16,68} POPS: * <= * = FALSE
* {31:80,17,69} PUSHI: * <= TRUE
-3.14 is finite
* {32:81,18,70} PUSHI: * <= FALSE
* {32:82,19,71} PUSHI: * <= -3.14
* {32:83,18,72} JMPFIN location 85 is successful: true <= -3.14
* {32:85,17,73} POPS: * <= * = FALSE
* {32:86,18,74} PUSHI: * <= TRUE
314e-2 is finite
* {33:87,19,75} PUSHI: * <= FALSE
* {33:88,20,76} PUSHI: * <= 3.14
* {33:89,19,77} JMPFIN location 91 is successful: true <= 3.14
* {33:91,18,78} POPS: * <= * = FALSE
* {33:92,19,79} PUSHI: * <= TRUE
3.14 == 314e-2
* {34:93,20,80} PUSHI: * <= FALSE
* {34:94,21,81} PUSHI: * <= 3.14
* {34:95,22,82} PUSHI: * <= 3.14
* {34:96,20,83} JMPNEQ location 99 is UNsuccessful: false <= 3.14
                != 3.14
* {34:97,19,84} POPS: * <= * = FALSE
* {34:98,20,85} PUSHI: * <= TRUE
3 is finite
    // integers are also finite numbers
* {36:99,21,86} PUSHI: * <= FALSE
* {35:100,22,87} PUSHI: * <= 3
* {36:101,21,88} JMPFIN location 103 is successful: true <= 3
* {36:103,20,89} POPS: * <= * = FALSE
* {36:104,21,90} PUSHI: * <= TRUE
5.7e-4
* {37:105,22,91} PUSHI: * <= 0.00057
123 / 1000 == 0.123
* {38:106,23,92} PUSHI: * <= FALSE
* {38:107,24,93} PUSHI: * <= 123
* {38:108,25,94} PUSHI: * <= 1000
* {38:109,24,95} DIV: * = 0.123 <= 123 / 1000
* {38:110,25,96} PUSHI: * <= 0.123
* {38:111,23,97} JMPNEQ location 114 is UNsuccessful: false <= 0.123
                 != 0.123
* {38:112,22,98} POPS: * <= * = FALSE
* {38:113,23,99} PUSHI: * <= TRUE
1 + 1e-16
    // Sum differs from 1 in 17'th place which is not stored
* {39:114,24,100} PUSHI: * <= 1
* {39:115,25,101} PUSHI: * <= 1e-16
* {40:116,24,102} ADD: * = 1 <= 1 + 1e-16
1 + 1e-16 == 1
* {41:117,25,103} PUSHI: * <= FALSE
* {41:118,26,104} PUSHI: * <= 1
* {41:119,27,105} PUSHI: * <= 1e-16
* {41:120,26,106} ADD: * = 1 <= 1 + 1e-16
* {41:121,27,107} PUSHI: * <= 1
* {41:122,25,108} JMPNEQ location 125 is UNsuccessful: false <= 1 != 1
* {41:123,24,109} POPS: * <= * = FALSE
* {41:124,25,110} PUSHI: * <= TRUE
1 + 1e-15
    // Sum differs from 1 in 16'th place which is stored in
    // part but is not output
* {42:125,26,111} PUSHI: * <= 1
* {42:126,27,112} PUSHI: * <= 1e-15
* {44:127,26,113} ADD: * = 1 <= 1 + 1e-15
1 + 1e-15 == 1
* {45:128,27,114} PUSHI: * <= FALSE
* {45:129,28,115} PUSHI: * <= 1
* {45:130,29,116} PUSHI: * <= 1e-15
* {45:131,28,117} ADD: * = 1 <= 1 + 1e-15
* {45:132,29,118} PUSHI: * <= 1
* {45:133,27,119} JMPNEQ location 136 is successful: true <= 1 != 1
1 + 4e-15
* {46:136,28,120} PUSHI: * <= 1
* {46:137,29,121} PUSHI: * <= 4e-15
* {46:138,28,122} ADD: * = 1 <= 1 + 4e-15
1 + 5e-15
* {47:139,29,123} PUSHI: * <= 1
* {47:140,30,124} PUSHI: * <= 5e-15
* {47:141,29,125} ADD: * = 1.00000000000001 <= 1 + 5e-15
1 + 1e-14
    // Sum differs from 1 in 15'th place which is stored
* {48:142,30,126} PUSHI: * <= 1
* {48:143,31,127} PUSHI: * <= 1e-14
* {49:144,30,128} ADD: * = 1.00000000000001 <= 1 + 1e-14
1 + 1e-14 == 1
* {50:145,31,129} PUSHI: * <= FALSE
* {50:146,32,130} PUSHI: * <= 1
* {50:147,33,131} PUSHI: * <= 1e-14
* {50:148,32,132} ADD: * = 1.00000000000001 <= 1 + 1e-14
* {50:149,33,133} PUSHI: * <= 1
* {50:150,31,134} JMPNEQ location 153 is successful: true
                  <= 1.00000000000001 != 1
+0
* {51:153,32,135} PUSHI: * <= 0
-0
* {52:154,33,136} PUSHI: * <= -0
+0 == -0
    // +0 and -0 are stored as different values,
    // But they are equal.
* {55:155,34,137} PUSHI: * <= FALSE
* {53:156,35,138} PUSHI: * <= 0
* {53:157,36,139} PUSHI: * <= -0
* {53:158,34,140} JMPNEQ location 161 is UNsuccessful: false <= 0 != -0
* {55:159,33,141} POPS: * <= * = FALSE
* {55:160,34,142} PUSHI: * <= TRUE
1e309 is finite
    // Outside the range of a finite number, i.e., outside
    // (-1e308.+1e308).
* {58:161,35,143} PUSHI: * <= FALSE
* {56:162,36,144} PUSHI: * <= inf
* {58:163,35,145} JMPFIN location 165 is UNsuccessful: false <= inf
* {58:164,35,146} JMP location 167

// Infinities
//
inf
* {62:167,36,147} PUSHI: * <= inf
Inf
* {63:168,37,148} PUSHI: * <= inf
-INF
* {64:169,38,149} PUSHI: * <= -inf
-1e500
* {65:170,39,150} PUSHI: * <= -inf
+inf + +inf
    // Sum of two large unknown numbers is a large unknown number
* {66:171,40,151} PUSHI: * <= inf
* {66:172,41,152} PUSHI: * <= inf
* {67:173,40,153} ADD: * = inf <= inf + inf
+inf + -inf
    // Difference of two large unknown numbers is unknown
* {68:174,41,154} PUSHI: * <= inf
* {68:175,42,155} PUSHI: * <= -inf
!!! ERROR: invalid operand(s)
* {69:176,41,156} ADD: * = -nan <= inf + -inf
+inf * -inf
    // Product of two large unknown numbers is a large unknown number
* {70:177,42,157} PUSHI: * <= inf
* {70:178,43,158} PUSHI: * <= -inf
* {71:179,42,159} MUL: * = -inf <= inf * -inf
+inf / +inf
    // Ratio of two large unknown numbers is unknown
* {72:180,43,160} PUSHI: * <= inf
* {72:181,44,161} PUSHI: * <= inf
!!! ERROR: invalid operand(s)
* {73:182,43,162} DIV: * = -nan <= inf / inf
1 / +0
    // Positive finite number divided by very small but unknown
    // positive number is a large unknown positive number
* {74:183,44,163} PUSHI: * <= 1
* {74:184,45,164} PUSHI: * <= 0
!!! ERROR: divide by zero
* {76:185,44,165} DIV: * = inf <= 1 / 0
1 / -0
    // Positive finite number divided by very small but unknown
    // negative number is a large unknown negative number
* {77:186,45,166} PUSHI: * <= 1
* {77:187,46,167} PUSHI: * <= -0
!!! ERROR: divide by zero
* {79:188,45,168} DIV: * = -inf <= 1 / -0
+inf == +inf
    // Equality of two large unknown numbers is unknown
* {81:189,46,169} PUSHI: * <= FALSE
* {80:190,47,170} PUSHI: * <= inf
* {80:191,48,171} PUSHI: * <= inf
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {80:192,46,172} JMPNEQ location 195 with invalid operand(s)
[no output due to run-time error]
+inf == -inf
    // Two large unknown numbers of different signs are not equal
* {83:195,49,172} PUSHI: * <= FALSE
* {82:196,50,173} PUSHI: * <= inf
* {82:197,51,174} PUSHI: * <= -inf
* {82:198,49,175} JMPNEQ location 201 is successful: true <= inf != -inf

// Not-A-Numbers (more properly, unknown or uncomputable numbers)
//
// Also see +inf + -inf and +inf / +inf above
//
nan
* {89:201,50,176} PUSHI: * <= nan
NaN
* {90:202,51,177} PUSHI: * <= nan
-Nan
* {91:203,52,178} PUSHI: * <= -nan
1 + nan
* {92:204,53,179} PUSHI: * <= 1
* {92:205,54,180} PUSHI: * <= nan
* {92:206,53,181} ADD: * = nan <= 1 + nan
nan + 1
* {93:207,54,182} PUSHI: * <= nan
* {93:208,55,183} PUSHI: * <= 1
* {93:209,54,184} ADD: * = nan <= nan + 1
5 * nan
* {94:210,55,185} PUSHI: * <= 5
* {94:211,56,186} PUSHI: * <= nan
* {94:212,55,187} MUL: * = nan <= 5 * nan
1 / nan
* {95:213,56,188} PUSHI: * <= 1
* {95:214,57,189} PUSHI: * <= nan
* {95:215,56,190} DIV: * = nan <= 1 / nan
nan / 5
* {96:216,57,191} PUSHI: * <= nan
* {96:217,58,192} PUSHI: * <= 5
* {96:218,57,193} DIV: * = nan <= nan / 5
nan == 8
* {97:219,58,194} PUSHI: * <= FALSE
* {97:220,59,195} PUSHI: * <= nan
* {97:221,60,196} PUSHI: * <= 8
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {97:222,58,197} JMPNEQ location 225 with invalid operand(s)
[no output due to run-time error]
2 < nan
* {98:225,61,197} PUSHI: * <= FALSE
* {98:226,62,198} PUSHI: * <= 2
* {98:227,63,199} PUSHI: * <= nan
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {98:228,61,200} JMPGEQ location 231 with invalid operand(s)
[no output due to run-time error]
