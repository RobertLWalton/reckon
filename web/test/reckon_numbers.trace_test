* {0:0,1,1} PUSHI: FALSE <= FALSE
* {0:1,2,2} PUSHI: TRUE <= TRUE
// Reckon Language Numbers Test Data
//
// File:        reckon_numbers.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Nov  8 01:57:30 PM EST 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Numbers
//
100 is number
* {12:2,3,3} PUSHI: * <= FALSE
* {12:3,4,4} PUSHI: * <= 100
* {12:4,3,5} JMPNUM location 6 is successful: true <= 100
* {12:6,2,6} POPS: * <= * = FALSE
* {12:7,3,7} PUSHI: * <= TRUE
3.141529 is number
* {13:8,4,8} PUSHI: * <= FALSE
* {13:9,5,9} PUSHI: * <= 3.141529
* {13:10,4,10} JMPNUM location 12 is successful: true <= 3.141529
* {13:12,3,11} POPS: * <= * = FALSE
* {13:13,4,12} PUSHI: * <= TRUE
+inf is number
* {14:14,5,13} PUSHI: * <= FALSE
* {14:15,6,14} PUSHI: * <= inf
* {14:16,5,15} JMPNUM location 18 is successful: true <= inf
* {14:18,4,16} POPS: * <= * = FALSE
* {14:19,5,17} PUSHI: * <= TRUE
nan is number
* {15:20,6,18} PUSHI: * <= FALSE
* {15:21,7,19} PUSHI: * <= nan
* {15:22,6,20} JMPNUM location 24 is successful: true <= nan
* {15:24,5,21} POPS: * <= * = FALSE
* {15:25,6,22} PUSHI: * <= TRUE

// Integers
//
456
* {19:26,7,23} PUSHI: * <= 456
456 is integer
* {20:27,8,24} PUSHI: * <= FALSE
* {20:28,9,25} PUSHI: * <= 456
* {20:29,8,26} JMPINT location 31 is successful: true <= 456
* {20:31,7,27} POPS: * <= * = FALSE
* {20:32,8,28} PUSHI: * <= TRUE
4.56e2
* {21:33,9,29} PUSHI: * <= 456
4.56e2 is integer
* {22:34,10,30} PUSHI: * <= FALSE
* {22:35,11,31} PUSHI: * <= 456
* {22:36,10,32} JMPINT location 38 is successful: true <= 456
* {22:38,9,33} POPS: * <= * = FALSE
* {22:39,10,34} PUSHI: * <= TRUE
456 == 4.56e2
    // x == y tests whether x equals y
* {24:40,11,35} PUSHI: * <= FALSE
* {23:41,12,36} PUSHI: * <= 456
* {23:42,13,37} PUSHI: * <= 456
* {23:43,11,38} JMPNEQ location 46 is UNsuccessful: false <= 456 != 456
* {24:44,10,39} POPS: * <= * = FALSE
* {24:45,11,40} PUSHI: * <= TRUE
-456 == -45.6e1
* {25:46,12,41} PUSHI: * <= FALSE
* {25:47,13,42} PUSHI: * <= -456
* {25:48,14,43} PUSHI: * <= -456
* {25:49,12,44} JMPNEQ location 52 is UNsuccessful: false <= -456
                != -456
* {25:50,11,45} POPS: * <= * = FALSE
* {25:51,12,46} PUSHI: * <= TRUE
123 == 12300e-2
* {26:52,13,47} PUSHI: * <= FALSE
* {26:53,14,48} PUSHI: * <= 123
* {26:54,15,49} PUSHI: * <= 123
* {26:55,13,50} JMPNEQ location 58 is UNsuccessful: false <= 123 != 123
* {26:56,12,51} POPS: * <= * = FALSE
* {26:57,13,52} PUSHI: * <= TRUE
1e20 is integer
    // FALSE because value not in range (-1e15,+1e15)
* {28:58,14,53} PUSHI: * <= FALSE
* {27:59,15,54} PUSHI: * <= 1e+20
* {28:60,14,55} JMPINT location 62 is UNsuccessful: false <= 1e+20
* {28:61,14,56} JMP location 64
9 / 2 is integer
* {29:64,15,57} PUSHI: * <= FALSE
* {29:65,16,58} PUSHI: * <= 9
* {29:66,17,59} PUSHI: * <= 2
* {29:67,16,60} DIV: * = 4.5 <= 9 / 2
* {29:68,15,61} JMPINT location 70 is UNsuccessful: false <= 4.5
* {29:69,15,62} JMP location 72
4.5 is integer
* {30:72,16,63} PUSHI: * <= FALSE
* {30:73,17,64} PUSHI: * <= 4.5
* {30:74,16,65} JMPINT location 76 is UNsuccessful: false <= 4.5
* {30:75,16,66} JMP location 78
9 / 3 is integer
* {31:78,17,67} PUSHI: * <= FALSE
* {31:79,18,68} PUSHI: * <= 9
* {31:80,19,69} PUSHI: * <= 3
* {31:81,18,70} DIV: * = 3 <= 9 / 3
* {31:82,17,71} JMPINT location 84 is successful: true <= 3
* {31:84,16,72} POPS: * <= * = FALSE
* {31:85,17,73} PUSHI: * <= TRUE
-0 == +0
* {32:86,18,74} PUSHI: * <= FALSE
* {32:87,19,75} PUSHI: * <= -0
* {32:88,20,76} PUSHI: * <= 0
* {32:89,18,77} JMPNEQ location 92 is UNsuccessful: false <= -0 != 0
* {32:90,17,78} POPS: * <= * = FALSE
* {32:91,18,79} PUSHI: * <= TRUE
-1 == +1
* {33:92,19,80} PUSHI: * <= FALSE
* {33:93,20,81} PUSHI: * <= -1
* {33:94,21,82} PUSHI: * <= 1
* {33:95,19,83} JMPNEQ location 98 is successful: true <= -1 != 1

// Finites
//
3.14
* {37:98,20,84} PUSHI: * <= 3.14
3.14 is finite
* {38:99,21,85} PUSHI: * <= FALSE
* {38:100,22,86} PUSHI: * <= 3.14
* {38:101,21,87} JMPFIN location 103 is successful: true <= 3.14
* {38:103,20,88} POPS: * <= * = FALSE
* {38:104,21,89} PUSHI: * <= TRUE
-3.14 is finite
* {39:105,22,90} PUSHI: * <= FALSE
* {39:106,23,91} PUSHI: * <= -3.14
* {39:107,22,92} JMPFIN location 109 is successful: true <= -3.14
* {39:109,21,93} POPS: * <= * = FALSE
* {39:110,22,94} PUSHI: * <= TRUE
314e-2 is finite
* {40:111,23,95} PUSHI: * <= FALSE
* {40:112,24,96} PUSHI: * <= 3.14
* {40:113,23,97} JMPFIN location 115 is successful: true <= 3.14
* {40:115,22,98} POPS: * <= * = FALSE
* {40:116,23,99} PUSHI: * <= TRUE
3.14 == 314e-2
* {41:117,24,100} PUSHI: * <= FALSE
* {41:118,25,101} PUSHI: * <= 3.14
* {41:119,26,102} PUSHI: * <= 3.14
* {41:120,24,103} JMPNEQ location 123 is UNsuccessful: false <= 3.14
                  != 3.14
* {41:121,23,104} POPS: * <= * = FALSE
* {41:122,24,105} PUSHI: * <= TRUE
3 is finite
    // integers are also finite numbers
* {43:123,25,106} PUSHI: * <= FALSE
* {42:124,26,107} PUSHI: * <= 3
* {43:125,25,108} JMPFIN location 127 is successful: true <= 3
* {43:127,24,109} POPS: * <= * = FALSE
* {43:128,25,110} PUSHI: * <= TRUE
5.7e-4
* {44:129,26,111} PUSHI: * <= 0.00057
123 / 1000 == 0.123
* {45:130,27,112} PUSHI: * <= FALSE
* {45:131,28,113} PUSHI: * <= 123
* {45:132,29,114} PUSHI: * <= 1000
* {45:133,28,115} DIV: * = 0.123 <= 123 / 1000
* {45:134,29,116} PUSHI: * <= 0.123
* {45:135,27,117} JMPNEQ location 138 is UNsuccessful: false <= 0.123
                  != 0.123
* {45:136,26,118} POPS: * <= * = FALSE
* {45:137,27,119} PUSHI: * <= TRUE
1 + 1e-16
    // Sum differs from 1 in 17'th place which is not stored
* {46:138,28,120} PUSHI: * <= 1
* {46:139,29,121} PUSHI: * <= 1e-16
* {47:140,28,122} ADD: * = 1 <= 1 + 1e-16
1 + 1e-16 == 1
* {48:141,29,123} PUSHI: * <= FALSE
* {48:142,30,124} PUSHI: * <= 1
* {48:143,31,125} PUSHI: * <= 1e-16
* {48:144,30,126} ADD: * = 1 <= 1 + 1e-16
* {48:145,31,127} PUSHI: * <= 1
* {48:146,29,128} JMPNEQ location 149 is UNsuccessful: false <= 1 != 1
* {48:147,28,129} POPS: * <= * = FALSE
* {48:148,29,130} PUSHI: * <= TRUE
1 + 1e-15
    // Sum differs from 1 in 16'th place which is stored in
    // part but is not output
* {49:149,30,131} PUSHI: * <= 1
* {49:150,31,132} PUSHI: * <= 1e-15
* {51:151,30,133} ADD: * = 1 <= 1 + 1e-15
1 + 1e-15 == 1
* {52:152,31,134} PUSHI: * <= FALSE
* {52:153,32,135} PUSHI: * <= 1
* {52:154,33,136} PUSHI: * <= 1e-15
* {52:155,32,137} ADD: * = 1 <= 1 + 1e-15
* {52:156,33,138} PUSHI: * <= 1
* {52:157,31,139} JMPNEQ location 160 is successful: true <= 1 != 1
1 + 4e-15
* {53:160,32,140} PUSHI: * <= 1
* {53:161,33,141} PUSHI: * <= 4e-15
* {53:162,32,142} ADD: * = 1 <= 1 + 4e-15
1 + 5e-15
* {54:163,33,143} PUSHI: * <= 1
* {54:164,34,144} PUSHI: * <= 5e-15
* {54:165,33,145} ADD: * = 1.00000000000001 <= 1 + 5e-15
1 + 1e-14
    // Sum differs from 1 in 15'th place which is stored
* {55:166,34,146} PUSHI: * <= 1
* {55:167,35,147} PUSHI: * <= 1e-14
* {56:168,34,148} ADD: * = 1.00000000000001 <= 1 + 1e-14
1 + 1e-14 == 1
* {57:169,35,149} PUSHI: * <= FALSE
* {57:170,36,150} PUSHI: * <= 1
* {57:171,37,151} PUSHI: * <= 1e-14
* {57:172,36,152} ADD: * = 1.00000000000001 <= 1 + 1e-14
* {57:173,37,153} PUSHI: * <= 1
* {57:174,35,154} JMPNEQ location 177 is successful: true
                  <= 1.00000000000001 != 1
+0
* {58:177,36,155} PUSHI: * <= 0
-0
* {59:178,37,156} PUSHI: * <= -0
+0 == -0
    // +0 and -0 are stored as different values,
    // But they are equal.
* {62:179,38,157} PUSHI: * <= FALSE
* {60:180,39,158} PUSHI: * <= 0
* {60:181,40,159} PUSHI: * <= -0
* {60:182,38,160} JMPNEQ location 185 is UNsuccessful: false <= 0 != -0
* {62:183,37,161} POPS: * <= * = FALSE
* {62:184,38,162} PUSHI: * <= TRUE
1e309 is finite
    // Outside the range of a finite number, i.e., outside
    // (-1e308.+1e308).
* {65:185,39,163} PUSHI: * <= FALSE
* {63:186,40,164} PUSHI: * <= inf
* {65:187,39,165} JMPFIN location 189 is UNsuccessful: false <= inf
* {65:188,39,166} JMP location 191

// Infinities
//
inf is infinite
* {69:191,40,167} PUSHI: * <= FALSE
* {69:192,41,168} PUSHI: * <= inf
* {69:193,40,169} JMPINF location 195 is successful: true <= inf
* {69:195,39,170} POPS: * <= * = FALSE
* {69:196,40,171} PUSHI: * <= TRUE
Inf is infinite
* {70:197,41,172} PUSHI: * <= FALSE
* {70:198,42,173} PUSHI: * <= inf
* {70:199,41,174} JMPINF location 201 is successful: true <= inf
* {70:201,40,175} POPS: * <= * = FALSE
* {70:202,41,176} PUSHI: * <= TRUE
-INF is infinite
* {71:203,42,177} PUSHI: * <= FALSE
* {71:204,43,178} PUSHI: * <= -inf
* {71:205,42,179} JMPINF location 207 is successful: true <= -inf
* {71:207,41,180} POPS: * <= * = FALSE
* {71:208,42,181} PUSHI: * <= TRUE
-1e500
    // If a number is too large to store, it is changed
    // to an infinity.
* {72:209,43,182} PUSHI: * <= -inf
+inf + +inf
    // Sum of two large unknown numbers is a large unknown number
* {75:210,44,183} PUSHI: * <= inf
* {75:211,45,184} PUSHI: * <= inf
* {76:212,44,185} ADD: * = inf <= inf + inf
+inf + -inf
    // Difference of two large unknown numbers is unknown
* {77:213,45,186} PUSHI: * <= inf
* {77:214,46,187} PUSHI: * <= -inf
!!! ERROR: invalid operand(s)
* {78:215,45,188} ADD: * = -nan <= inf + -inf
+inf * -inf
    // Product of two large unknown numbers is a large unknown number
* {79:216,46,189} PUSHI: * <= inf
* {79:217,47,190} PUSHI: * <= -inf
* {80:218,46,191} MUL: * = -inf <= inf * -inf
+inf / +inf
    // Ratio of two large unknown numbers is unknown
* {81:219,47,192} PUSHI: * <= inf
* {81:220,48,193} PUSHI: * <= inf
!!! ERROR: invalid operand(s)
* {82:221,47,194} DIV: * = -nan <= inf / inf
1 / +0
    // Positive finite number divided by very small but unknown
    // positive number is a large unknown positive number
* {83:222,48,195} PUSHI: * <= 1
* {83:223,49,196} PUSHI: * <= 0
!!! ERROR: divide by zero
* {85:224,48,197} DIV: * = inf <= 1 / 0
1 / -0
    // Positive finite number divided by very small but unknown
    // negative number is a large unknown negative number
* {86:225,49,198} PUSHI: * <= 1
* {86:226,50,199} PUSHI: * <= -0
!!! ERROR: divide by zero
* {88:227,49,200} DIV: * = -inf <= 1 / -0
+inf == +inf
    // Equality of two large unknown numbers is unknown
* {90:228,50,201} PUSHI: * <= FALSE
* {89:229,51,202} PUSHI: * <= inf
* {89:230,52,203} PUSHI: * <= inf
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {89:231,50,204} JMPNEQ location 234 with invalid operand(s)
[no output due to run-time error]
+inf == -inf
    // Two large unknown numbers of different signs are not equal
* {92:234,53,204} PUSHI: * <= FALSE
* {91:235,54,205} PUSHI: * <= inf
* {91:236,55,206} PUSHI: * <= -inf
* {91:237,53,207} JMPNEQ location 240 is successful: true <= inf != -inf

// Not-A-Numbers (more properly, unknown or uncomputable numbers)
//
// Also see +inf + -inf and +inf / +inf above
//
nan is undefined number
* {98:240,54,208} PUSHI: * <= FALSE
* {98:241,55,209} PUSHI: * <= nan
* {98:242,54,210} JMPNAN location 244 is successful: true <= nan
* {98:244,53,211} POPS: * <= * = FALSE
* {98:245,54,212} PUSHI: * <= TRUE
NaN is undefined number
* {99:246,55,213} PUSHI: * <= FALSE
* {99:247,56,214} PUSHI: * <= nan
* {99:248,55,215} JMPNAN location 250 is successful: true <= nan
* {99:250,54,216} POPS: * <= * = FALSE
* {99:251,55,217} PUSHI: * <= TRUE
-Nan is undefined number
* {100:252,56,218} PUSHI: * <= FALSE
* {100:253,57,219} PUSHI: * <= -nan
* {100:254,56,220} JMPNAN location 256 is successful: true <= -nan
* {100:256,55,221} POPS: * <= * = FALSE
* {100:257,56,222} PUSHI: * <= TRUE
1 + nan
* {101:258,57,223} PUSHI: * <= 1
* {101:259,58,224} PUSHI: * <= nan
* {101:260,57,225} ADD: * = nan <= 1 + nan
nan + 1
* {102:261,58,226} PUSHI: * <= nan
* {102:262,59,227} PUSHI: * <= 1
* {102:263,58,228} ADD: * = nan <= nan + 1
5 * nan
* {103:264,59,229} PUSHI: * <= 5
* {103:265,60,230} PUSHI: * <= nan
* {103:266,59,231} MUL: * = nan <= 5 * nan
1 / nan
* {104:267,60,232} PUSHI: * <= 1
* {104:268,61,233} PUSHI: * <= nan
* {104:269,60,234} DIV: * = nan <= 1 / nan
nan / 5
* {105:270,61,235} PUSHI: * <= nan
* {105:271,62,236} PUSHI: * <= 5
* {105:272,61,237} DIV: * = nan <= nan / 5
nan == 8
* {106:273,62,238} PUSHI: * <= FALSE
* {106:274,63,239} PUSHI: * <= nan
* {106:275,64,240} PUSHI: * <= 8
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {106:276,62,241} JMPNEQ location 279 with invalid operand(s)
[no output due to run-time error]
2 < nan
* {107:279,65,241} PUSHI: * <= FALSE
* {107:280,66,242} PUSHI: * <= 2
* {107:281,67,243} PUSHI: * <= nan
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {107:282,65,244} JMPGEQ location 285 with invalid operand(s)
[no output due to run-time error]
nan == nan
* {108:285,68,244} PUSHI: * <= FALSE
* {108:286,69,245} PUSHI: * <= nan
* {108:287,70,246} PUSHI: * <= nan
!!! FATAL ERROR:  invalid operands to a conditional jump instruction
* {108:288,68,247} JMPNEQ location 291 with invalid operand(s)
[no output due to run-time error]
