// Reckon Language List Test Data
//
// File:        reckon_lists.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Feb 14 03:36:52 AM EST 2025
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// List Construction
//
X = [1, 2, 3, 4]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|X|} =
     [{|1|}, {|2|}, {|3|}, {|4|}]|}
next X = [1 + 0, 1 + 1, 1 + 2, 1 + 3]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next X|} =
     [{|{|1|} + {|0|}|}, {|{|1|} + {|1|}|}, {|{|1|} + {|2|}|},
      {|{|1|} + {|3|}|}]|}
Y = [10, 20, X, 30]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Y|} =
     [{|10|}, {|20|}, {|X|}, {|30|}]|}
Z = [[1, 2, 3]]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z|} =
     [[{|1|}, {|2|}, {|3|}]]|}
next Z = [ "Baker", "Bill", "Bob", "Butch" ]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next Z|} =
     [{|"Baker"|}, {|"Bill"|}, {|"Bob"|}, {|"Butch"|}]|}

// List Element Access
//
Z3 = Y[3]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z3|} =
     {|Y [3]|}|}
Z6 = Y[6]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z6|} =
     {|Y [6]|}|}
Z10 = Y[10]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Z10|} =
     {|Y [10]|}|}

// List Element Assignment
//
X[1] = 20
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|X [1]|} =
     {|20|}|}
X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}
X[0], X[2] = X[2], X[0]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|{|X [0]|}, {|X [2]|}|} = {|{|X [2]|}, {|X [0]|}|}|}
X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}

TOP, X[3] = X[3], 400
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|{|TOP|}, {|X [3]|}|} = {|{|X [3]|}, {|400|}|}|}
X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}

// List Element Modification
//
X[1] + = 1000
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|X [1]|}
     [< + = >] {|1000|}|}
X[0] * = 1000
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|X [0]|}
     [< * = >] {|1000|}|}
X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}

// List Push and Pop
//
next X = [ 1, 2, 3 ]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next X|} =
     [{|1|}, {|2|}, {|3|}]|}
X[] = 4
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|X []|} =
     {|4|}|}
X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}
next Z = X[]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next Z|} =
     {|X []|}|}
X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|X|}

// Cascaded List Labels
//
next Y = [ 10, 20, 30 ]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next Y|} =
     [{|10|}, {|20|}, {|30|}]|}
Y[1] = X
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Y [1]|} =
     {|X|}|}
Y
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|Y|}
Y[1][0]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|Y [1] [0]|}
Y[1][]
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|Y [1] []|}
Y[1][] = 5000
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|Y [1] []|} =
     {|5000|}|}
Y
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|Y|}
