function add (X) (Y):
                    ^
    [11:0;5] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    Z = X + Y
        ^
    [12:1;6] PUSHA T_PUSH 0 1 0; [< X * >]
    Z = X + Y
            ^
    [12:2;7] PUSHA T_PUSH 1 1 0; [< Y * >]
    Z = X + Y
        ^^^^^
    [12:3;6] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; Z
    return Z
           ^
    [13:4;7] PUSHS T_PUSH 0 0 0; [< Z * >]
    return Z
    ^^^^^^^^
    [13:5;6] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [6;6] LABEL 1
    return Z
            ^
    [11:0;6] BEGF T_BEGF 2 1 7 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    [13:6;3] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
Z = add (5) (7)
         ^
    [15:7;4] PUSHI T_PUSH 0 0 0 5; *
Z = add (5) (7)
             ^
    [15:8;5] PUSHI T_PUSH 0 0 0 7; *
Z = add (5) (7)
    ^^^^^^^^^^^
    [15:9;4] CALLG T_CALLG 2 1 0 PACKED_VEC; [< add Z >]
function (X) sub (Y): return X - Y;
                      ^
    [17:10;6] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sub X Y >]
function (X) sub (Y): return X - Y;
                             ^
    [17:11;7] PUSHA T_PUSH 0 1 0; [< X * >]
function (X) sub (Y): return X - Y;
                                 ^
    [17:12;8] PUSHA T_PUSH 1 1 0; [< Y * >]
function (X) sub (Y): return X - Y;
                             ^^^^^
    [17:13;7] SUB T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function (X) sub (Y): return X - Y;
                      ^^^^^^^^^^^^
    [17:14;6] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function (X) sub (Y): return X - Y;
                                  ^
    [17:10;6] BEGF T_BEGF 2 1 6 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sub X Y >]
    [17:15;4] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
W = (5) sub (7)
     ^
    [19:16;5] PUSHI T_PUSH 0 0 0 5; *
W = (5) sub (7)
             ^
    [19:17;6] PUSHI T_PUSH 0 0 0 7; *
W = (5) sub (7)
    ^^^^^^^^^^^
    [19:18;5] CALLG T_CALLG 2 1 10 PACKED_VEC; [< sub W >]
function sum from (X) to (Y):
                            ^
    [21:19;7] BEGF T_BEGF 2 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
              Y >]
    S = 0
        ^
    [22:20;8] PUSHI T_PUSH 0 0 0 0; S
        next S + = X
        ^^^^^^
    [24:21;9] PUSHS T_PUSH 0 0 0; [< S S >]
        next X + = 1
        ^^^^^^
    [25:22;10] PUSHA T_PUSH 0 1 0; [< X X >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [25:23;12] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S X >]
    while X <= Y:
          ^
    [23:24;13] PUSHS T_PUSH 2 0 0; [< X * >]
    while X <= Y:
               ^
    [23:25;14] PUSHA T_PUSH 1 1 0; [< Y * >]
    while X <= Y:
            ^^
    [23:26;12] JMPGT T_JMPS 0 0 0 0; 3
    [27;12] LABEL 4
        next S + = X
        ^^^^^^
    [24:27;13] PUSHS T_PUSH 1 0 0; [< S S >]
        next S + = X
                   ^
    [24:28;14] PUSHS T_PUSH 3 0 0; [< X * >]
        next S + = X
        ^^^^^^^^^^^^
    [24:29;13] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = X
        ^^^^^^
    [24:30;12] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next X + = 1
        ^^^^^^
    [25:31;13] PUSHS T_PUSH 0 0 0; [< X X >]
        next X + = 1
                   ^
    [25:32;14] PUSHI T_PUSH 0 0 0 1; *
        next X + = 1
        ^^^^^^^^^^^^
    [25:33;13] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next X + = 1
        ^^^^^^
    [25:34;12] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next X >] >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [25:35;10] ENDL T_ENDL 0 2 11 *UNDEFINED_GEN(0x7FF4170000000000)*
    [36;10] LABEL 3
    [23:26;10] JMPGT T_JMPS[1] 2 0 10 0; 3
    return S
           ^
    [26:36;11] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [26:37;10] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [38;10] LABEL 2
    return S
            ^
    [21:19;10] BEGF T_BEGF 2 1 20 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
               Y >]
    [26:38;5] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum from (1) to (10)
          ^
    [28:39;6] PUSHI T_PUSH 0 0 0 1; *
sum from (1) to (10)
                 ^^
    [28:40;7] PUSHI T_PUSH 0 0 0 10; *
sum from (1) to (10)
^^^^^^^^^^^^^^^^^^^^
    [28:41;6] CALLG T_CALLG 2 4294967295 19 PACKED_VEC; [< [< sum
              from >] * >]
function sum (L):
                ^
    [30:42;7] BEGF T_BEGF 1 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sum L >]
    S = 0
        ^
    [31:43;8] PUSHI T_PUSH 0 0 0 0; S
    E = L[]
        ^
    [32:44;9] PUSHA T_PUSH 0 1 0; [< L L >]
    E = L[]
        ^^^
    [32:45;10] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L E >]
    E = L[]
        ^^^
    [32:46;9] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [< E
              E >]
        next S + = E
        ^^^^^^
    [34:47;10] PUSHS T_PUSH 1 0 0; [< S S >]
        next E = L[]
        ^^^^^^
    [35:48;11] PUSHS T_PUSH 1 0 0; [< E E >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [35:49;13] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S E >]
    until E == *NONE*:
          ^
    [33:50;14] PUSHS T_PUSH 2 0 0; [< E * >]
    until E == *NONE*:
               ^^^^^^
    [33:51;15] PUSHG T_PUSH 2 0 0 PACKED_VEC; [< * *NONE* >]
    until E == *NONE*:
            ^^
    [33:52;13] JMPNEQ T_JMPS 0 0 0 0; 7
    until E == *NONE*:
          ^^^^^^^^^^^
    [33:53;13] JMP T_JMP 0 0 0 0; 6
    [54;13] LABEL 7
    [33:52;13] JMPNEQ T_JMPS 0 0 2 0; 7
        next S + = E
        ^^^^^^
    [34:54;14] PUSHS T_PUSH 1 0 0; [< S S >]
        next S + = E
                   ^
    [34:55;15] PUSHS T_PUSH 3 0 0; [< E * >]
        next S + = E
        ^^^^^^^^^^^^
    [34:56;14] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = E
        ^^^^^^
    [34:57;13] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next E = L[]
                 ^
    [35:58;14] PUSHA T_PUSH 0 1 0; [< L L >]
        next E = L[]
                 ^^^
    [35:59;15] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L [< next E >] >]
        next E = L[]
                 ^^^
    [35:60;14] DEL T_POP 1 0 1 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< next E >] [<
               next E >] >]
        next E = L[]
        ^^^^^^
    [35:61;13] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next E >] >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [35:62;11] ENDL T_ENDL 0 2 12 *UNDEFINED_GEN(0x7FF4170000000000)*
    [63;11] LABEL 6
    [33:53;11] JMP T_JMP[1] 2 0 10 0; 6
    return S
           ^
    [36:63;12] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [36:64;11] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [65;11] LABEL 5
    return S
            ^
    [30:42;11] BEGF T_BEGF 1 1 24 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< sum L >]
    [36:65;6] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [38:66;7] PUSHOBJ T_SET 20 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
              *
    [38:67;8] PUSHI T_PUSH 0 0 0 "["; *
    [38:68;7] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [38:69;8] PUSHI T_PUSH 0 0 0 "]"; *
    [38:70;7] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [38:71;8] PUSHI T_PUSH 0 0 0 ","; *
    [38:72;7] SETI T_SET 1 0 0 ".separator"; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
      ^
    [38:73;8] PUSHI T_PUSH 0 0 0 1; *
    [38:74;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
         ^
    [38:75;8] PUSHI T_PUSH 0 0 0 2; *
    [38:76;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
            ^
    [38:77;8] PUSHI T_PUSH 0 0 0 3; *
    [38:78;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
               ^
    [38:79;8] PUSHI T_PUSH 0 0 0 4; *
    [38:80;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                  ^
    [38:81;8] PUSHI T_PUSH 0 0 0 5; *
    [38:82;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                     ^
    [38:83;8] PUSHI T_PUSH 0 0 0 6; *
    [38:84;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                        ^
    [38:85;8] PUSHI T_PUSH 0 0 0 7; *
    [38:86;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                           ^
    [38:87;8] PUSHI T_PUSH 0 0 0 8; *
    [38:88;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                              ^
    [38:89;8] PUSHI T_PUSH 0 0 0 9; *
    [38:90;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                                 ^^
    [38:91;8] PUSHI T_PUSH 0 0 0 10; *
    [38:92;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [38:93;7] CALLG T_CALLG 1 4294967295 42 PACKED_VEC; [< sum * >]
function multiplication table:
                             ^
    [40:94;7] BEGF T_BEGF 0 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
              table >] >]
    function part table ( Y, L ):
                                ^
    [41:95;9] BEGF T_BEGF 2 2 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
              L >]
        function part row ( Y, X, L ):
                                     ^
    [42:96;12] BEGF T_BEGF 3 3 0 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y X
               L >]
            L[] = Y * X
            ^
    [43:97;13] PUSHA T_PUSH 2 3 0; [< L L >]
            L[] = Y * X
            ^^^
    [43:98;14] PUSHI T_PUSH 0 0 0 0; *
            L[] = Y * X
                  ^
    [43:99;15] PUSHA T_PUSH 0 3 0; [< Y * >]
            L[] = Y * X
                      ^
    [43:100;16] PUSHA T_PUSH 1 3 0; [< X * >]
            L[] = Y * X
                  ^^^^^
    [43:101;15] MUL T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            L[] = Y * X
            ^^^
    [43:102;14] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [43:103;15] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [43:104;14] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
            L[] = Y * X
                  ^^^^^
    [43:105;12] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^
    [44:106;13] PUSHA T_PUSH 1 3 0; [< X * >]
            if X == 9: return L
                    ^
    [44:107;14] PUSHI T_PUSH 0 0 0 9; *
            if X == 9: return L
                 ^^
    [44:108;12] JMPNEQ T_JMPS 0 0 0 0; 11
    [109;12] LABEL 12
            if X == 9: return L
                              ^
    [44:109;13] PUSHA T_PUSH 2 3 0; [< L * >]
            if X == 9: return L
                       ^^^^^^^^
    [44:110;12] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^^^^^^
    [44:111;12] JMP T_JMP 0 0 0 0; 13
    [112;12] LABEL 11
    [44:108;12] JMPNEQ T_JMPS 0 0 4 0; 11
            else: return part row ( Y, X + 1, L )
                                    ^
    [45:112;13] PUSHA T_PUSH 0 3 0; [< Y * >]
            else: return part row ( Y, X + 1, L )
                                       ^
    [45:113;14] PUSHA T_PUSH 1 3 0; [< X * >]
            else: return part row ( Y, X + 1, L )
                                           ^
    [45:114;15] PUSHI T_PUSH 0 0 0 1; *
            else: return part row ( Y, X + 1, L )
                                       ^^^^^
    [45:115;14] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            else: return part row ( Y, X + 1, L )
                                              ^
    [45:116;15] PUSHA T_PUSH 2 3 0; [< L * >]
            else: return part row ( Y, X + 1, L )
                         ^^^^^^^^^^^^^^^^^^^^^^^^
    [45:117;13] CALLG T_CALLG 3 1 96 PACKED_VEC; [< [< part row >] * >]
            else: return part row ( Y, X + 1, L )
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [45:118;12] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [119;12] LABEL 13
    [44:111;12] JMP T_JMP 0 0 8 0; 13
    [119;12] LABEL 10
            else: return part row ( Y, X + 1, L )
                                                 ^
    [42:96;12] BEGF T_BEGF 3 3 24 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y X
               L >]
    [45:119;9] ENDF T_ENDF 0 3 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^
    [46:120;10] PUSHA T_PUSH 1 2 0; [< L L >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:121;11] PUSHI T_PUSH 0 0 0 0; *
        L[] = part row ( Y, 1, [] )
                         ^
    [46:122;12] PUSHA T_PUSH 0 2 0; [< Y * >]
        L[] = part row ( Y, 1, [] )
                            ^
    [46:123;13] PUSHI T_PUSH 0 0 0 1; *
        L[] = part row ( Y, 1, [] )
                               ^^
    [46:124;14] PUSHOBJ T_SET 10 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [46:125;15] PUSHI T_PUSH 0 0 0 "["; *
    [46:126;14] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [46:127;15] PUSHI T_PUSH 0 0 0 "]"; *
    [46:128;14] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [46:129;15] PUSHI T_PUSH 0 0 0 ","; *
    [46:130;14] SETI T_SET 1 0 0 ".separator"; [< * * >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [46:131;12] CALLG T_CALLG 3 1 96 PACKED_VEC; [< [< part row >] * >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:132;11] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:133;12] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:134;11] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [46:135;9] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^
    [47:136;10] PUSHA T_PUSH 0 2 0; [< Y * >]
        if Y == 9: return L
                ^
    [47:137;11] PUSHI T_PUSH 0 0 0 9; *
        if Y == 9: return L
             ^^
    [47:138;9] JMPNEQ T_JMPS 0 0 0 0; 14
    [139;9] LABEL 15
        if Y == 9: return L
                          ^
    [47:139;10] PUSHA T_PUSH 1 2 0; [< L * >]
        if Y == 9: return L
                   ^^^^^^^^
    [47:140;9] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^^^^^^
    [47:141;9] JMP T_JMP 0 0 0 0; 16
    [142;9] LABEL 14
    [47:138;9] JMPNEQ T_JMPS 0 0 4 0; 14
        else: return part table ( Y + 1, L )
                                  ^
    [48:142;10] PUSHA T_PUSH 0 2 0; [< Y * >]
        else: return part table ( Y + 1, L )
                                      ^
    [48:143;11] PUSHI T_PUSH 0 0 0 1; *
        else: return part table ( Y + 1, L )
                                  ^^^^^
    [48:144;10] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
        else: return part table ( Y + 1, L )
                                         ^
    [48:145;11] PUSHA T_PUSH 1 2 0; [< L * >]
        else: return part table ( Y + 1, L )
                     ^^^^^^^^^^^^^^^^^^^^^^^
    [48:146;10] CALLG T_CALLG 2 1 95 PACKED_VEC; [< [< part table >]
                * >]
        else: return part table ( Y + 1, L )
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [48:147;9] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [148;9] LABEL 16
    [47:141;9] JMP T_JMP 0 0 7 0; 16
    [148;9] LABEL 9
        else: return part table ( Y + 1, L )
                                            ^
    [41:95;9] BEGF T_BEGF 2 2 54 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
              L >]
    [48:148;7] ENDF T_ENDF 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    return part table ( 1, [] )
                        ^
    [49:149;8] PUSHI T_PUSH 0 0 0 1; *
    return part table ( 1, [] )
                           ^^
    [49:150;9] PUSHOBJ T_SET 10 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
               *
    [49:151;10] PUSHI T_PUSH 0 0 0 "["; *
    [49:152;9] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [49:153;10] PUSHI T_PUSH 0 0 0 "]"; *
    [49:154;9] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [49:155;10] PUSHI T_PUSH 0 0 0 ","; *
    [49:156;9] SETI T_SET 1 0 0 ".separator"; [< * * >]
    return part table ( 1, [] )
           ^^^^^^^^^^^^^^^^^^^^
    [49:157;8] CALLG T_CALLG 2 1 95 PACKED_VEC; [< [< part table >] * >]
    return part table ( 1, [] )
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [49:158;7] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [159;7] LABEL 8
    return part table ( 1, [] )
                               ^
    [40:94;7] BEGF T_BEGF 0 1 66 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
              table >] >]
    [49:159;7] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
multiplication table
^^^^^^^^^^^^^^^^^^^^
    [51:160;8] CALLG T_CALLG 0 4294967295 94 PACKED_VEC; [< [<
               multiplication table >] * >]
