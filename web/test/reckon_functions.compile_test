function add (X) (Y):
                    ^
    [13:0;2] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    Z = X + Y
        ^
    [14:1;3] PUSHA T_PUSH 0 1 0; [< X * >]
    Z = X + Y
            ^
    [14:2;4] PUSHA T_PUSH 1 1 0; [< Y * >]
    Z = X + Y
        ^^^^^
    [14:3;3] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; Z
    return Z
           ^
    [15:4;4] PUSHS T_PUSH 0 0 0; [< Z * >]
    return Z
    ^^^^^^^^
    [15:5;3] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [6;3] LABEL 1
    return Z
            ^
    [13:0;3] BEGF T_BEGF 2 1 7 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    [15:6;0] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
Z = add (5) (7)
         ^
    [17:7;1] PUSHI T_PUSH 0 0 0 5; *
Z = add (5) (7)
             ^
    [17:8;2] PUSHI T_PUSH 0 0 0 7; *
Z = add (5) (7)
    ^^^^^^^^^^^
    [17:9;1] CALLG T_CALLG 2 1 0 PACKED_VEC; [< add Z >]
function (X) add (Y): return X + Y
                      ^
    [19:10;3] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              add X Y >]
function (X) add (Y): return X + Y
                             ^
    [19:11;4] PUSHA T_PUSH 0 1 0; [< X * >]
function (X) add (Y): return X + Y
                                 ^
    [19:12;5] PUSHA T_PUSH 1 1 0; [< Y * >]
function (X) add (Y): return X + Y
                             ^^^^^
    [19:13;4] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function (X) add (Y): return X + Y
                      ^^^^^^^^^^^^
    [19:14;3] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function (X) add (Y): return X + Y
                                  ^
    [19:10;3] BEGF T_BEGF 2 1 6 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              add X Y >]
    [19:15;1] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
next Z = (5) add (7)
          ^
    [21:16;2] PUSHI T_PUSH 0 0 0 5; *
next Z = (5) add (7)
                  ^
    [21:17;3] PUSHI T_PUSH 0 0 0 7; *
next Z = (5) add (7)
         ^^^^^^^^^^^
    [21:18;2] CALLG T_CALLG 2 1 10 PACKED_VEC; [< add [< next Z >] >]
function sum from (X) to (Y):
                            ^
    [23:19;4] BEGF T_BEGF 2 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
              Y >]
    S = 0
        ^
    [24:20;5] PUSHI T_PUSH 0 0 0 0; S
        next S + = X
        ^^^^^^
    [26:21;6] PUSHS T_PUSH 0 0 0; [< S S >]
        next X + = 1
        ^^^^^^
    [27:22;7] PUSHA T_PUSH 0 1 0; [< X X >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [27:23;9] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              loop S X >]
    while X <= Y:
          ^
    [25:24;10] PUSHS T_PUSH 2 0 0; [< X * >]
    while X <= Y:
               ^
    [25:25;11] PUSHA T_PUSH 1 1 0; [< Y * >]
    while X <= Y:
            ^^
    [25:26;9] JMPGT T_JMPS 0 0 0 0; 3
    [27;9] LABEL 4
        next S + = X
        ^^^^^^
    [26:27;10] PUSHS T_PUSH 1 0 0; [< S S >]
        next S + = X
                   ^
    [26:28;11] PUSHS T_PUSH 3 0 0; [< X * >]
        next S + = X
        ^^^^^^^^^^^^
    [26:29;10] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = X
        ^^^^^^
    [26:30;9] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              * [< next S >] >]
        next X + = 1
        ^^^^^^
    [27:31;10] PUSHS T_PUSH 0 0 0; [< X X >]
        next X + = 1
                   ^
    [27:32;11] PUSHI T_PUSH 0 0 0 1; *
        next X + = 1
        ^^^^^^^^^^^^
    [27:33;10] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next X + = 1
        ^^^^^^
    [27:34;9] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              * [< next X >] >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [27:35;7] ENDL T_ENDL 0 2 11 *UNDEFINED_GEN(0x7FF4170000000000)*
    [36;7] LABEL 3
    [25:26;7] JMPGT T_JMPS[1] 2 0 10 0; 3
    return S
           ^
    [28:36;8] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [28:37;7] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [38;7] LABEL 2
    return S
            ^
    [23:19;7] BEGF T_BEGF 2 1 20 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
              Y >]
    [28:38;2] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum from (1) to (10)
          ^
    [30:39;3] PUSHI T_PUSH 0 0 0 1; *
sum from (1) to (10)
                 ^^
    [30:40;4] PUSHI T_PUSH 0 0 0 10; *
sum from (1) to (10)
^^^^^^^^^^^^^^^^^^^^
    [30:41;3] CALLG T_CALLG 2 4294967295 19 PACKED_VEC; [< [< sum
              from >] * >]
function sum (L):
                ^
    [32:42;4] BEGF T_BEGF 1 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sum L >]
    S = 0
        ^
    [33:43;5] PUSHI T_PUSH 0 0 0 0; S
    E = L[]
        ^
    [34:44;6] PUSHA T_PUSH 0 1 0; [< L L >]
    E = L[]
        ^^^
    [34:45;7] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [< L
              E >]
    E = L[]
        ^^^
    [34:46;6] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [< E
              E >]
        next S + = E
        ^^^^^^
    [36:47;7] PUSHS T_PUSH 1 0 0; [< S S >]
        next E = L[]
        ^^^^^^
    [37:48;8] PUSHS T_PUSH 1 0 0; [< E E >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [37:49;10] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S E >]
    until E == *NONE*:
          ^
    [35:50;11] PUSHS T_PUSH 2 0 0; [< E * >]
    until E == *NONE*:
               ^^^^^^
    [35:51;12] PUSHG T_PUSH 2 0 0 PACKED_VEC; [< * *NONE* >]
    until E == *NONE*:
            ^^
    [35:52;10] JMPNEQ T_JMPS 0 0 0 0; 7
    until E == *NONE*:
          ^^^^^^^^^^^
    [35:53;10] JMP T_JMP 0 0 0 0; 6
    [54;10] LABEL 7
    [35:52;10] JMPNEQ T_JMPS 0 0 2 0; 7
        next S + = E
        ^^^^^^
    [36:54;11] PUSHS T_PUSH 1 0 0; [< S S >]
        next S + = E
                   ^
    [36:55;12] PUSHS T_PUSH 3 0 0; [< E * >]
        next S + = E
        ^^^^^^^^^^^^
    [36:56;11] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = E
        ^^^^^^
    [36:57;10] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next E = L[]
                 ^
    [37:58;11] PUSHA T_PUSH 0 1 0; [< L L >]
        next E = L[]
                 ^^^
    [37:59;12] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L [< next E >] >]
        next E = L[]
                 ^^^
    [37:60;11] DEL T_POP 1 0 1 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< next E >] [<
               next E >] >]
        next E = L[]
        ^^^^^^
    [37:61;10] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next E >] >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [37:62;8] ENDL T_ENDL 0 2 12 *UNDEFINED_GEN(0x7FF4170000000000)*
    [63;8] LABEL 6
    [35:53;8] JMP T_JMP[1] 2 0 10 0; 6
    return S
           ^
    [38:63;9] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [38:64;8] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [65;8] LABEL 5
    return S
            ^
    [32:42;8] BEGF T_BEGF 1 1 24 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sum L >]
    [38:65;3] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [40:66;4] PUSHOBJ T_SET 20 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
              *
    [40:67;5] PUSHI T_PUSH 0 0 0 "["; *
    [40:68;4] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [40:69;5] PUSHI T_PUSH 0 0 0 "]"; *
    [40:70;4] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [40:71;5] PUSHI T_PUSH 0 0 0 ","; *
    [40:72;4] SETI T_SET 1 0 0 ".separator"; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
      ^
    [40:73;5] PUSHI T_PUSH 0 0 0 1; *
    [40:74;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
         ^
    [40:75;5] PUSHI T_PUSH 0 0 0 2; *
    [40:76;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
            ^
    [40:77;5] PUSHI T_PUSH 0 0 0 3; *
    [40:78;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
               ^
    [40:79;5] PUSHI T_PUSH 0 0 0 4; *
    [40:80;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                  ^
    [40:81;5] PUSHI T_PUSH 0 0 0 5; *
    [40:82;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                     ^
    [40:83;5] PUSHI T_PUSH 0 0 0 6; *
    [40:84;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                        ^
    [40:85;5] PUSHI T_PUSH 0 0 0 7; *
    [40:86;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                           ^
    [40:87;5] PUSHI T_PUSH 0 0 0 8; *
    [40:88;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                              ^
    [40:89;5] PUSHI T_PUSH 0 0 0 9; *
    [40:90;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                                 ^^
    [40:91;5] PUSHI T_PUSH 0 0 0 10; *
    [40:92;4] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [40:93;4] CALLG T_CALLG 1 4294967295 42 PACKED_VEC; [< sum * >]
function multiplication table:
                             ^
    [42:94;4] BEGF T_BEGF 0 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
              table >] >]
    function part table ( Y, L ):
                                ^
    [43:95;6] BEGF T_BEGF 2 2 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
              L >]
        function part row ( Y, X, L ):
                                     ^
    [44:96;9] BEGF T_BEGF 3 3 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y X
              L >]
            L[] = Y * X
            ^
    [45:97;10] PUSHA T_PUSH 2 3 0; [< L L >]
            L[] = Y * X
            ^^^
    [45:98;11] PUSHI T_PUSH 0 0 0 0; *
            L[] = Y * X
                  ^
    [45:99;12] PUSHA T_PUSH 0 3 0; [< Y * >]
            L[] = Y * X
                      ^
    [45:100;13] PUSHA T_PUSH 1 3 0; [< X * >]
            L[] = Y * X
                  ^^^^^
    [45:101;12] MUL T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            L[] = Y * X
            ^^^
    [45:102;11] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [45:103;12] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [45:104;11] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
            L[] = Y * X
                  ^^^^^
    [45:105;9] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^
    [46:106;10] PUSHA T_PUSH 1 3 0; [< X * >]
            if X == 9: return L
                    ^
    [46:107;11] PUSHI T_PUSH 0 0 0 9; *
            if X == 9: return L
                 ^^
    [46:108;9] JMPNEQ T_JMPS 0 0 0 0; 11
    [109;9] LABEL 12
            if X == 9: return L
                              ^
    [46:109;10] PUSHA T_PUSH 2 3 0; [< L * >]
            if X == 9: return L
                       ^^^^^^^^
    [46:110;9] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^^^^^^
    [46:111;9] JMP T_JMP 0 0 0 0; 13
    [112;9] LABEL 11
    [46:108;9] JMPNEQ T_JMPS 0 0 4 0; 11
            else: return part row ( Y, X + 1, L )
                                    ^
    [47:112;10] PUSHA T_PUSH 0 3 0; [< Y * >]
            else: return part row ( Y, X + 1, L )
                                       ^
    [47:113;11] PUSHA T_PUSH 1 3 0; [< X * >]
            else: return part row ( Y, X + 1, L )
                                           ^
    [47:114;12] PUSHI T_PUSH 0 0 0 1; *
            else: return part row ( Y, X + 1, L )
                                       ^^^^^
    [47:115;11] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            else: return part row ( Y, X + 1, L )
                                              ^
    [47:116;12] PUSHA T_PUSH 2 3 0; [< L * >]
            else: return part row ( Y, X + 1, L )
                         ^^^^^^^^^^^^^^^^^^^^^^^^
    [47:117;10] CALLG T_CALLG 3 1 96 PACKED_VEC; [< [< part row >] * >]
            else: return part row ( Y, X + 1, L )
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [47:118;9] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [119;9] LABEL 13
    [46:111;9] JMP T_JMP 0 0 8 0; 13
    [119;9] LABEL 10
            else: return part row ( Y, X + 1, L )
                                                 ^
    [44:96;9] BEGF T_BEGF 3 3 24 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y X
              L >]
    [47:119;6] ENDF T_ENDF 0 3 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^
    [48:120;7] PUSHA T_PUSH 1 2 0; [< L L >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [48:121;8] PUSHI T_PUSH 0 0 0 0; *
        L[] = part row ( Y, 1, [] )
                         ^
    [48:122;9] PUSHA T_PUSH 0 2 0; [< Y * >]
        L[] = part row ( Y, 1, [] )
                            ^
    [48:123;10] PUSHI T_PUSH 0 0 0 1; *
        L[] = part row ( Y, 1, [] )
                               ^^
    [48:124;11] PUSHOBJ T_SET 10 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [48:125;12] PUSHI T_PUSH 0 0 0 "["; *
    [48:126;11] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [48:127;12] PUSHI T_PUSH 0 0 0 "]"; *
    [48:128;11] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [48:129;12] PUSHI T_PUSH 0 0 0 ","; *
    [48:130;11] SETI T_SET 1 0 0 ".separator"; [< * * >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [48:131;9] CALLG T_CALLG 3 1 96 PACKED_VEC; [< [< part row >] * >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [48:132;8] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [48:133;9] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [48:134;8] VPUSH T_SET 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * L >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [48:135;6] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^
    [49:136;7] PUSHA T_PUSH 0 2 0; [< Y * >]
        if Y == 9: return L
                ^
    [49:137;8] PUSHI T_PUSH 0 0 0 9; *
        if Y == 9: return L
             ^^
    [49:138;6] JMPNEQ T_JMPS 0 0 0 0; 14
    [139;6] LABEL 15
        if Y == 9: return L
                          ^
    [49:139;7] PUSHA T_PUSH 1 2 0; [< L * >]
        if Y == 9: return L
                   ^^^^^^^^
    [49:140;6] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^^^^^^
    [49:141;6] JMP T_JMP 0 0 0 0; 16
    [142;6] LABEL 14
    [49:138;6] JMPNEQ T_JMPS 0 0 4 0; 14
        else: return part table ( Y + 1, L )
                                  ^
    [50:142;7] PUSHA T_PUSH 0 2 0; [< Y * >]
        else: return part table ( Y + 1, L )
                                      ^
    [50:143;8] PUSHI T_PUSH 0 0 0 1; *
        else: return part table ( Y + 1, L )
                                  ^^^^^
    [50:144;7] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
        else: return part table ( Y + 1, L )
                                         ^
    [50:145;8] PUSHA T_PUSH 1 2 0; [< L * >]
        else: return part table ( Y + 1, L )
                     ^^^^^^^^^^^^^^^^^^^^^^^
    [50:146;7] CALLG T_CALLG 2 1 95 PACKED_VEC; [< [< part table >] * >]
        else: return part table ( Y + 1, L )
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [50:147;6] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [148;6] LABEL 16
    [49:141;6] JMP T_JMP 0 0 7 0; 16
    [148;6] LABEL 9
        else: return part table ( Y + 1, L )
                                            ^
    [43:95;6] BEGF T_BEGF 2 2 54 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
              L >]
    [50:148;4] ENDF T_ENDF 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    return part table ( 1, [] )
                        ^
    [51:149;5] PUSHI T_PUSH 0 0 0 1; *
    return part table ( 1, [] )
                           ^^
    [51:150;6] PUSHOBJ T_SET 10 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
               *
    [51:151;7] PUSHI T_PUSH 0 0 0 "["; *
    [51:152;6] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [51:153;7] PUSHI T_PUSH 0 0 0 "]"; *
    [51:154;6] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [51:155;7] PUSHI T_PUSH 0 0 0 ","; *
    [51:156;6] SETI T_SET 1 0 0 ".separator"; [< * * >]
    return part table ( 1, [] )
           ^^^^^^^^^^^^^^^^^^^^
    [51:157;5] CALLG T_CALLG 2 1 95 PACKED_VEC; [< [< part table >] * >]
    return part table ( 1, [] )
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [51:158;4] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [159;4] LABEL 8
    return part table ( 1, [] )
                               ^
    [42:94;4] BEGF T_BEGF 0 1 66 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
              table >] >]
    [51:159;4] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
multiplication table
^^^^^^^^^^^^^^^^^^^^
    [53:160;5] CALLG T_CALLG 0 4294967295 94 PACKED_VEC; [< [<
               multiplication table >] * >]
X = 10
    ^^
    [57:161;6] PUSHI T_PUSH 0 0 0 10; X
add (X) 1      // Instead of `add (X) (1)'
    ^^^
    [58:162;7] PUSHS T_PUSH 0 0 0; [< X * >]
add (X) 1      // Instead of `add (X) (1)'
        ^
    [58:163;8] PUSHI T_PUSH 0 0 0 1; *
add (X) 1      // Instead of `add (X) (1)'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [58:164;7] CALLG T_CALLG 2 4294967295 0 PACKED_VEC; [< add * >]
(X) add 2      // Instead of `(X) add (2)'
^^^
    [59:165;8] PUSHS T_PUSH 1 0 0; [< X * >]
(X) add 2      // Instead of `(X) add (2)'
        ^
    [59:166;9] PUSHI T_PUSH 0 0 0 2; *
(X) add 2      // Instead of `(X) add (2)'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [59:167;8] CALLG T_CALLG 2 4294967295 10 PACKED_VEC; [< add * >]
add 2 "HI"     // Instead of `add (2) ("HI")'
    ^
    [60:168;9] PUSHI T_PUSH 0 0 0 2; *
add 2 "HI"     // Instead of `add (2) ("HI")'
      ^^^^
    [60:169;10] PUSHI T_PUSH 0 0 0 "HI"; *
add 2 "HI"     // Instead of `add (2) ("HI")'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [60:170;9] CALLG T_CALLG 2 4294967295 0 PACKED_VEC; [< add * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
    ^^^^^^^^^
    [61:171;10] PUSHOBJ T_SET 13 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [61:172;11] PUSHI T_PUSH 0 0 0 "["; *
    [61:173;10] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [61:174;11] PUSHI T_PUSH 0 0 0 "]"; *
    [61:175;10] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [61:176;11] PUSHI T_PUSH 0 0 0 ","; *
    [61:177;10] SETI T_SET 1 0 0 ".separator"; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
     ^
    [61:178;11] PUSHI T_PUSH 0 0 0 1; *
    [61:179;10] VPUSH T_SET 1 0 0 "["; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
        ^
    [61:180;11] PUSHI T_PUSH 0 0 0 2; *
    [61:181;10] VPUSH T_SET 1 0 0 "["; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
           ^
    [61:182;11] PUSHI T_PUSH 0 0 0 3; *
    [61:183;10] VPUSH T_SET 1 0 0 "["; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [61:184;10] CALLG T_CALLG 1 4294967295 42 PACKED_VEC; [< sum * >]
