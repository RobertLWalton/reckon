function add (X) (Y):
                    ^
    [13:0;2] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    Z = X + Y
        ^
    [14:1;3] PUSHA T_PUSH 0 1 0; [< X * >]
    Z = X + Y
            ^
    [14:2;4] PUSHA T_PUSH 1 1 0; [< Y * >]
    Z = X + Y
        ^^^^^
    [14:3;3] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; Z
    return Z
           ^
    [15:4;4] PUSHS T_PUSH 0 0 0; [< Z * >]
    return Z
    ^^^^^^^^
    [15:5;3] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [6;3] LABEL 1
    return Z
            ^
    [13:0;3] BEGF T_BEGF 2 1 7 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    [15:6;0] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
Z = add (5) (7)
         ^
    [17:7;1] PUSHI T_PUSH 0 0 0 5; *
Z = add (5) (7)
             ^
    [17:8;2] PUSHI T_PUSH 0 0 0 7; *
Z = add (5) (7)
    ^^^^^^^^^^^
    [17:9;1] CALLG T_CALLG 2 1 0 PACKED_VEC; [< add Z >]
function (X) add (Y): return X + Y
                      ^
    [19:10;3] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              add X Y >]
function (X) add (Y): return X + Y
                             ^
    [19:11;4] PUSHA T_PUSH 0 1 0; [< X * >]
function (X) add (Y): return X + Y
                                 ^
    [19:12;5] PUSHA T_PUSH 1 1 0; [< Y * >]
function (X) add (Y): return X + Y
                             ^^^^^
    [19:13;4] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function (X) add (Y): return X + Y
                      ^^^^^^^^^^^^
    [19:14;3] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function (X) add (Y): return X + Y
                                  ^
    [19:10;3] BEGF T_BEGF 2 1 6 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              add X Y >]
    [19:15;1] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
next Z = (5) add (7)
          ^
    [21:16;2] PUSHI T_PUSH 0 0 0 5; *
next Z = (5) add (7)
                  ^
    [21:17;3] PUSHI T_PUSH 0 0 0 7; *
next Z = (5) add (7)
         ^^^^^^^^^^^
    [21:18;2] CALLG T_CALLG 2 1 10 PACKED_VEC; [< add [< next Z >] >]
function add (X, Y): return X + Y
                     ^
    [23:19;4] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              add X Y >]
function add (X, Y): return X + Y
                            ^
    [23:20;5] PUSHA T_PUSH 0 1 0; [< X * >]
function add (X, Y): return X + Y
                                ^
    [23:21;6] PUSHA T_PUSH 1 1 0; [< Y * >]
function add (X, Y): return X + Y
                            ^^^^^
    [23:22;5] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function add (X, Y): return X + Y
                     ^^^^^^^^^^^^
    [23:23;4] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function add (X, Y): return X + Y
                                 ^
    [23:19;4] BEGF T_BEGF 2 1 6 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              add X Y >]
    [23:24;2] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
next Z = add ( 5, 7 )
               ^
    [25:25;3] PUSHI T_PUSH 0 0 0 5; *
next Z = add ( 5, 7 )
                  ^
    [25:26;4] PUSHI T_PUSH 0 0 0 7; *
next Z = add ( 5, 7 )
         ^^^^^^^^^^^^
    [25:27;3] CALLG T_CALLG 2 1 19 PACKED_VEC; [< add [< next Z >] >]
function add and subtract (X, Y):
                                ^
    [27:28;5] BEGF T_BEGF 2 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< add and
              subtract >] X Y >]
    return X + Y, X - Y
           ^
    [28:29;6] PUSHA T_PUSH 0 1 0; [< X * >]
    return X + Y, X - Y
               ^
    [28:30;7] PUSHA T_PUSH 1 1 0; [< Y * >]
    return X + Y, X - Y
           ^^^^^
    [28:31;6] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
    return X + Y, X - Y
                  ^
    [28:32;7] PUSHA T_PUSH 0 1 0; [< X * >]
    return X + Y, X - Y
                      ^
    [28:33;8] PUSHA T_PUSH 1 1 0; [< Y * >]
    return X + Y, X - Y
                  ^^^^^
    [28:34;7] SUB T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
    return X + Y, X - Y
    ^^^^^^^^^^^^^^^^^^^
    [28:35;5] RET T_RET 0 1 2 *UNDEFINED_GEN(0x7FF4170000000000)*
    [36;5] LABEL 2
    return X + Y, X - Y
                       ^
    [27:28;5] BEGF T_BEGF 2 1 9 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< add and
              subtract >] X Y >]
    [28:36;3] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
Z1, Z2 = add and subtract (10, 3)
                           ^^
    [30:37;4] PUSHI T_PUSH 0 0 0 10; *
Z1, Z2 = add and subtract (10, 3)
                               ^
    [30:38;5] PUSHI T_PUSH 0 0 0 3; *
Z1, Z2 = add and subtract (10, 3)
         ^^^^^^^^^^^^^^^^^^^^^^^^
    [30:39;4] CALLG T_CALLG 2 2 28 PACKED_VEC; [< [< add and subtract >]
              * >]
Z3 = add and subtract ( 10, 3 )
                        ^^
    [32:40;5] PUSHI T_PUSH 0 0 0 10; *
Z3 = add and subtract ( 10, 3 )
                            ^
    [32:41;6] PUSHI T_PUSH 0 0 0 3; *
Z3 = add and subtract ( 10, 3 )
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    [32:42;5] CALLG T_CALLG 2 1 28 PACKED_VEC; [< [< add and subtract >]
              Z3 >]
function sum from (X) to (Y):
                            ^
    [34:43;7] BEGF T_BEGF 2 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
              Y >]
    S = 0
        ^
    [35:44;8] PUSHI T_PUSH 0 0 0 0; S
        next S + = X
        ^^^^^^
    [37:45;9] PUSHS T_PUSH 0 0 0; [< S S >]
        next X + = 1
        ^^^^^^
    [38:46;10] PUSHA T_PUSH 0 1 0; [< X X >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [38:47;12] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S X >]
    while X <= Y:
          ^
    [36:48;13] PUSHS T_PUSH 2 0 0; [< X * >]
    while X <= Y:
               ^
    [36:49;14] PUSHA T_PUSH 1 1 0; [< Y * >]
    while X <= Y:
            ^^
    [36:50;12] JMPGT T_JMPS 0 0 0 0; 4
    [51;12] LABEL 5
        next S + = X
        ^^^^^^
    [37:51;13] PUSHS T_PUSH 1 0 0; [< S S >]
        next S + = X
                   ^
    [37:52;14] PUSHS T_PUSH 3 0 0; [< X * >]
        next S + = X
        ^^^^^^^^^^^^
    [37:53;13] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = X
        ^^^^^^
    [37:54;12] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next X + = 1
        ^^^^^^
    [38:55;13] PUSHS T_PUSH 0 0 0; [< X X >]
        next X + = 1
                   ^
    [38:56;14] PUSHI T_PUSH 0 0 0 1; *
        next X + = 1
        ^^^^^^^^^^^^
    [38:57;13] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next X + = 1
        ^^^^^^
    [38:58;12] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next X >] >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [38:59;10] ENDL T_ENDL 0 2 11 *UNDEFINED_GEN(0x7FF4170000000000)*
    [60;10] LABEL 4
    [36:50;10] JMPGT T_JMPS[1] 2 0 10 0; 4
    return S
           ^
    [39:60;11] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [39:61;10] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [62;10] LABEL 3
    return S
            ^
    [34:43;10] BEGF T_BEGF 2 1 20 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
               Y >]
    [39:62;5] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum from (1) to (10)
          ^
    [41:63;6] PUSHI T_PUSH 0 0 0 1; *
sum from (1) to (10)
                 ^^
    [41:64;7] PUSHI T_PUSH 0 0 0 10; *
sum from (1) to (10)
^^^^^^^^^^^^^^^^^^^^
    [41:65;6] CALLG T_CALLG 2 4294967295 43 PACKED_VEC; [< [< sum
              from >] * >]
function sum (L):
                ^
    [43:66;7] BEGF T_BEGF 1 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sum L >]
    S = 0
        ^
    [44:67;8] PUSHI T_PUSH 0 0 0 0; S
    E = L[]
        ^
    [45:68;9] PUSHA T_PUSH 0 1 0; [< L L >]
    E = L[]
        ^^^
    [45:69;10] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L E >]
    E = L[]
        ^^^
    [45:70;9] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [< E
              E >]
        next S + = E
        ^^^^^^
    [47:71;10] PUSHS T_PUSH 1 0 0; [< S S >]
        next E = L[]
        ^^^^^^
    [48:72;11] PUSHS T_PUSH 1 0 0; [< E E >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [48:73;13] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S E >]
    until E == *NONE*:
          ^
    [46:74;14] PUSHS T_PUSH 2 0 0; [< E * >]
    until E == *NONE*:
               ^^^^^^
    [46:75;15] PUSHG T_PUSH 2 0 0 PACKED_VEC; [< * *NONE* >]
    until E == *NONE*:
            ^^
    [46:76;13] JMPNEQ T_JMPS 0 0 0 0; 8
    until E == *NONE*:
          ^^^^^^^^^^^
    [46:77;13] JMP T_JMP 0 0 0 0; 7
    [78;13] LABEL 8
    [46:76;13] JMPNEQ T_JMPS 0 0 2 0; 8
        next S + = E
        ^^^^^^
    [47:78;14] PUSHS T_PUSH 1 0 0; [< S S >]
        next S + = E
                   ^
    [47:79;15] PUSHS T_PUSH 3 0 0; [< E * >]
        next S + = E
        ^^^^^^^^^^^^
    [47:80;14] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = E
        ^^^^^^
    [47:81;13] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next E = L[]
                 ^
    [48:82;14] PUSHA T_PUSH 0 1 0; [< L L >]
        next E = L[]
                 ^^^
    [48:83;15] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L * >]
        next E = L[]
                 ^^^
    [48:84;14] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [< *
               * >]
        next E = L[]
        ^^^^^^
    [48:85;13] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next E >] >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [48:86;11] ENDL T_ENDL 0 2 12 *UNDEFINED_GEN(0x7FF4170000000000)*
    [87;11] LABEL 7
    [46:77;11] JMP T_JMP[1] 2 0 10 0; 7
    return S
           ^
    [49:87;12] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [49:88;11] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [89;11] LABEL 6
    return S
            ^
    [43:66;11] BEGF T_BEGF 1 1 24 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< sum L >]
    [49:89;6] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [51:90;7] PUSHOBJ T_SET 20 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
              *
    [51:91;8] PUSHI T_PUSH 0 0 0 "["; *
    [51:92;7] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [51:93;8] PUSHI T_PUSH 0 0 0 "]"; *
    [51:94;7] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [51:95;8] PUSHI T_PUSH 0 0 0 ","; *
    [51:96;7] SETI T_SET 1 0 0 ".separator"; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
      ^
    [51:97;8] PUSHI T_PUSH 0 0 0 1; *
    [51:98;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
         ^
    [51:99;8] PUSHI T_PUSH 0 0 0 2; *
    [51:100;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
            ^
    [51:101;8] PUSHI T_PUSH 0 0 0 3; *
    [51:102;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
               ^
    [51:103;8] PUSHI T_PUSH 0 0 0 4; *
    [51:104;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                  ^
    [51:105;8] PUSHI T_PUSH 0 0 0 5; *
    [51:106;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                     ^
    [51:107;8] PUSHI T_PUSH 0 0 0 6; *
    [51:108;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                        ^
    [51:109;8] PUSHI T_PUSH 0 0 0 7; *
    [51:110;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                           ^
    [51:111;8] PUSHI T_PUSH 0 0 0 8; *
    [51:112;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                              ^
    [51:113;8] PUSHI T_PUSH 0 0 0 9; *
    [51:114;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                                 ^^
    [51:115;8] PUSHI T_PUSH 0 0 0 10; *
    [51:116;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [51:117;7] CALLG T_CALLG 1 4294967295 66 PACKED_VEC; [< sum * >]
function multiplication table:
                             ^
    [53:118;7] BEGF T_BEGF 0 1 0 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
               table >] >]
    function part table ( Y, L ):
                                ^
    [54:119;9] BEGF T_BEGF 2 2 0 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
               L >]
        function part row ( Y, X, L ):
                                     ^
    [55:120;12] BEGF T_BEGF 3 3 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y
                X L >]
            L[] = Y * X
            ^
    [56:121;13] PUSHA T_PUSH 2 3 0; [< L L >]
            L[] = Y * X
            ^^^
    [56:122;14] PUSHI T_PUSH 0 0 0 *UNDEFINED*; *
            L[] = Y * X
                  ^
    [56:123;15] PUSHA T_PUSH 0 3 0; [< Y * >]
            L[] = Y * X
                      ^
    [56:124;16] PUSHA T_PUSH 1 3 0; [< X * >]
            L[] = Y * X
                  ^^^^^
    [56:125;15] MUL T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            L[] = Y * X
            ^^^
    [56:126;14] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                * L >]
            L[] = Y * X
            ^^^
    [56:127;15] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [56:128;14] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
            L[] = Y * X
            ^^^
    [56:129;12] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^
    [57:130;13] PUSHA T_PUSH 1 3 0; [< X * >]
            if X == 9: return L
                    ^
    [57:131;14] PUSHI T_PUSH 0 0 0 9; *
            if X == 9: return L
                 ^^
    [57:132;12] JMPNEQ T_JMPS 0 0 0 0; 12
    [133;12] LABEL 13
            if X == 9: return L
                              ^
    [57:133;13] PUSHA T_PUSH 2 3 0; [< L * >]
            if X == 9: return L
                       ^^^^^^^^
    [57:134;12] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^^^^^^
    [57:135;12] JMP T_JMP 0 0 0 0; 14
    [136;12] LABEL 12
    [57:132;12] JMPNEQ T_JMPS 0 0 4 0; 12
            else: return part row ( Y, X + 1, L )
                                    ^
    [58:136;13] PUSHA T_PUSH 0 3 0; [< Y * >]
            else: return part row ( Y, X + 1, L )
                                       ^
    [58:137;14] PUSHA T_PUSH 1 3 0; [< X * >]
            else: return part row ( Y, X + 1, L )
                                           ^
    [58:138;15] PUSHI T_PUSH 0 0 0 1; *
            else: return part row ( Y, X + 1, L )
                                       ^^^^^
    [58:139;14] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            else: return part row ( Y, X + 1, L )
                                              ^
    [58:140;15] PUSHA T_PUSH 2 3 0; [< L * >]
            else: return part row ( Y, X + 1, L )
                         ^^^^^^^^^^^^^^^^^^^^^^^^
    [58:141;13] CALLG T_CALLG 3 1 120 PACKED_VEC; [< [< part row >] * >]
            else: return part row ( Y, X + 1, L )
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [58:142;12] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [143;12] LABEL 14
    [57:135;12] JMP T_JMP 0 0 8 0; 14
    [143;12] LABEL 11
            else: return part row ( Y, X + 1, L )
                                                 ^
    [55:120;12] BEGF T_BEGF 3 3 24 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y
                X L >]
    [58:143;9] ENDF T_ENDF 0 3 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^
    [59:144;10] PUSHA T_PUSH 1 2 0; [< L L >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [59:145;11] PUSHI T_PUSH 0 0 0 *UNDEFINED*; *
        L[] = part row ( Y, 1, [] )
                         ^
    [59:146;12] PUSHA T_PUSH 0 2 0; [< Y * >]
        L[] = part row ( Y, 1, [] )
                            ^
    [59:147;13] PUSHI T_PUSH 0 0 0 1; *
        L[] = part row ( Y, 1, [] )
                               ^^
    [59:148;14] PUSHOBJ T_SET 10 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [59:149;15] PUSHI T_PUSH 0 0 0 "["; *
    [59:150;14] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [59:151;15] PUSHI T_PUSH 0 0 0 "]"; *
    [59:152;14] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [59:153;15] PUSHI T_PUSH 0 0 0 ","; *
    [59:154;14] SETI T_SET 1 0 0 ".separator"; [< * * >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [59:155;12] CALLG T_CALLG 3 1 120 PACKED_VEC; [< [< part row >] * >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [59:156;11] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                * L >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [59:157;12] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [59:158;11] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [59:159;9] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^
    [60:160;10] PUSHA T_PUSH 0 2 0; [< Y * >]
        if Y == 9: return L
                ^
    [60:161;11] PUSHI T_PUSH 0 0 0 9; *
        if Y == 9: return L
             ^^
    [60:162;9] JMPNEQ T_JMPS 0 0 0 0; 15
    [163;9] LABEL 16
        if Y == 9: return L
                          ^
    [60:163;10] PUSHA T_PUSH 1 2 0; [< L * >]
        if Y == 9: return L
                   ^^^^^^^^
    [60:164;9] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^^^^^^
    [60:165;9] JMP T_JMP 0 0 0 0; 17
    [166;9] LABEL 15
    [60:162;9] JMPNEQ T_JMPS 0 0 4 0; 15
        else: return part table ( Y + 1, L )
                                  ^
    [61:166;10] PUSHA T_PUSH 0 2 0; [< Y * >]
        else: return part table ( Y + 1, L )
                                      ^
    [61:167;11] PUSHI T_PUSH 0 0 0 1; *
        else: return part table ( Y + 1, L )
                                  ^^^^^
    [61:168;10] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
        else: return part table ( Y + 1, L )
                                         ^
    [61:169;11] PUSHA T_PUSH 1 2 0; [< L * >]
        else: return part table ( Y + 1, L )
                     ^^^^^^^^^^^^^^^^^^^^^^^
    [61:170;10] CALLG T_CALLG 2 1 119 PACKED_VEC; [< [< part table >]
                * >]
        else: return part table ( Y + 1, L )
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [61:171;9] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [172;9] LABEL 17
    [60:165;9] JMP T_JMP 0 0 7 0; 17
    [172;9] LABEL 10
        else: return part table ( Y + 1, L )
                                            ^
    [54:119;9] BEGF T_BEGF 2 2 54 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
               L >]
    [61:172;7] ENDF T_ENDF 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    return part table ( 1, [] )
                        ^
    [62:173;8] PUSHI T_PUSH 0 0 0 1; *
    return part table ( 1, [] )
                           ^^
    [62:174;9] PUSHOBJ T_SET 10 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
               *
    [62:175;10] PUSHI T_PUSH 0 0 0 "["; *
    [62:176;9] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [62:177;10] PUSHI T_PUSH 0 0 0 "]"; *
    [62:178;9] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [62:179;10] PUSHI T_PUSH 0 0 0 ","; *
    [62:180;9] SETI T_SET 1 0 0 ".separator"; [< * * >]
    return part table ( 1, [] )
           ^^^^^^^^^^^^^^^^^^^^
    [62:181;8] CALLG T_CALLG 2 1 119 PACKED_VEC; [< [< part table >]
               * >]
    return part table ( 1, [] )
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [62:182;7] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [183;7] LABEL 9
    return part table ( 1, [] )
                               ^
    [53:118;7] BEGF T_BEGF 0 1 66 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
               table >] >]
    [62:183;7] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
multiplication table
^^^^^^^^^^^^^^^^^^^^
    [64:184;8] CALLG T_CALLG 0 4294967295 118 PACKED_VEC; [< [<
               multiplication table >] * >]
function (X) "**" (Y): return X ^ Y
                       ^
    [68:185;10] BEGF T_BEGF 2 1 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< ** X Y >]
function (X) "**" (Y): return X ^ Y
                              ^
    [68:186;11] PUSHA T_PUSH 0 1 0; [< X * >]
function (X) "**" (Y): return X ^ Y
                                  ^
    [68:187;12] PUSHA T_PUSH 1 1 0; [< Y * >]
function (X) "**" (Y): return X ^ Y
                              ^^^^^
    [68:188;11] POW T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function (X) "**" (Y): return X ^ Y
                       ^^^^^^^^^^^^
    [68:189;10] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function (X) "**" (Y): return X ^ Y
                                   ^
    [68:185;10] BEGF T_BEGF 2 1 6 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< ** X Y >]
    [68:190;8] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
(2)**(6)
 ^
    [69:191;9] PUSHI T_PUSH 0 0 0 2; *
(2)**(6)
      ^
    [69:192;10] PUSHI T_PUSH 0 0 0 6; *
(2)**(6)
^^^^^^^^
    [69:193;9] CALLG T_CALLG 2 4294967295 185 PACKED_VEC; [< ** * >]
function "AND" (L):
                  ^
    [71:194;10] BEGF T_BEGF 1 1 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< AND L >]
    i = 0
        ^
    [72:195;11] PUSHI T_PUSH 0 0 0 0; i
        next i + = 1
        ^^^^^^
    [77:196;12] PUSHS T_PUSH 0 0 0; [< i i >]
    repeat:
          ^
        E = L[i]
^^^^^^^^^^^^^^^^
        if E == *NONE*: return *TRUE*
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        else if NOT E: return *FALSE*
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next i + = 1
^^^^^^^^^^^^^^^^^^^^
    [77:197;13] BEGL T_BEGL 0 1 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< loop i >]
        E = L[i]
            ^
    [74:198;14] PUSHA T_PUSH 0 1 0; [< L L >]
        E = L[i]
             ^^^
    [74:199;15] PUSHS T_PUSH 2 0 0; [< i * >]
        E = L[i]
            ^^^^
    [74:200;15] GET T_GET 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                L E >]
        E = L[i]
            ^^^^
    [74:201;14] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                E E >]
        if E == *NONE*: return *TRUE*
           ^
    [75:202;15] PUSHS T_PUSH 0 0 0; [< E * >]
        if E == *NONE*: return *TRUE*
                ^^^^^^
    [75:203;16] PUSHG T_PUSH 2 0 0 PACKED_VEC; [< * *NONE* >]
        if E == *NONE*: return *TRUE*
             ^^
    [75:204;14] JMPNEQ T_JMPS 0 0 0 0; 20
    [205;14] LABEL 21
        if E == *NONE*: return *TRUE*
                               ^^^^^^
    [75:205;15] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
        if E == *NONE*: return *TRUE*
                        ^^^^^^^^^^^^^
    [75:206;14] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
        if E == *NONE*: return *TRUE*
           ^^^^^^^^^^^
    [75:207;14] JMP T_JMP 0 0 0 0; 22
    [208;14] LABEL 20
    [75:204;14] JMPNEQ T_JMPS 0 0 4 0; 20
        else if NOT E: return *FALSE*
                    ^
    [76:208;15] PUSHS T_PUSH 0 0 0; [< E * >]
        else if NOT E: return *FALSE*
                    ^
    [76:209;14] JMPFALSE T_JMPS 0 0 0 0; 24
        else if NOT E: return *FALSE*
                ^^^^^
    [76:210;14] JMP T_JMP 0 0 0 0; 23
    [211;14] LABEL 24
    [76:209;14] JMPFALSE T_JMPS 0 0 2 0; 24
        else if NOT E: return *FALSE*
                              ^^^^^^^
    [76:211;15] PUSHG T_PUSH 0 0 0 PACKED_VEC; [< * *FALSE* >]
        else if NOT E: return *FALSE*
                       ^^^^^^^^^^^^^^
    [76:212;14] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [213;14] LABEL 23
    [76:210;14] JMP T_JMP 0 0 3 0; 23
    [213;14] LABEL 22
    [75:207;14] JMP T_JMP 0 0 6 0; 22
        next i + = 1
        ^^^^^^
    [77:213;15] PUSHS T_PUSH 1 0 0; [< i i >]
        next i + = 1
                   ^
    [77:214;16] PUSHI T_PUSH 0 0 0 1; *
        next i + = 1
        ^^^^^^^^^^^^
    [77:215;15] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next i + = 1
        ^^^^^^
    [77:216;14] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                * [< next i >] >]
    repeat:
          ^
        E = L[i]
^^^^^^^^^^^^^^^^
        if E == *NONE*: return *TRUE*
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        else if NOT E: return *FALSE*
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next i + = 1
^^^^^^^^^^^^^^^^^^^^
    [77:217;12] ENDL T_ENDL 1 1 19 *UNDEFINED_GEN(0x7FF4170000000000)*
    [218;12] LABEL 19
    [218;12] LABEL 18
        next i + = 1
                    ^
    [71:194;12] BEGF T_BEGF 1 1 25 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< AND L >]
    [77:218;9] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
AND ([*TRUE*, *TRUE*, *TRUE*])
     ^^^^^^^^^^^^^^^^^^^^^^^^
    [78:219;10] PUSHOBJ T_SET 13 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [78:220;11] PUSHI T_PUSH 0 0 0 "["; *
    [78:221;10] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [78:222;11] PUSHI T_PUSH 0 0 0 "]"; *
    [78:223;10] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [78:224;11] PUSHI T_PUSH 0 0 0 ","; *
    [78:225;10] SETI T_SET 1 0 0 ".separator"; [< * * >]
AND ([*TRUE*, *TRUE*, *TRUE*])
      ^^^^^^
    [78:226;11] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
    [78:227;10] VPUSH T_SET 1 0 0 "["; [< * * >]
AND ([*TRUE*, *TRUE*, *TRUE*])
              ^^^^^^
    [78:228;11] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
    [78:229;10] VPUSH T_SET 1 0 0 "["; [< * * >]
AND ([*TRUE*, *TRUE*, *TRUE*])
                      ^^^^^^
    [78:230;11] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
    [78:231;10] VPUSH T_SET 1 0 0 "["; [< * * >]
AND ([*TRUE*, *TRUE*, *TRUE*])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [78:232;10] CALLG T_CALLG 1 4294967295 194 PACKED_VEC; [< AND * >]
AND ([*TRUE*, *FALSE*, *TRUE*])
     ^^^^^^^^^^^^^^^^^^^^^^^^^
    [79:233;11] PUSHOBJ T_SET 13 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [79:234;12] PUSHI T_PUSH 0 0 0 "["; *
    [79:235;11] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [79:236;12] PUSHI T_PUSH 0 0 0 "]"; *
    [79:237;11] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [79:238;12] PUSHI T_PUSH 0 0 0 ","; *
    [79:239;11] SETI T_SET 1 0 0 ".separator"; [< * * >]
AND ([*TRUE*, *FALSE*, *TRUE*])
      ^^^^^^
    [79:240;12] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
    [79:241;11] VPUSH T_SET 1 0 0 "["; [< * * >]
AND ([*TRUE*, *FALSE*, *TRUE*])
              ^^^^^^^
    [79:242;12] PUSHG T_PUSH 0 0 0 PACKED_VEC; [< * *FALSE* >]
    [79:243;11] VPUSH T_SET 1 0 0 "["; [< * * >]
AND ([*TRUE*, *FALSE*, *TRUE*])
                       ^^^^^^
    [79:244;12] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
    [79:245;11] VPUSH T_SET 1 0 0 "["; [< * * >]
AND ([*TRUE*, *FALSE*, *TRUE*])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [79:246;11] CALLG T_CALLG 1 4294967295 194 PACKED_VEC; [< AND * >]
function sum incrementing by (X) from (Y) to (Z):
                                                ^
    [81:247;14] BEGF T_BEGF 3 1 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum
                incrementing by >] X Y Z >]
    if X > 0 AND Y > Z: return 0
       ^
    [82:248;15] PUSHA T_PUSH 0 1 0; [< X * >]
    if X > 0 AND Y > Z: return 0
           ^
    [82:249;16] PUSHI T_PUSH 0 0 0 0; *
    if X > 0 AND Y > Z: return 0
         ^
    [82:250;14] JMPLEQ T_JMPS 0 0 0 0; 26
    [251;14] LABEL 28
    if X > 0 AND Y > Z: return 0
                 ^
    [82:251;15] PUSHA T_PUSH 1 1 0; [< Y * >]
    if X > 0 AND Y > Z: return 0
                     ^
    [82:252;16] PUSHA T_PUSH 2 1 0; [< Z * >]
    if X > 0 AND Y > Z: return 0
                   ^
    [82:253;14] JMPLEQ T_JMPS 0 0 0 0; 26
    [254;14] LABEL 27
    if X > 0 AND Y > Z: return 0
                               ^
    [82:254;15] PUSHI T_PUSH 0 0 0 0; *
    if X > 0 AND Y > Z: return 0
                        ^^^^^^^^
    [82:255;14] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    if X > 0 AND Y > Z: return 0
       ^^^^^^^^^^^^^^^
    [82:256;14] JMP T_JMP 0 0 0 0; 29
    [257;14] LABEL 26
    [82:253;14] JMPLEQ T_JMPS 0 0 4 0; 26
    [82:250;14] JMPLEQ T_JMPS 0 0 7 0; 26
    else if X < 0 AND Y < Z: return 0
            ^
    [83:257;15] PUSHA T_PUSH 0 1 0; [< X * >]
    else if X < 0 AND Y < Z: return 0
                ^
    [83:258;16] PUSHI T_PUSH 0 0 0 0; *
    else if X < 0 AND Y < Z: return 0
              ^
    [83:259;14] JMPGEQ T_JMPS 0 0 0 0; 30
    [260;14] LABEL 32
    else if X < 0 AND Y < Z: return 0
                      ^
    [83:260;15] PUSHA T_PUSH 1 1 0; [< Y * >]
    else if X < 0 AND Y < Z: return 0
                          ^
    [83:261;16] PUSHA T_PUSH 2 1 0; [< Z * >]
    else if X < 0 AND Y < Z: return 0
                        ^
    [83:262;14] JMPGEQ T_JMPS 0 0 0 0; 30
    [263;14] LABEL 31
    else if X < 0 AND Y < Z: return 0
                                    ^
    [83:263;15] PUSHI T_PUSH 0 0 0 0; *
    else if X < 0 AND Y < Z: return 0
                             ^^^^^^^^
    [83:264;14] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    else if X < 0 AND Y < Z: return 0
            ^^^^^^^^^^^^^^^
    [83:265;14] JMP T_JMP 0 0 0 0; 29
    [266;14] LABEL 30
    [83:262;14] JMPGEQ T_JMPS 0 0 4 0; 30
    [83:259;14] JMPGEQ T_JMPS 0 0 7 0; 30
    else:
        ^
        return Y + sum incrementing by (X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       from ( Y + X ) to (Z)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [86:266;14] BEG T_BEG 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        return Y + sum incrementing by (X)
               ^
    [85:267;15] PUSHA T_PUSH 1 1 0; [< Y * >]
        return Y + sum incrementing by (X)
                                       ^^^
    [85:268;16] PUSHA T_PUSH 0 1 0; [< X * >]
                       from ( Y + X ) to (Z)
                              ^
    [86:269;17] PUSHA T_PUSH 1 1 0; [< Y * >]
                       from ( Y + X ) to (Z)
                                  ^
    [86:270;18] PUSHA T_PUSH 0 1 0; [< X * >]
                       from ( Y + X ) to (Z)
                            ^^^^^^^^^
    [86:271;17] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
                       from ( Y + X ) to (Z)
                                         ^^^
    [86:272;18] PUSHA T_PUSH 2 1 0; [< Z * >]
        return Y + sum incrementing by (X)
                   ^^^^^^^^^^^^^^^^^^^^^^^
                       from ( Y + X ) to (Z)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [86:273;16] CALLG T_CALLG 3 1 247 PACKED_VEC; [< [< sum incrementing
                by >] * >]
        return Y + sum incrementing by (X)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       from ( Y + X ) to (Z)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [86:274;15] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
        return Y + sum incrementing by (X)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       from ( Y + X ) to (Z)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [86:275;14] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    else:
        ^
        return Y + sum incrementing by (X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       from ( Y + X ) to (Z)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [86:276;14] END T_END 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    [277;14] LABEL 33
    [277;14] LABEL 29
    [83:265;14] JMP T_JMP 0 0 12 0; 29
    [82:256;14] JMP T_JMP 0 0 21 0; 29
    [277;14] LABEL 25
                       from ( Y + X ) to (Z)
                                            ^
    [81:247;14] BEGF T_BEGF 3 1 31 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum
                incrementing by >] X Y Z >]
    [86:277;11] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum incrementing by (1) from (1) to (20)
                     ^
    [87:278;12] PUSHI T_PUSH 0 0 0 1; *
sum incrementing by (1) from (1) to (20)
                              ^
    [87:279;13] PUSHI T_PUSH 0 0 0 1; *
sum incrementing by (1) from (1) to (20)
                                     ^^
    [87:280;14] PUSHI T_PUSH 0 0 0 20; *
sum incrementing by (1) from (1) to (20)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [87:281;12] CALLG T_CALLG 3 4294967295 247 PACKED_VEC; [< [< sum
                incrementing by >] * >]
sum incrementing by (1) to (20) from (1)
                     ^
    [88:282;13] PUSHI T_PUSH 0 0 0 1; *
sum incrementing by (1) to (20) from (1)
                                      ^
    [88:283;14] PUSHI T_PUSH 0 0 0 1; *
sum incrementing by (1) to (20) from (1)
                            ^^
    [88:284;15] PUSHI T_PUSH 0 0 0 20; *
sum incrementing by (1) to (20) from (1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [88:285;13] CALLG T_CALLG 3 4294967295 247 PACKED_VEC; [< [< sum
                incrementing by >] * >]
sum incrementing by (-1) to (1) from (20)
                     ^^
    [89:286;14] PUSHI T_PUSH 0 0 0 -1; *
sum incrementing by (-1) to (1) from (20)
                                      ^^
    [89:287;15] PUSHI T_PUSH 0 0 0 20; *
sum incrementing by (-1) to (1) from (20)
                             ^
    [89:288;16] PUSHI T_PUSH 0 0 0 1; *
sum incrementing by (-1) to (1) from (20)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [89:289;14] CALLG T_CALLG 3 4294967295 247 PACKED_VEC; [< [< sum
                incrementing by >] * >]
function (X) (Y): return X[Y]
                  ^
    [91:290;16] BEGF T_BEGF 2 1 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< *NONE* X Y >]
function (X) (Y): return X[Y]
                         ^
    [91:291;17] PUSHA T_PUSH 0 1 0; [< X X >]
function (X) (Y): return X[Y]
                          ^^^
    [91:292;18] PUSHA T_PUSH 1 1 0; [< Y * >]
function (X) (Y): return X[Y]
                         ^^^^
    [91:293;18] GET T_GET 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                X * >]
function (X) (Y): return X[Y]
                         ^^^^
    [91:294;17] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
                * * >]
function (X) (Y): return X[Y]
                  ^^^^^^^^^^^
    [91:295;16] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function (X) (Y): return X[Y]
                             ^
    [91:290;16] BEGF T_BEGF 2 1 7 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< *NONE* X Y >]
    [91:296;14] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
L = [1, 2, 3, 4, 5]
    ^^^^^^^^^^^^^^^
    [92:297;15] PUSHOBJ T_SET 15 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; L
    [92:298;16] PUSHI T_PUSH 0 0 0 "["; *
    [92:299;15] SETI T_SET 1 0 0 ".initiator"; [< * L >]
    [92:300;16] PUSHI T_PUSH 0 0 0 "]"; *
    [92:301;15] SETI T_SET 1 0 0 ".terminator"; [< * L >]
    [92:302;16] PUSHI T_PUSH 0 0 0 ","; *
    [92:303;15] SETI T_SET 1 0 0 ".separator"; [< * L >]
L = [1, 2, 3, 4, 5]
     ^
    [92:304;16] PUSHI T_PUSH 0 0 0 1; *
    [92:305;15] VPUSH T_SET 1 0 0 "["; [< * L >]
L = [1, 2, 3, 4, 5]
        ^
    [92:306;16] PUSHI T_PUSH 0 0 0 2; *
    [92:307;15] VPUSH T_SET 1 0 0 "["; [< * L >]
L = [1, 2, 3, 4, 5]
           ^
    [92:308;16] PUSHI T_PUSH 0 0 0 3; *
    [92:309;15] VPUSH T_SET 1 0 0 "["; [< * L >]
L = [1, 2, 3, 4, 5]
              ^
    [92:310;16] PUSHI T_PUSH 0 0 0 4; *
    [92:311;15] VPUSH T_SET 1 0 0 "["; [< * L >]
L = [1, 2, 3, 4, 5]
                 ^
    [92:312;16] PUSHI T_PUSH 0 0 0 5; *
    [92:313;15] VPUSH T_SET 1 0 0 "["; [< * L >]
(L)(0)
^^^
    [93:314;16] PUSHS T_PUSH 0 0 0; [< L * >]
(L)(0)
    ^
    [93:315;17] PUSHI T_PUSH 0 0 0 0; *
(L)(0)
^^^^^^
    [93:316;16] CALLG T_CALLG 2 4294967295 290 PACKED_VEC; [< *NONE*
                * >]
(L)(3)
^^^
    [94:317;17] PUSHS T_PUSH 1 0 0; [< L * >]
(L)(3)
    ^
    [94:318;18] PUSHI T_PUSH 0 0 0 3; *
(L)(3)
^^^^^^
    [94:319;17] CALLG T_CALLG 2 4294967295 290 PACKED_VEC; [< *NONE*
                * >]
(L)(5)
^^^
    [95:320;18] PUSHS T_PUSH 2 0 0; [< L * >]
(L)(5)
    ^
    [95:321;19] PUSHI T_PUSH 0 0 0 5; *
(L)(5)
^^^^^^
    [95:322;18] CALLG T_CALLG 2 4294967295 290 PACKED_VEC; [< *NONE*
                * >]
function increment (X) by (Y ?= 1): return X + Y
                                    ^
    [99:323;20] BEGF T_BEGF 2 1 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< increment X Y >]
function increment (X) by (Y ?= 1): return X + Y
                                           ^
    [99:324;21] PUSHA T_PUSH 0 1 0; [< X * >]
function increment (X) by (Y ?= 1): return X + Y
                                               ^
    [99:325;22] PUSHA T_PUSH 1 1 0; [< Y * >]
function increment (X) by (Y ?= 1): return X + Y
                                           ^^^^^
    [99:326;21] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function increment (X) by (Y ?= 1): return X + Y
                                    ^^^^^^^^^^^^
    [99:327;20] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function increment (X) by (Y ?= 1): return X + Y
                                                ^
    [99:323;20] BEGF T_BEGF 2 1 6 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< increment X Y >]
    [99:328;18] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
increment (4) by (5)
           ^
    [100:329;19] PUSHI T_PUSH 0 0 0 4; *
increment (4) by (5)
                  ^
    [100:330;20] PUSHI T_PUSH 0 0 0 5; *
increment (4) by (5)
^^^^^^^^^^^^^^^^^^^^
    [100:331;19] CALLG T_CALLG 2 4294967295 323 PACKED_VEC; [< increment
                 * >]
increment (4)
           ^
    [101:332;20] PUSHI T_PUSH 0 0 0 4; *
function increment (X) by (Y ?= 1): return X + Y
                                ^
    [99:333;21] PUSHI T_PUSH 0 0 0 1; *
increment (4)
^^^^^^^^^^^^^
    [101:334;20] CALLG T_CALLG 2 4294967295 323 PACKED_VEC; [< increment
                 * >]
function add (X ?= 1) to (Y): return X + Y
                              ^
    [103:335;22] BEGF T_BEGF 2 1 0 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; [< add X Y >]
function add (X ?= 1) to (Y): return X + Y
                                     ^
    [103:336;23] PUSHA T_PUSH 0 1 0; [< X * >]
function add (X ?= 1) to (Y): return X + Y
                                         ^
    [103:337;24] PUSHA T_PUSH 1 1 0; [< Y * >]
function add (X ?= 1) to (Y): return X + Y
                                     ^^^^^
    [103:338;23] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function add (X ?= 1) to (Y): return X + Y
                              ^^^^^^^^^^^^
    [103:339;22] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function add (X ?= 1) to (Y): return X + Y
                                          ^
    [103:335;22] BEGF T_BEGF 2 1 6 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; [< add X Y >]
    [103:340;20] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
add (3) to (4)
     ^
    [104:341;21] PUSHI T_PUSH 0 0 0 3; *
add (3) to (4)
            ^
    [104:342;22] PUSHI T_PUSH 0 0 0 4; *
add (3) to (4)
^^^^^^^^^^^^^^
    [104:343;21] CALLG T_CALLG 2 4294967295 335 PACKED_VEC; [< add * >]
function add (X ?= 1) to (Y): return X + Y
                   ^
    [103:344;22] PUSHI T_PUSH 0 0 0 1; *
add to (4)
        ^
    [105:345;23] PUSHI T_PUSH 0 0 0 4; *
add to (4)
^^^^^^^^^^
    [105:346;22] CALLG T_CALLG 2 4294967295 335 PACKED_VEC; [< add * >]
function look ( X ?= Q ): return X
                          ^
    [107:347;23] BEGF T_BEGF 1 1 0 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; [< look X >]
function look ( X ?= Q ): return X
                                 ^
    [107:348;24] PUSHA T_PUSH 0 1 0; [< X * >]
function look ( X ?= Q ): return X
                          ^^^^^^^^
    [107:349;23] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function look ( X ?= Q ): return X
                                  ^
    [107:347;23] BEGF T_BEGF 1 1 4 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; [< look X >]
    [107:350;22] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
look ( 0 )
       ^
    [108:351;23] PUSHI T_PUSH 0 0 0 0; *
look ( 0 )
^^^^^^^^^^
    [108:352;23] CALLG T_CALLG 1 4294967295 347 PACKED_VEC; [< look * >]
Q = 100
    ^^^
    [109:353;24] PUSHI T_PUSH 0 0 0 100; Q
function look ( X ?= Q ): return X
                     ^
    [107:354;25] PUSHS T_PUSH 0 0 0; [< Q * >]
look
^^^^
    [110:355;25] CALLG T_CALLG 1 4294967295 347 PACKED_VEC; [< look * >]
next Q = 200
         ^^^
    [111:356;26] PUSHI T_PUSH 0 0 0 200; [< next Q >]
function look ( X ?= Q ): return X
                     ^
    [107:357;27] PUSHS T_PUSH 0 0 0; [< Q * >]
look
^^^^
    [112:358;27] CALLG T_CALLG 1 4294967295 347 PACKED_VEC; [< look * >]
ERROR: in line ###: argument with NO default found AFTER argument with
       default:
function adjust ( X ?= 1, Y ): return X + Y
                          ^
ERROR: in line ###: argument list before first term must have argument
       with NO default:
function (X ?= 1) adjust (Y): return X + Y
         ^^^^^^^^
ERROR: in line ###: omitable argument list SHADOWS following
       non-omittable argument list with the same kind of brackets:
function my adder (X ?= 1) (Y): return X + Y
                  ^^^^^^^^
ERROR: in line ###: omitable argument list SHADOWS following omittable
       argument list with different brackets:
function my adder 2 (X ?= 1) [Y ?= 2]: return X + Y
                    ^^^^^^^^
function test (X) option ( Y ?= *TRUE* ): return X, Y
                                          ^
    [125:359;29] BEGF T_BEGF 2 1 0 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; [< test X Y >]
function test (X) option ( Y ?= *TRUE* ): return X, Y
                                                 ^
    [125:360;30] PUSHA T_PUSH 0 1 0; [< X * >]
function test (X) option ( Y ?= *TRUE* ): return X, Y
                                                    ^
    [125:361;31] PUSHA T_PUSH 1 1 0; [< Y * >]
function test (X) option ( Y ?= *TRUE* ): return X, Y
                                          ^^^^^^^^^^^
    [125:362;29] RET T_RET 0 1 2 *UNDEFINED_GEN(0x7FF4170000000000)*
function test (X) option ( Y ?= *TRUE* ): return X, Y
                                                     ^
    [125:359;29] BEGF T_BEGF 2 1 5 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; [< test X Y >]
    [125:363;27] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
test (3)
      ^
    [126:364;28] PUSHI T_PUSH 0 0 0 3; *
function test (X) option ( Y ?= *TRUE* ): return X, Y
                                ^^^^^^
    [125:365;29] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
test (3)
^^^^^^^^
    [126:366;28] CALLG T_CALLG 2 4294967295 359 PACKED_VEC; [< test * >]
test (3) no option
      ^
    [127:367;29] PUSHI T_PUSH 0 0 0 3; *
// Reckon Language Function Test Data
^
    [0:368;30] PUSHG T_PUSH 0 0 0 PACKED_VEC; [< * *FALSE* >]
test (3) no option
^^^^^^^^^^^^^^^^^^
    [127:369;29] CALLG T_CALLG 2 4294967295 359 PACKED_VEC; [< test * >]
test (3) option
      ^
    [128:370;30] PUSHI T_PUSH 0 0 0 3; *
// Reckon Language Function Test Data
^
    [0:371;31] PUSHG T_PUSH 1 0 0 PACKED_VEC; [< * *TRUE* >]
test (3) option
^^^^^^^^^^^^^^^
    [128:372;30] CALLG T_CALLG 2 4294967295 359 PACKED_VEC; [< test * >]
test (3) option ( *FALSE* )
      ^
    [129:373;31] PUSHI T_PUSH 0 0 0 3; *
test (3) option ( *FALSE* )
                ^^^^^^^^^^^
    [129:374;32] PUSHG T_PUSH 0 0 0 PACKED_VEC; [< * *FALSE* >]
test (3) option ( *FALSE* )
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [129:375;31] CALLG T_CALLG 2 4294967295 359 PACKED_VEC; [< test * >]
X = 10
    ^^
    [133:376;32] PUSHI T_PUSH 0 0 0 10; X
add (X) 1      // Instead of `add (X) (1)'
    ^^^
    [134:377;33] PUSHS T_PUSH 0 0 0; [< X * >]
add (X) 1      // Instead of `add (X) (1)'
        ^
    [134:378;34] PUSHI T_PUSH 0 0 0 1; *
add (X) 1      // Instead of `add (X) (1)'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [134:379;33] CALLG T_CALLG 2 4294967295 0 PACKED_VEC; [< add * >]
(X) add 2      // Instead of `(X) add (2)'
^^^
    [135:380;34] PUSHS T_PUSH 1 0 0; [< X * >]
(X) add 2      // Instead of `(X) add (2)'
        ^
    [135:381;35] PUSHI T_PUSH 0 0 0 2; *
(X) add 2      // Instead of `(X) add (2)'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [135:382;34] CALLG T_CALLG 2 4294967295 10 PACKED_VEC; [< add * >]
add 2 "HI"     // Instead of `add (2) ("HI")'
    ^
    [136:383;35] PUSHI T_PUSH 0 0 0 2; *
add 2 "HI"     // Instead of `add (2) ("HI")'
      ^^^^
    [136:384;36] PUSHI T_PUSH 0 0 0 "HI"; *
add 2 "HI"     // Instead of `add (2) ("HI")'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [136:385;35] CALLG T_CALLG 2 4294967295 0 PACKED_VEC; [< add * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
    ^^^^^^^^^
    [137:386;36] PUSHOBJ T_SET 13 0 2 *
                 UNDEFINED_GEN(0x7FF4170000000000)*; *
    [137:387;37] PUSHI T_PUSH 0 0 0 "["; *
    [137:388;36] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [137:389;37] PUSHI T_PUSH 0 0 0 "]"; *
    [137:390;36] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [137:391;37] PUSHI T_PUSH 0 0 0 ","; *
    [137:392;36] SETI T_SET 1 0 0 ".separator"; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
     ^
    [137:393;37] PUSHI T_PUSH 0 0 0 1; *
    [137:394;36] VPUSH T_SET 1 0 0 "["; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
        ^
    [137:395;37] PUSHI T_PUSH 0 0 0 2; *
    [137:396;36] VPUSH T_SET 1 0 0 "["; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
           ^
    [137:397;37] PUSHI T_PUSH 0 0 0 3; *
    [137:398;36] VPUSH T_SET 1 0 0 "["; [< * * >]
sum [1, 2, 3]  // Instead of `sum ([1, 2, 3])'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [137:399;36] CALLG T_CALLG 1 4294967295 66 PACKED_VEC; [< sum * >]
