    [0:0;1] PUSHI T_PUSH 0 0 0 *FALSE*; *FALSE*
    [0:1;2] PUSHI T_PUSH 0 0 0 *TRUE*; *TRUE*
    [0:2;3] PUSHI T_PUSH 0 0 0 *NONE*; *NONE*
function add (X) (Y):
                    ^
    [11:3;5] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    Z = X + Y
        ^
    [12:4;6] PUSHA T_PUSH 0 1 0; [< X * >]
    Z = X + Y
            ^
    [12:5;7] PUSHA T_PUSH 1 1 0; [< Y * >]
    Z = X + Y
        ^^^^^
    [12:6;6] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; Z
    return Z
           ^
    [13:7;7] PUSHS T_PUSH 0 0 0; [< Z * >]
    return Z
    ^^^^^^^^
    [13:8;6] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [9;6] LABEL 1
    return Z
            ^
    [11:3;6] BEGF T_BEGF 2 1 7 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
             add X Y >]
    [13:9;3] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
Z = add (5) (7)
         ^
    [15:10;4] PUSHI T_PUSH 0 0 0 5; *
Z = add (5) (7)
             ^
    [15:11;5] PUSHI T_PUSH 0 0 0 7; *
Z = add (5) (7)
    ^^^^^^^^^^^
    [15:12;4] CALLG T_CALLG 2 1 3 PACKED_VEC; [< add Z >]
function (X) sub (Y): return X - Y;
                      ^
    [17:13;6] BEGF T_BEGF 2 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sub X Y >]
function (X) sub (Y): return X - Y;
                             ^
    [17:14;7] PUSHA T_PUSH 0 1 0; [< X * >]
function (X) sub (Y): return X - Y;
                                 ^
    [17:15;8] PUSHA T_PUSH 1 1 0; [< Y * >]
function (X) sub (Y): return X - Y;
                             ^^^^^
    [17:16;7] SUB T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
function (X) sub (Y): return X - Y;
                      ^^^^^^^^^^^^
    [17:17;6] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
function (X) sub (Y): return X - Y;
                                  ^
    [17:13;6] BEGF T_BEGF 2 1 6 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sub X Y >]
    [17:18;4] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
W = (5) sub (7)
     ^
    [19:19;5] PUSHI T_PUSH 0 0 0 5; *
W = (5) sub (7)
             ^
    [19:20;6] PUSHI T_PUSH 0 0 0 7; *
W = (5) sub (7)
    ^^^^^^^^^^^
    [19:21;5] CALLG T_CALLG 2 1 13 PACKED_VEC; [< sub W >]
function sum from (X) to (Y):
                            ^
    [21:22;7] BEGF T_BEGF 2 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
              Y >]
    S = 0
        ^
    [22:23;8] PUSHI T_PUSH 0 0 0 0; S
        next S + = X
        ^^^^^^
    [24:24;9] PUSHS T_PUSH 0 0 0; [< S S >]
        next X + = 1
        ^^^^^^
    [25:25;10] PUSHA T_PUSH 0 1 0; [< X X >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [25:26;12] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S X >]
    while X <= Y:
          ^
    [23:27;13] PUSHS T_PUSH 2 0 0; [< X * >]
    while X <= Y:
               ^
    [23:28;14] PUSHA T_PUSH 1 1 0; [< Y * >]
    while X <= Y:
            ^^
    [23:29;12] JMPGT T_JMPS 0 0 0 0; 3
    [30;12] LABEL 4
        next S + = X
        ^^^^^^
    [24:30;13] PUSHS T_PUSH 1 0 0; [< [< next S >] * >]
        next S + = X
                   ^
    [24:31;14] PUSHS T_PUSH 3 0 0; [< X * >]
        next S + = X
        ^^^^^^^^^^^^
    [24:32;13] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = X
        ^^^^^^
    [24:33;12] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next X + = 1
        ^^^^^^
    [25:34;13] PUSHS T_PUSH 0 0 0; [< [< next X >] * >]
        next X + = 1
                   ^
    [25:35;14] PUSHI T_PUSH 0 0 0 1; *
        next X + = 1
        ^^^^^^^^^^^^
    [25:36;13] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next X + = 1
        ^^^^^^
    [25:37;12] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next X >] >]
    while X <= Y:
                ^
        next S + = X
^^^^^^^^^^^^^^^^^^^^
        next X + = 1
^^^^^^^^^^^^^^^^^^^^
    [25:38;10] ENDL T_ENDL 0 2 11 *UNDEFINED_GEN(0x7FF4170000000000)*
    [39;10] LABEL 3
    [23:29;10] JMPGT T_JMPS[1] 2 0 10 0; 3
    return S
           ^
    [26:39;11] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [26:40;10] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [41;10] LABEL 2
    return S
            ^
    [21:22;10] BEGF T_BEGF 2 1 20 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< sum from >] X
               Y >]
    [26:41;5] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum from (1) to (10)
          ^
    [28:42;6] PUSHI T_PUSH 0 0 0 1; *
sum from (1) to (10)
                 ^^
    [28:43;7] PUSHI T_PUSH 0 0 0 10; *
sum from (1) to (10)
^^^^^^^^^^^^^^^^^^^^
    [28:44;6] CALLG T_CALLG 2 4294967295 22 PACKED_VEC; [< [< sum
              from >] * >]
function sum (L):
                ^
    [30:45;7] BEGF T_BEGF 1 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
              sum L >]
    S = 0
        ^
    [31:46;8] PUSHI T_PUSH 0 0 0 0; S
    E = L[]
        ^
    [32:47;9] PUSHA T_PUSH 0 1 0; [< L L >]
    E = L[]
        ^^^
    [32:48;10] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L E >]
    E = L[]
        ^^^
    [32:49;9] DEL T_POP 1 0 1 *UNDEFINED_GEN(0x7FF4170000000000)*; [< E
              E >]
        next S + = E
        ^^^^^^
    [34:50;10] PUSHS T_PUSH 1 0 0; [< S S >]
        next E = L[]
        ^^^^^^
    [35:51;11] PUSHS T_PUSH 1 0 0; [< E E >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [35:52;13] BEGL T_BEGL 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               loop S E >]
    until E == *NONE*:
          ^
    [33:53;14] PUSHS T_PUSH 2 0 0; [< E * >]
    until E == *NONE*:
               ^^^^^^
    [33:54;15] PUSHL T_PUSH 2 0 0; [< *NONE* * >]
    until E == *NONE*:
            ^^
    [33:55;13] JMPNEQ T_JMPS 0 0 0 0; 7
    until E == *NONE*:
          ^^^^^^^^^^^
    [33:56;13] JMP T_JMP 0 0 0 0; 6
    [57;13] LABEL 7
    [33:55;13] JMPNEQ T_JMPS 0 0 2 0; 7
        next S + = E
        ^^^^^^
    [34:57;14] PUSHS T_PUSH 1 0 0; [< [< next S >] * >]
        next S + = E
                   ^
    [34:58;15] PUSHS T_PUSH 3 0 0; [< E * >]
        next S + = E
        ^^^^^^^^^^^^
    [34:59;14] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        next S + = E
        ^^^^^^
    [34:60;13] POPS T_POP 2 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next S >] >]
        next E = L[]
                 ^
    [35:61;14] PUSHA T_PUSH 0 1 0; [< L L >]
        next E = L[]
                 ^^^
    [35:62;15] VPOP T_GET 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               L [< next E >] >]
        next E = L[]
                 ^^^
    [35:63;14] DEL T_POP 1 0 1 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< next E >] [<
               next E >] >]
        next E = L[]
        ^^^^^^
    [35:64;13] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; [<
               * [< next E >] >]
    until E == *NONE*:
                     ^
        next S + = E
^^^^^^^^^^^^^^^^^^^^
        next E = L[]
^^^^^^^^^^^^^^^^^^^^
    [35:65;11] ENDL T_ENDL 0 2 12 *UNDEFINED_GEN(0x7FF4170000000000)*
    [66;11] LABEL 6
    [33:56;11] JMP T_JMP[1] 2 0 10 0; 6
    return S
           ^
    [36:66;12] PUSHS T_PUSH 1 0 0; [< S * >]
    return S
    ^^^^^^^^
    [36:67;11] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [68;11] LABEL 5
    return S
            ^
    [30:45;11] BEGF T_BEGF 1 1 24 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< sum L >]
    [36:68;6] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [38:69;7] PUSHOBJ T_SET 20 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
              *
    [38:70;8] PUSHI T_PUSH 0 0 0 "["; *
    [38:71;7] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [38:72;8] PUSHI T_PUSH 0 0 0 "]"; *
    [38:73;7] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [38:74;8] PUSHI T_PUSH 0 0 0 ","; *
    [38:75;7] SETI T_SET 1 0 0 ".separator"; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
      ^
    [38:76;8] PUSHI T_PUSH 0 0 0 1; *
    [38:77;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
         ^
    [38:78;8] PUSHI T_PUSH 0 0 0 2; *
    [38:79;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
            ^
    [38:80;8] PUSHI T_PUSH 0 0 0 3; *
    [38:81;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
               ^
    [38:82;8] PUSHI T_PUSH 0 0 0 4; *
    [38:83;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                  ^
    [38:84;8] PUSHI T_PUSH 0 0 0 5; *
    [38:85;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                     ^
    [38:86;8] PUSHI T_PUSH 0 0 0 6; *
    [38:87;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                        ^
    [38:88;8] PUSHI T_PUSH 0 0 0 7; *
    [38:89;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                           ^
    [38:90;8] PUSHI T_PUSH 0 0 0 8; *
    [38:91;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                              ^
    [38:92;8] PUSHI T_PUSH 0 0 0 9; *
    [38:93;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
                                 ^^
    [38:94;8] PUSHI T_PUSH 0 0 0 10; *
    [38:95;7] VPUSH T_SET 1 0 0 "["; [< * * >]
sum ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [38:96;7] CALLG T_CALLG 1 4294967295 45 PACKED_VEC; [< sum * >]
function multiplication table:
                             ^
    [40:97;7] BEGF T_BEGF 0 1 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
              table >] >]
    function part table ( Y, L ):
                                ^
    [41:98;9] BEGF T_BEGF 2 2 0 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
              L >]
        function part row ( Y, X, L ):
                                     ^
    [42:99;12] BEGF T_BEGF 3 3 0 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y X
               L >]
            L[] = Y * X
            ^
    [43:100;13] PUSHA T_PUSH 2 3 0; [< L L >]
            L[] = Y * X
            ^^^
    [43:101;14] PUSHI T_PUSH 0 0 0 0; *
            L[] = Y * X
                  ^
    [43:102;15] PUSHA T_PUSH 0 3 0; [< Y * >]
            L[] = Y * X
                      ^
    [43:103;16] PUSHA T_PUSH 1 3 0; [< X * >]
            L[] = Y * X
                  ^^^^^
    [43:104;15] MUL T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            L[] = Y * X
            ^^^
    [43:105;14] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [43:106;15] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
            L[] = Y * X
            ^^^
    [43:107;14] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
            L[] = Y * X
                  ^^^^^
    [43:108;12] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^
    [44:109;13] PUSHA T_PUSH 1 3 0; [< X * >]
            if X == 9: return L
                    ^
    [44:110;14] PUSHI T_PUSH 0 0 0 9; *
            if X == 9: return L
                 ^^
    [44:111;12] JMPNEQ T_JMPS 0 0 0 0; 11
    [112;12] LABEL 12
            if X == 9: return L
                              ^
    [44:112;13] PUSHA T_PUSH 2 3 0; [< L * >]
            if X == 9: return L
                       ^^^^^^^^
    [44:113;12] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
            if X == 9: return L
               ^^^^^^
    [44:114;12] JMP T_JMP 0 0 0 0; 13
    [115;12] LABEL 11
    [44:111;12] JMPNEQ T_JMPS 0 0 4 0; 11
            else: return part row ( Y, X + 1, L )
                                    ^
    [45:115;13] PUSHA T_PUSH 0 3 0; [< Y * >]
            else: return part row ( Y, X + 1, L )
                                       ^
    [45:116;14] PUSHA T_PUSH 1 3 0; [< X * >]
            else: return part row ( Y, X + 1, L )
                                           ^
    [45:117;15] PUSHI T_PUSH 0 0 0 1; *
            else: return part row ( Y, X + 1, L )
                                       ^^^^^
    [45:118;14] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
            else: return part row ( Y, X + 1, L )
                                              ^
    [45:119;15] PUSHA T_PUSH 2 3 0; [< L * >]
            else: return part row ( Y, X + 1, L )
                         ^^^^^^^^^^^^^^^^^^^^^^^^
    [45:120;13] CALLG T_CALLG 3 1 99 PACKED_VEC; [< [< part row >] * >]
            else: return part row ( Y, X + 1, L )
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [45:121;12] RET T_RET 0 3 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [122;12] LABEL 13
    [44:114;12] JMP T_JMP 0 0 8 0; 13
    [122;12] LABEL 10
            else: return part row ( Y, X + 1, L )
                                                 ^
    [42:99;12] BEGF T_BEGF 3 3 24 *
               UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part row >] Y X
               L >]
    [45:122;9] ENDF T_ENDF 0 3 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^
    [46:123;10] PUSHA T_PUSH 1 2 0; [< L L >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:124;11] PUSHI T_PUSH 0 0 0 0; *
        L[] = part row ( Y, 1, [] )
                         ^
    [46:125;12] PUSHA T_PUSH 0 2 0; [< Y * >]
        L[] = part row ( Y, 1, [] )
                            ^
    [46:126;13] PUSHI T_PUSH 0 0 0 1; *
        L[] = part row ( Y, 1, [] )
                               ^^
    [46:127;14] PUSHOBJ T_SET 10 0 2 *
                UNDEFINED_GEN(0x7FF4170000000000)*; *
    [46:128;15] PUSHI T_PUSH 0 0 0 "["; *
    [46:129;14] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [46:130;15] PUSHI T_PUSH 0 0 0 "]"; *
    [46:131;14] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [46:132;15] PUSHI T_PUSH 0 0 0 ","; *
    [46:133;14] SETI T_SET 1 0 0 ".separator"; [< * * >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [46:134;12] CALLG T_CALLG 3 1 99 PACKED_VEC; [< [< part row >] * >]
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:135;11] POPS T_POP 1 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:136;12] PUSHS T_PUSH 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*
        L[] = part row ( Y, 1, [] )
        ^^^
    [46:137;11] VPUSH T_SET 2 0 0 *
                UNDEFINED_GEN(0x7FF4170000000000)*; [< * L >]
        L[] = part row ( Y, 1, [] )
              ^^^^^^^^^^^^^^^^^^^^^
    [46:138;9] DEL T_POP 0 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^
    [47:139;10] PUSHA T_PUSH 0 2 0; [< Y * >]
        if Y == 9: return L
                ^
    [47:140;11] PUSHI T_PUSH 0 0 0 9; *
        if Y == 9: return L
             ^^
    [47:141;9] JMPNEQ T_JMPS 0 0 0 0; 14
    [142;9] LABEL 15
        if Y == 9: return L
                          ^
    [47:142;10] PUSHA T_PUSH 1 2 0; [< L * >]
        if Y == 9: return L
                   ^^^^^^^^
    [47:143;9] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
        if Y == 9: return L
           ^^^^^^
    [47:144;9] JMP T_JMP 0 0 0 0; 16
    [145;9] LABEL 14
    [47:141;9] JMPNEQ T_JMPS 0 0 4 0; 14
        else: return part table ( Y + 1, L )
                                  ^
    [48:145;10] PUSHA T_PUSH 0 2 0; [< Y * >]
        else: return part table ( Y + 1, L )
                                      ^
    [48:146;11] PUSHI T_PUSH 0 0 0 1; *
        else: return part table ( Y + 1, L )
                                  ^^^^^
    [48:147;10] ADD T_AOP 0 0 0 *UNDEFINED_GEN(0x7FF4170000000000)*; *
        else: return part table ( Y + 1, L )
                                         ^
    [48:148;11] PUSHA T_PUSH 1 2 0; [< L * >]
        else: return part table ( Y + 1, L )
                     ^^^^^^^^^^^^^^^^^^^^^^^
    [48:149;10] CALLG T_CALLG 2 1 98 PACKED_VEC; [< [< part table >]
                * >]
        else: return part table ( Y + 1, L )
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [48:150;9] RET T_RET 0 2 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [151;9] LABEL 16
    [47:144;9] JMP T_JMP 0 0 7 0; 16
    [151;9] LABEL 9
        else: return part table ( Y + 1, L )
                                            ^
    [41:98;9] BEGF T_BEGF 2 2 54 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< part table >] Y
              L >]
    [48:151;7] ENDF T_ENDF 0 2 0 *UNDEFINED_GEN(0x7FF4170000000000)*
    return part table ( 1, [] )
                        ^
    [49:152;8] PUSHI T_PUSH 0 0 0 1; *
    return part table ( 1, [] )
                           ^^
    [49:153;9] PUSHOBJ T_SET 10 0 2 *UNDEFINED_GEN(0x7FF4170000000000)*;
               *
    [49:154;10] PUSHI T_PUSH 0 0 0 "["; *
    [49:155;9] SETI T_SET 1 0 0 ".initiator"; [< * * >]
    [49:156;10] PUSHI T_PUSH 0 0 0 "]"; *
    [49:157;9] SETI T_SET 1 0 0 ".terminator"; [< * * >]
    [49:158;10] PUSHI T_PUSH 0 0 0 ","; *
    [49:159;9] SETI T_SET 1 0 0 ".separator"; [< * * >]
    return part table ( 1, [] )
           ^^^^^^^^^^^^^^^^^^^^
    [49:160;8] CALLG T_CALLG 2 1 98 PACKED_VEC; [< [< part table >] * >]
    return part table ( 1, [] )
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [49:161;7] RET T_RET 0 1 1 *UNDEFINED_GEN(0x7FF4170000000000)*
    [162;7] LABEL 8
    return part table ( 1, [] )
                               ^
    [40:97;7] BEGF T_BEGF 0 1 66 *
              UNDEFINED_GEN(0x7FF4170000000000)*; [< [< multiplication
              table >] >]
    [49:162;7] ENDF T_ENDF 0 1 0 *UNDEFINED_GEN(0x7FF4170000000000)*
multiplication table
^^^^^^^^^^^^^^^^^^^^
    [51:163;8] CALLG T_CALLG 0 4294967295 97 PACKED_VEC; [< [<
               multiplication table >] * >]
