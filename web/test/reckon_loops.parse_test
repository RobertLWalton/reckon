// Reckon Language Loops Test Data
//
// File:        reckon_loops.rec
// Author:      Bob Walton (walton@acm.org)
// Date:        Sun Dec  1 03:11:33 EST 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

// Loop Statements
//
power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|power|} =
     {|1|}|}
i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|i|} = {|0|}|}
next power, next i = repeat:
    if i >= 10: exit
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|{|{|next power|}, {|next i|}|} = {|repeat|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|if
               {|{|i|} >= {|10|}|} ":" {|exit|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
next i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next i|} =
     {|0|}|}
repeat:
    if i >= 10: exit
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|repeat|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|if
               {|{|i|} >= {|10|}|} ":" {|exit|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

// Iterators
//
next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
next i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next i|} =
     {|0|}|}
repeat while i < 6:
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|repeat while {|{|i|} < {|6|}|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
next i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next i|} =
     {|0|}|}
do while i < 6:
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|do while {|{|i|} < {|6|}|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
next i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next i|} =
     {|0|}|}
while i < 6:
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|while {|{|i|} < {|6|}|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
next i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next i|} =
     {|0|}|}
until i >= 6:
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|until {|{|i|} >= {|6|}|}|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
next i = 0
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next i|} =
     {|0|}|}
while i < 6 at most 5 times:
    next power * = 2
    next i + = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|while {|{|i|} < {|6|}|} [< at most >] {|5|} times|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next i|} [< + = >] {|1|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
do exactly 4 times:
    next power * = 2
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|do exactly {|4|} times|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}|}|}

next power = 1
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|next power|} =
     {|1|}|}
do 4 times:
    next power * = 2
{"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
     {|do {|4|} times|}
     {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
          {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
               {|next power|} [< * = >] {|2|}|}|}|}
