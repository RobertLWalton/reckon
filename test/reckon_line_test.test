*PARSER*:
    trace [+ parser output]
    trace [+ subexpression lines]
    trace [+ subexpression elements]
    trace [+ bracketed subexpressions]
    print top level
        block reckon:  selectors [code]
                       options [end at le indent, end at line separator,
                                end at outer closing,
                                enable indented paragraph,
                                enable header]
                       paragraph lexical master "PARAGRAPH-CHECK"
                       line lexical master "DATA-CHECK"
                       line separator ";"
        block standard:  selectors [code]
                         options [end at le indent,
                                  end at line separator,
                                  end at outer closing,
                                  enable indented paragraph,
                                  enable header]
                         paragraph lexical master "PARAGRAPH-CHECK"
                         line lexical master "DATA-CHECK"
                         line separator ";"
        block TOP LEVEL:  selectors []
                          options [end at le indent,
                                   end at line separator,
                                   end at outer closing,
                                   enable indented paragraph,
                                   enable header]
    print indentation mark ""
        block standard: indentation mark ":" [data paragraph]
                        with parsing selectors [data]
                        with parsing options [- end at indent,
                                              + end at le indent,
                                              - end at lt indent,
                                              - end at paragraph break,
                                              + end at line separator,
                                              + end at outer closing]
        block standard: indentation mark ":" [text]
                        with parsing options [- end at indent,
                                              + end at le indent,
                                              - end at lt indent,
                                              - end at paragraph break,
                                              + end at line separator,
                                              + end at outer closing]
                        with implied header {p}
                        with paragraph lexical master "PARAGRAPH-CHECK"
                        with line lexical master "DATA-CHECK"
        block standard: indentation mark ":" ... ";" [code]
                        with parsing options [- end at indent,
                                              + end at le indent,
                                              - end at lt indent,
                                              - end at paragraph break,
                                              + end at line separator,
                                              + end at outer closing]
                        with paragraph lexical master "PARAGRAPH-CHECK"
                        with line lexical master "DATA-CHECK"
        block TOP LEVEL: indentation mark [< "*TEXT*" ":" >] [code]
                         with parsing selectors [text]
        block TOP LEVEL: indentation mark [< "*PARSER*" "*TEST*" ":" >] ... ";"
                         [TOP LEVEL]
        block TOP LEVEL: indentation mark [< "*PARSER*" ":" >] ... ";"
                         [TOP LEVEL]
                         with parsing selectors [data]
        block reckon: indentation mark [< "*TOP*" "*LEVEL*" >] ... ";"
                      []
                      with parsing selectors [code]
                      with parsing options [end at le indent,
                                            end at line separator,
                                            end at outer closing,
                                            enable indented paragraph,
                                            enable header]
                      with paragraph lexical master "PARAGRAPH-CHECK"
                      with line lexical master "DATA-CHECK"
        block standard: indentation mark [< "*TOP*" "*LEVEL*" >] ... ";"
                        []
                        with parsing selectors [code]
                        with parsing options [end at le indent,
                                              end at line separator,
                                              end at outer closing,
                                              enable indented paragraph,
                                              enable header]
                        with paragraph lexical master "PARAGRAPH-CHECK"
                        with line lexical master "DATA-CHECK"
        block TOP LEVEL: indentation mark [< "*TOP*" "*LEVEL*" >] []
                         with parsing selectors []
                         with parsing options [end at le indent,
                                               end at line separator,
                                               end at outer closing,
                                               enable indented paragraph,
                                               enable header]
BRACKETED EXPRESSION:
    This is a first logical line;
    line ##:
This is a first logical line;;; and a second
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    and a second logical line;
    lines ##-##:
This is a first logical line;;; and a second
                                ^^^^^^^^^^^^
<BLANK-LINE>
^
    logical line;
^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And a third logical line "."
    line ##:
And a third logical line.
^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a logical line "."
    line ##:
This is a logical line.
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And another logical line "."
    lines ##-##:
And another
^^^^^^^^^^^
    logical line.
^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    The first logical line of the indented paragraph "."
    lines ##-##:
    The first logical line of the
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    The second logical line of the indented paragraph "."
    lines ##-##:
    The second logical line
    ^^^^^^^^^^^^^^^^^^^^^^^
        of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WARNING: in lines ##-##: comment after indent that begins non-comment
         logical line:
        // Comment beginning non-comment logical line.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
BRACKETED EXPRESSION:
    Line 1 of the subparagraph "."
    line ##:
            Line 1 of the subparagraph.
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Line 2 of the subparagraph "."
    line ##:
        Line 2 of the subparagraph.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|Line
              1 of the subparagraph "."|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|Line
              2 of the subparagraph "."|}|}
    lines ##-##:
        subparagraph:
                    ^
        // A comment that sets the indented subparagraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // paragraph indent.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        // The following comment will issue a warning:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // Comment beginning non-comment logical line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
            Line 1 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        Line 2 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {|The third logical line of the indented paragraph containing an
      indented subparagraph|}:
        Line 1 of the subparagraph "."
        Line 2 of the subparagraph "."
    lines ##-##:
    The third logical line of the indented
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        paragraph containing an indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        subparagraph:
^^^^^^^^^^^^^^^^^^^^^
        // A comment that sets the indented subparagraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // paragraph indent.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        // The following comment will issue a warning:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // Comment beginning non-comment logical line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
            Line 1 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        Line 2 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    The fourth logical line of the indented paragraph "."
    line ##:
    The fourth logical line of the indented paragraph.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|The
              first logical line of the indented paragraph "."|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|The
              second logical line of the indented paragraph "."|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              {|The third logical line of the indented paragraph
                containing an indented subparagraph|}
              {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator =
                   ":"|
                   {"": .terminator = "<LF>", .initiator =
                        [$ LOGICAL_LINE $]|Line 1 of the subparagraph
                        "."|}
                   {"": .terminator = "<LF>", .initiator =
                        [$ LOGICAL_LINE $]|Line 2 of the subparagraph
                        "."|}|}|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|The
              fourth logical line of the indented paragraph "."|}|}
    lines ##-##:
And a logical line ending with an indented paragraph:
                                                    ^
<BLANK-LINE>
^
    The first logical line of the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    // A comment line that is ignored.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    The second logical line
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    The third logical line of the indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        paragraph containing an indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        subparagraph:
^^^^^^^^^^^^^^^^^^^^^
        // A comment that sets the indented subparagraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // paragraph indent.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        // The following comment will issue a warning:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // Comment beginning non-comment logical line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
            Line 1 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        Line 2 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    The fourth logical line of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {|And a logical line ending with an indented paragraph|}:
        The first logical line of the indented paragraph "."
        The second logical line of the indented paragraph "."
        {|The third logical line of the indented paragraph containing an
          indented subparagraph|}:
            Line 1 of the subparagraph "."
            Line 2 of the subparagraph "."
        The fourth logical line of the indented paragraph "."
    lines ##-##:
And a logical line ending with an indented paragraph:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    The first logical line of the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    // A comment line that is ignored.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    The second logical line
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    The third logical line of the indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        paragraph containing an indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        subparagraph:
^^^^^^^^^^^^^^^^^^^^^
        // A comment that sets the indented subparagraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // paragraph indent.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        // The following comment will issue a warning:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        // Comment beginning non-comment logical line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
            Line 1 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
        Line 2 of the subparagraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    The fourth logical line of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    The logical line after the indented paragraph "." This would end the
        indented paragraph provided the two comment lines above did not
        exist "."
    lines ##-##:
The logical line after the indented paragraph.  This would
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    end the indented paragraph provided the two comment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    lines above did not exist.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {section}
    line ##:
{section}First Example
^^^^^^^^^
BRACKETED EXPRESSION:
    {s|First Example|s}
    line ##:
{section}First Example
         ^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {section|{s|First Example|s}|section}
    line ##:
{section}First Example
^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {section|{s|First Example|s}|section}
    line ##:
{section}First Example
^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {p}
    line ##:
{p}This is the first paragraph of the first
^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|This is the first paragraph of the first
        example|s}
    lines ##-##:
{p}This is the first paragraph of the first
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        example.  And
^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|And its second sentence|s}
    lines ##-##:
        example.  And
                ^^^^^
its second sentence.  Line indentation does not
^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|Line indentation does not matter in this
        paragraph "," which is ended by the next blank line|s}
    lines ##-##:
its second sentence.  Line indentation does not
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
matter in this paragraph, which is ended by the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                next blank line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|This is the first paragraph of the first
           example|s} {s: .terminator = "."|And its second sentence|s}
       {s: .terminator = "."|Line indentation does not matter in this
           paragraph "," which is ended by the next blank line|s}|p}
    lines ##-##:
{p}This is the first paragraph of the first
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        example.  And
^^^^^^^^^^^^^^^^^^^^^
its second sentence.  Line indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
matter in this paragraph, which is ended by the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                next blank line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|This is the first paragraph of the first
           example|s} {s: .terminator = "."|And its second sentence|s}
       {s: .terminator = "."|Line indentation does not matter in this
           paragraph "," which is ended by the next blank line|s}|p}
    lines ##-##:
{p}This is the first paragraph of the first
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        example.  And
^^^^^^^^^^^^^^^^^^^^^
its second sentence.  Line indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
matter in this paragraph, which is ended by the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                next blank line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {p}
    line ##:
{p}
^^^
PREFIX EXPRESSION:
    {quote}
    line ##:
    {quote}
    ^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|Remember to begin at the beginning and go to
        the end|s}
    lines ##-##:
    {quote}
           ^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|This quote is a paragraph by itself|s}
    lines ##-##:
    the beginning and go to the end.  This quote
                                    ^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|Within the paragraph "," indentation does not
        matter as long as it is at least the paragraph indent|s}
    lines ##-##:
                  is a paragraph by itself.
                                           ^
        Within the paragraph, indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    matter as long as it is at least the paragraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           indent.
^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|So this is the last sentence of the
        paragraph|s}
    lines ##-##:
           indent.
                  ^
    // Comments do not end the paragraph, as they
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // are not blank lines.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    So this is the last sentence of the paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {quote|{s: .terminator = "."|Remember to begin at the beginning and
               go to the end|s}
           {s: .terminator = "."|This quote is a paragraph by itself|s}
           {s: .terminator = "."|Within the paragraph "," indentation
               does not matter as long as it is at least the paragraph
               indent|s}
           {s: .terminator = "."|So this is the last sentence of the
               paragraph|s}|quote}
    lines ##-##:
    {quote}
    ^^^^^^^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        Within the paragraph, indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    matter as long as it is at least the paragraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           indent.
^^^^^^^^^^^^^^^^^^
    // Comments do not end the paragraph, as they
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // are not blank lines.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    So this is the last sentence of the paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {quote|{s: .terminator = "."|Remember to begin at the beginning
                    and go to the end|s}
                {s: .terminator = "."|This quote is a paragraph by
                    itself|s}
                {s: .terminator = "."|Within the paragraph ","
                    indentation does not matter as long as it is at
                    least the paragraph indent|s}
                {s: .terminator = "."|So this is the last sentence of
                    the paragraph|s}|quote}|}
    lines ##-##:
This paragraph contains a quote:
                               ^
    // In text, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {quote}
^^^^^^^^^^^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        Within the paragraph, indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    matter as long as it is at least the paragraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           indent.
^^^^^^^^^^^^^^^^^^
    // Comments do not end the paragraph, as they
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // are not blank lines.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    So this is the last sentence of the paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s|This paragraph contains a quote
       {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
            {quote|{s: .terminator = "."|Remember to begin at the
                       beginning and go to the end|s}
                   {s: .terminator = "."|This quote is a paragraph by
                       itself|s}
                   {s: .terminator = "."|Within the paragraph ","
                       indentation does not matter as long as it is at
                       least the paragraph indent|s}
                   {s: .terminator = "."|So this is the last sentence of
                       the paragraph|s}|quote}|}|s}
    lines ##-##:
{p}
   ^
This paragraph contains a quote:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // In text, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {quote}
^^^^^^^^^^^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        Within the paragraph, indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    matter as long as it is at least the paragraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           indent.
^^^^^^^^^^^^^^^^^^
    // Comments do not end the paragraph, as they
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // are not blank lines.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    So this is the last sentence of the paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s|This paragraph contains a quote
          {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
               {quote|{s: .terminator = "."|Remember to begin at the
                          beginning and go to the end|s}
                      {s: .terminator = "."|This quote is a paragraph by
                          itself|s}
                      {s: .terminator = "."|Within the paragraph ","
                          indentation does not matter as long as it is
                          at least the paragraph indent|s}
                      {s: .terminator = "."|So this is the last sentence
                          of the paragraph|s}|quote}|}|s}|p}
    lines ##-##:
{p}
^^^
This paragraph contains a quote:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // In text, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {quote}
^^^^^^^^^^^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        Within the paragraph, indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    matter as long as it is at least the paragraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           indent.
^^^^^^^^^^^^^^^^^^
    // Comments do not end the paragraph, as they
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // are not blank lines.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    So this is the last sentence of the paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s|This paragraph contains a quote
          {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
               {quote|{s: .terminator = "."|Remember to begin at the
                          beginning and go to the end|s}
                      {s: .terminator = "."|This quote is a paragraph by
                          itself|s}
                      {s: .terminator = "."|Within the paragraph ","
                          indentation does not matter as long as it is
                          at least the paragraph indent|s}
                      {s: .terminator = "."|So this is the last sentence
                          of the paragraph|s}|quote}|}|s}|p}
    lines ##-##:
{p}
^^^
This paragraph contains a quote:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // In text, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {quote}
^^^^^^^^^^^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        Within the paragraph, indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    matter as long as it is at least the paragraph
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           indent.
^^^^^^^^^^^^^^^^^^
    // Comments do not end the paragraph, as they
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // are not blank lines.
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    So this is the last sentence of the paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {code}
    line ##:
{code}
^^^^^^
BRACKETED EXPRESSION:
    This is a logical code line of the indented paragraph "."
    lines ##-##:
    This is a logical code
    ^^^^^^^^^^^^^^^^^^^^^^
         line of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And a second logical code line "."
    line ##:
    And a second logical code line.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {p}
    line ##:
    {p}But we can have a text paragraph in an indented
    ^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|But we can have a text paragraph in an
        indented code paragraph|s}
    lines ##-##:
    {p}But we can have a text paragraph in an indented
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    code paragraph.
^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|But we can have a text paragraph in an
           indented code paragraph|s}|p}
    lines ##-##:
    {p}But we can have a text paragraph in an indented
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    code paragraph.
^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {code}
    line ##:
    {code}
    ^^^^^^
BRACKETED EXPRESSION:
    This is the third logical line of code "."
    line ##:
    This is the third logical line of code.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {p}
    line ##:
    {p}And another piece of text.
    ^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|And another piece of text|s}
    line ##:
    {p}And another piece of text.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|And another piece of text|s}|p}
    line ##:
    {p}And another piece of text.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|This
              is a logical code line of the indented paragraph "."|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|And
              a second logical code line "."|}
         {p|{s: .terminator = "."|But we can have a text paragraph in an
                indented code paragraph|s}|p}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|This
              is the third logical line of code "."|}
         {p|{s: .terminator = "."|And another piece of text|s}|p}|}
    lines ##-##:
This is a line of code:
                      ^
    // In code, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    This is a logical code
^^^^^^^^^^^^^^^^^^^^^^^^^^
         line of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    And a second logical code line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {p}But we can have a text paragraph in an indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    code paragraph.
^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {code}
^^^^^^^^^^
    This is the third logical line of code.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {p}And another piece of text.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {|This is a line of code|}:
        This is a logical code line of the indented paragraph "."
        And a second logical code line "."
        {p|{s: .terminator = "."|But we can have a text paragraph in an
               indented code paragraph|s}|p}
        This is the third logical line of code "."
        {p|{s: .terminator = "."|And another piece of text|s}|p}
    lines ##-##:
This is a line of code:
^^^^^^^^^^^^^^^^^^^^^^^
    // In code, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    This is a logical code
^^^^^^^^^^^^^^^^^^^^^^^^^^
         line of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    And a second logical code line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {p}But we can have a text paragraph in an indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    code paragraph.
^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {code}
^^^^^^^^^^
    This is the third logical line of code.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {p}And another piece of text.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And a logical line of code that ends the indented paragraph "."
    lines ##-##:
And a logical line of code that ends the indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    paragraph.
^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {section}
    line ###:
{section}Second Example
^^^^^^^^^
BRACKETED EXPRESSION:
    {s|Second Example|s}
    line ###:
{section}Second Example
         ^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {section|{s|Second Example|s}|section}
    line ###:
{section}Second Example
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {section|{s|Second Example|s}|section}
    line ###:
{section}Second Example
^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {p: indent = 5}
    line ###:
{p: indent = 5}
^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|This is the first paragraph of the second
        example|s}
    lines ###-###:
{p: indent = 5}
               ^
This is the first paragraph of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     the second example.
^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p: indent = 5|
        {s: .terminator = "."|This is the first paragraph of the second
            example|s}|p}
    lines ###-###:
{p: indent = 5}
^^^^^^^^^^^^^^^
This is the first paragraph of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     the second example.
^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p: indent = 5|
        {s: .terminator = "."|This is the first paragraph of the second
            example|s}|p}
    lines ###-###:
{p: indent = 5}
^^^^^^^^^^^^^^^
This is the first paragraph of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     the second example.
^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    `"{" p ":" indent = 5 "}"'
    line ###:
with an implied `{p: indent = 5}', and which
                ^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {quote}
    line ###:
     {quote}Simplify, simplify, SMPLFY!
     ^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "!"|Simplify "," simplify "," SMPLFY|s}
    line ###:
     {quote}Simplify, simplify, SMPLFY!
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {quote|{s: .terminator = "!"|Simplify "," simplify "," SMPLFY|s}|quote}
    line ###:
     {quote}Simplify, simplify, SMPLFY!
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {quote|{s: .terminator = "!"|Simplify "," simplify ","
                    SMPLFY|s}|quote}|}
    lines ###-###:
     contains a quote:
                     ^
<BLANK-LINE>
^
     {quote}Simplify, simplify, SMPLFY!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s|This is the next paragraph "," which begins with an implied
       `"{" p ":" indent = 5 "}"' "," and which contains a quote
       {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
            {quote|{s: .terminator = "!"|Simplify "," simplify ","
                       SMPLFY|s}|quote}|}|s}
    lines ###-###:
This is the next paragraph, which begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p: indent = 5}', and which
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     contains a quote:
^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
     {quote}Simplify, simplify, SMPLFY!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p: indent = 5|
        {s|This is the next paragraph "," which begins with an implied
           `"{" p ":" indent = 5 "}"' "," and which contains a quote
           {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator =
                ":"|
                {quote|{s: .terminator = "!"|Simplify "," simplify ","
                           SMPLFY|s}|quote}|}|s}|p}
    lines ###-###:
This is the next paragraph, which begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p: indent = 5}', and which
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     contains a quote:
^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
     {quote}Simplify, simplify, SMPLFY!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p: indent = 5|
        {s|This is the next paragraph "," which begins with an implied
           `"{" p ":" indent = 5 "}"' "," and which contains a quote
           {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator =
                ":"|
                {quote|{s: .terminator = "!"|Simplify "," simplify ","
                           SMPLFY|s}|quote}|}|s}|p}
    lines ###-###:
This is the next paragraph, which begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p: indent = 5}', and which
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     contains a quote:
^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
     {quote}Simplify, simplify, SMPLFY!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    `"{" p ":" indent = 5 "}"'
    line ###:
with an implied `{p: indent = 5}'.
                ^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|This is the third paragraph of the section|s}
    line ###:
This is the third paragraph of the section.  It begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {s: .terminator = "."|It begins with an implied
        `"{" p ":" indent = 5 "}"'|s}
    lines ###-###:
This is the third paragraph of the section.  It begins
                                           ^^^^^^^^^^^
with an implied `{p: indent = 5}'.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p: indent = 5|
        {s: .terminator = "."|This is the third paragraph of the
            section|s}
        {s: .terminator = "."|It begins with an implied
            `"{" p ":" indent = 5 "}"'|s}|p}
    lines ###-###:
This is the third paragraph of the section.  It begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p: indent = 5}'.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p: indent = 5|
        {s: .terminator = "."|This is the third paragraph of the
            section|s}
        {s: .terminator = "."|It begins with an implied
            `"{" p ":" indent = 5 "}"'|s}|p}
    lines ###-###:
This is the third paragraph of the section.  It begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p: indent = 5}'.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {code}
    line ###:
{code}
^^^^^^
BRACKETED EXPRESSION:
    `"{" code "}"'
    line ###:
     `{code}', it would begin with an implied
     ^^^^^^^^
BRACKETED EXPRESSION:
    `"{" p ":" indent = 5 "}"'
    line ###:
     `{p: indent = 5}'.
     ^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    [$ LOGICAL_LINE $] {|This is a line of code "." If it was not
                         preceded by `"{" code "}"'|},
                       {|it would begin with an implied
                         `"{" p ":" indent = 5 "}"' "."|} "<LF>"
    lines ###-###:
This is a line of code.  If it was not preceded by
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     `{code}', it would begin with an implied
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     `{p: indent = 5}'.
^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {table}
    line ###:
{table}
^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}-----------------------------------------------------
^^^^^
BRACKETED EXPRESSION:
    {row|-----------------------------------------------------|row}
    line ###:
{row}-----------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}| Name   | Weight   | Height     | Age       | BMI  |
^^^^^
BRACKETED EXPRESSION:
    {row|"|" Name "|" Weight "|" Height "|" Age "|" BMI "|" /ib/|row}
    lines ###-###:
{row}| Name   | Weight   | Height     | Age       | BMI  |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                        /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}| <name> | <weight> | <height>   | <age>     | B
^^^^^
BRACKETED EXPRESSION:
    {row|"|" <name> "|" <weight> "|" <height> "|" <age> "|" B|row}
    line ###:
{row}| <name> | <weight> | <height>   | <age>     | B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^
BRACKETED EXPRESSION:
    {row|"|" /l/ "|" /U`lb'/ "|" /U`ft_in'/ "|" /u`yr'.0/ "|" /.2/|row}
    line ###:
{row}| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}| George | 205      | 6ft 3in    | 25        |
^^^^^
BRACKETED EXPRESSION:
    {row|"|" George "|" 205 "|" 6ft 3in "|" 25 "|"|row}
    line ###:
{row}| George | 205      | 6ft 3in    | 25        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}| Mary   | 135      | 5ft 5in    | 26        |
^^^^^
BRACKETED EXPRESSION:
    {row|"|" Mary "|" 135 "|" 5ft 5in "|" 26 "|"|row}
    line ###:
{row}| Mary   | 135      | 5ft 5in    | 26        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
PREFIX EXPRESSION:
    {row}
    line ###:
{row}----------------------------------------------
^^^^^
BRACKETED EXPRESSION:
    {row|----------------------------------------------|row}
    line ###:
{row}----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {table|{row|-----------------------------------------------------|row}
           {row|"|" Name "|" Weight "|" Height "|" Age "|" BMI "|"
                /ib/|row}
           {row|"|" <name> "|" <weight> "|" <height> "|" <age> "|"
                B|row}
           {row|"|" /l/ "|" /U`lb'/ "|" /U`ft_in'/ "|" /u`yr'.0/ "|"
                /.2/|row}
           {row|"|" George "|" 205 "|" 6ft 3in "|" 25 "|"|row}
           {row|"|" Mary "|" 135 "|" 5ft 5in "|" 26 "|"|row}
           {row|----------------------------------------------|row}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
                BMI ":" Body Mass Index|}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|B
                ":" <body mass index>|}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
                ROW TYPE ":" person|}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
                SORT ROWS BY ":" name|}|table}
    lines ###-###:
{table}
^^^^^^^
{row}-----------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
{row}| Name   | Weight   | Height     | Age       | BMI  |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                        /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
{row}| <name> | <weight> | <height>   | <age>     | B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
{row}| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
{row}| George | 205      | 6ft 3in    | 25        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
{row}| Mary   | 135      | 5ft 5in    | 26        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
{row}----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BMI: Body Mass Index
^^^^^^^^^^^^^^^^^^^^
B: <body mass index>
^^^^^^^^^^^^^^^^^^^^
ROW TYPE: person
^^^^^^^^^^^^^^^^
SORT ROWS BY: name
^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|-----------------------------------------------------|row}
    line ###:
-----------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {table|{row|-----------------------------------------------------|row}|table}
    line ###:
-----------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|"|" Name "|" Weight "|" Height "|" Age "|" BMI "|" /ib/|row}
    lines ###-###:
| Name   | Weight   | Height     | Age       | BMI  |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                        /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|"|" <name> "|" <weight> "|" <height> "|" <age> "|" B|row}
    line ###:
| <name> | <weight> | <height>   | <age>     | B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|"|" /l/ "|" /U`lb'/ "|" /U`ft_in'/ "|" /u`yr'.0/ "|" /.2/|row}
    line ###:
| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|"|" George "|" 205 "|" 6ft 3in "|" 25 "|"|row}
    line ###:
| George | 205      | 6ft 3in    | 25        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|"|" Mary "|" 135 "|" 5ft 5in "|" 26 "|"|row}
    line ###:
| Mary   | 135      | 5ft 5in    | 26        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {row|----------------------------------------------|row}
    line ###:
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {table|{row|-----------------------------------------------------|row}
           {row|"|" Name "|" Weight "|" Height "|" Age "|" BMI "|"
                /ib/|row}
           {row|"|" <name> "|" <weight> "|" <height> "|" <age> "|"
                B|row}
           {row|"|" /l/ "|" /U`lb'/ "|" /U`ft_in'/ "|" /u`yr'.0/ "|"
                /.2/|row}
           {row|"|" George "|" 205 "|" 6ft 3in "|" 25 "|"|row}
           {row|"|" Mary "|" 135 "|" 5ft 5in "|" 26 "|"|row}
           {row|----------------------------------------------|row}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
                BMI ":" Body Mass Index|}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|B
                ":" <body mass index>|}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
                ROW TYPE ":" person|}
           {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
                SORT ROWS BY ":" name|}|table}
    lines ###-###:
-----------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Name   | Weight   | Height     | Age       | BMI  |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                        /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| <name> | <weight> | <height>   | <age>     | B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| George | 205      | 6ft 3in    | 25        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Mary   | 135      | 5ft 5in    | 26        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BMI: Body Mass Index
^^^^^^^^^^^^^^^^^^^^
B: <body mass index>
^^^^^^^^^^^^^^^^^^^^
ROW TYPE: person
^^^^^^^^^^^^^^^^
SORT ROWS BY: name
^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a word-that-is-continued "."
    lines ###-###:
This is a word-#
^^^^^^^^^^^^^^^^
     #that-is-con#
^^^^^^^^^^^^^^^^^^
     #tinued.
^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    See http://forecast.weather.gov/MapClick.php?lat=42&lon=-###.V036u7
    lines ###-###:
See http://forecast.weather.gov/MapClick.php?#
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    #lat=42&lon=#
^^^^^^^^^^^^^^^^^
    #-###.V036u7
^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    "<LF>"
    line ###:
"<" # "LF" # ">"
^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    "<LF>"
    line ###:
"<LF>"
^^^^^^
BRACKETED EXPRESSION:
    {|x|} = {|"This is a long sentence."|}
    lines ###-###:
x = "This is a long "#
^^^^^^^^^^^^^^^^^^^^^^
   #"sentence."
^^^^^^^^^^^^^^^
