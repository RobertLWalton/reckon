// Reckon Language Data Test Data
//
// File:	reckon_data_test.in
// Author:	Bob Walton (walton@acm.org)
// Date:	Tue Mar  7 02:44:52 EST 2023
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

*PARSER*:
    trace [+ parser output]
    trace [+ subexpression lines]
    trace [+ subexpression elements]
    trace [+ bracketed subexpressions]

!@<X> :=:
    kind = woman
    name = Jill
    husband = @<Y> = wife
!@<Y> :=:
    kind = man
    name = Jack
    wife = @<X> = husband

// Do not use an operator in the following or the trace
// will collapse the @<X> and @<Y>.
//
INPUT ID <X> : OUTPUT ID 2 IS @<X>
INPUT ID <Y> : OUTPUT ID 1 IS @<Y>
@@@@

!@<X> :=:
    kind = woman
    name[-] = Jill
    husband[*] = @<Y> = wife
!@<Y> :=:
    kind = man
    name[+] = Jack
    wife[@] = @<X> = husband

INPUT ID <X> : OUTPUT ID 4 IS @<X>
INPUT ID <Y> : OUTPUT ID 3 IS @<Y>

!@<Z1> :=:
    kind = boy
    name = Giddy
    parent = {* @<X>, @<Y> *} = child

!@<Z2> :=:
    kind = boy
    name = Giddy
    parent = @<X> = child
    parent = @<Y> = child

INPUT ID <X> : OUTPUT ID 4 IS @<X>
INPUT ID <Y> : OUTPUT ID 3 IS @<Y>
INPUT ID <Z1> : OUTPUT ID 5 IS @<Z1>
INPUT ID <Z2> : OUTPUT ID 6 IS @<Z2>
@@@@

@<X> :=:
	a = @<Y> = b
@<Y> :=:
	b = @<X> = a
INPUT ID <X> : OUTPUT ID 7 IS @<X>
INPUT ID <Y> : OUTPUT ID 8 IS @<Y>
@@@@

@<X> :=:
    x1 = "{" "["
    x2 = [< "{" "[" >]
    x y = 5
    [< x y >] = 6
INPUT ID <X> IS @<X>
@@@@

@<Z1> :=:
    x = TRUE
    y = FALSE
@<Z2> :=:
    x
    no y
INPUT ID <Z1> IS @<Z1>
INPUT ID <Z2> IS @<Z2>
@@@@

@<X1> :=:
    y[M] = A
    y    = A
    y    = B
@<X2> :=:
    y[M] = {* A, A, B *}
INPUT ID <X1> IS @<X1>
INPUT ID <X2> IS @<X2>
@@@@

@<X1> :=:
    y[S] = A
    y    = A
    y    = B
@<X2> :=:
    y[S] = {* A, B *}
INPUT ID <X1> IS @<X1>
INPUT ID <X2> IS @<X2>
@@@@

@<X> :=:
    y    = A
    y    = B
INPUT ID <X> IS @<X>
@@@@

!@<X1> := A 2 (C D) E
!@<X2> := A 2 @<X3> E
!@<X3> := C D:
    .initiator = "("
    .terminator = ")"
INPUT ID <X1> IS @<X1>
INPUT ID <X2> IS @<X2>
INPUT ID <X3> IS @<X3>
@@@@

@<X> := a + b * c
INPUT ID <X> IS @<X>
@@@@

@<X> := a + b * c
@@@@

!@<X> := @<A> + @<PRODUCT>
!@<PRODUCT> := @<B> * @<C>
!@<A> := a
!@<B> := b
!@<C> := c
INPUT ID <X> IS @<X>
INPUT ID <PRODUCT> IS @<PRODUCT>
INPUT ID <A> IS @<A>
INPUT ID <B> IS @<B>
INPUT ID <C> IS @<C>
@@@@

!@<X> := A "B" C
INPUT ID <X> IS @<X>
@@@@

!@<X> := A @<QUOTED> C
!@<QUOTED> := B:
    .type = "<Q>"
INPUT ID <X> IS @<X>
INPUT ID <QUOTED> IS @<QUOTED>
@@@@

!@<X> :=:
    x[S]
    x = "X"
    "x" = "X"
    x = A "B" C
    x = [< A "B" C >]
!@<Y> :=:
    x + = 5
    x "+" = 5
    y = A +
    y = A "+"
    z = [< A + B >]
    z = [< A "+" B >]
INPUT ID <X> IS @<X>
INPUT ID <Y> IS @<Y>
@@@@

!@<Z1> := A, B, C + F(X, Y)
!@<Z2> := A, B, C + F @<ARGS>
!@<ARGS> := X , Y:
    .initiator = "("
    .terminator = ")"
INPUT ID <Z1> IS @<Z1>
INPUT ID <Z2> IS @<Z2>
@@@@

!@<X1> := ``This is a {b|sentence|b}.''
@<X2>  := ``This is a {b|sentence|b}.''
@<X3>  := ``{s: text = i}This is a {b|sentence|b}.
                         Is it {i|really|}?''
INPUT ID <X1> IS @<X1>
INPUT ID <X2> IS @<X2>
INPUT ID <X3> IS @<X3>
@@@@

!@30 := a b c d
INPUT ID 30 IS @30

!@31 := ( a b c d )
INPUT ID 31 IS @31

!@32 := [ a b c d ]
INPUT ID 32 IS @32

!@33 := {{ a b c d }}
INPUT ID 33 IS @33

!@34 := ( a + b )
INPUT ID 34 IS @34

!@35 := [ a + b ]
INPUT ID 35 IS @35

!@36 := {{ a + b }}
INPUT ID 36 IS @36

@37 := ( a + b )
INPUT ID 37 IS @37

@38 := [ a + b ]
INPUT ID 38 IS @38

@39 := {{ a + b }}
INPUT ID 39 IS @39

!@40 := a + b:
    x = c + d
INPUT ID 40 IS @40

@41 := a + b:
    x = c + d
INPUT ID 41 IS @41

!@42 := a + b:
    x = c "+" d
INPUT ID 42 IS @42

@43 := a + b:
    x = c "+" d
INPUT ID 43 IS @43

!@50 :=:
    "hi there" = 44
INPUT ID 50 IS @50

!@60 := {|X Y Z|}
INPUT ID 60 is @60

!@61 := ``X Y Z''
INPUT ID 61 is @61
