*PARSER*:
    trace [+ parser output]
    trace [+ subexpression lines]
    trace [+ subexpression elements]
BRACKETED EXPRESSION:
    {section|{s|First Example|s}|section}
    line ##:
{section}First Example
^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|This is the first paragraph of the first
           example|s} {s: .terminator = "."|And its second sentence|s}
       {s: .terminator = "."|Line indentation does not matter in this
           paragraph "," which is ended by the next blank line|s}|p}
    lines ##-##:
   {p}This is the first paragraph of the first
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        example.  And
^^^^^^^^^^^^^^^^^^^^^
its second sentence.  Line indentation does not
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
matter in this paragraph, which is ended by the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                next blank line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s|This paragraph contains a quote
          {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
               {quote|{s: .terminator = "."|Remember to begin at the
                          beginning and go to the end|s}
                      {s: .terminator = "."|This quote is a paragraph by
                          itself|s}|quote}|}|s}|p}
    lines ##-##:
{p}This paragraph contains a quote:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // In text, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {quote} // This quote appears at the end of the
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            // logical line containing it.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Remember to begin at
^^^^^^^^^^^^^^^^^^^^^^^^
    the beginning and go to the end.  This quote
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  is a paragraph by itself.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a line of code:
        This is a logical code line of the indented paragraph "."
        And a second logical code line "."
        {p|{s: .terminator = "."|But we can have a text paragraph in an
               indented code paragraph|s}|p}
        This is the third logical line of code "."
        {p|{s: .terminator = "."|Another piece of text|s}|p}
    lines ##-##:
This is a line of code:
^^^^^^^^^^^^^^^^^^^^^^^
   // In code, `:' can start an indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   This is a logical code
^^^^^^^^^^^^^^^^^^^^^^^^^
       line of the indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   And a second logical code line.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
   {p}But we can have a text paragraph in an indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   code paragraph.
^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
   {code}This is the third logical line of code.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
   {p}Another piece of text.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And a logical line of code that ends the indented paragraph "."
    lines ##-##:
And a logical line of code that ends the indented
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    paragraph.
^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {section|{s|Second Example|s}|section}
    line ##:
{section}Second Example
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|This is the first paragraph of the second
           example|s}|p}
    lines ##-##:
{p}
^^^
This is the first paragraph of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    the second example.
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s|This is the next paragraph "," which begins with an implied
          `"{" p "}"' "," and which contains a quote
          {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
               {quote|{s: .terminator = "!"|Simplify "," simplify ","
                          SMPLFY|s}|quote}|}|s}|p}
    lines ##-##:
   This is the next paragraph, which begins
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p}', and which
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   contains a quote:
^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^
    {quote}Simplify, simplify, SMPLFY!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {p|{s: .terminator = "."|This is the third paragraph of the
           section|s}
       {s: .terminator = "."|It begins with an implied `"{" p "}"'|s}|p}
    lines ##-##:
This is the third paragraph of the section.  It begins
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
with an implied `{p}'.
^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    [$ LOGICAL_LINE $] {|This is a line of code "." If is was not
                         preceeded by or begin with `"{" code "}"'|},
                       {|it would begin with an implied `"{" p "}"'
                         "."|} "<LF>"
    lines ##-##:
This is a line of code.  If is was not preceeded by
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     or begin with `{code}', it would begin with
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     an implied `{p}'.
^^^^^^^^^^^^^^^^^^^^^^
