=== BRACKETED EXPRESSION: line ##:
9
^
    9
=== PURELIST EXPRESSION: line ##:
9 + 8
^
    {|9|}
=== PURELIST EXPRESSION: line ##:
9 + 8
    ^
    {|8|}
=== BRACKETED EXPRESSION: line ##:
9 + 8
^^^^^
    {|9|} + {|8|}
=== PURELIST EXPRESSION: line ##:
x = 9
^
    {|x|}
=== PURELIST EXPRESSION: line ##:
x = 9
    ^
    {|9|}
=== BRACKETED EXPRESSION: line ##:
x = 9
^^^^^
    {|x|} = {|9|}
=== PURELIST EXPRESSION: line ##:
y = 9 + 8
^
    {|y|}
=== PURELIST EXPRESSION: line ##:
y = 9 + 8
    ^
    {|9|}
=== PURELIST EXPRESSION: line ##:
y = 9 + 8
        ^
    {|8|}
=== PURELIST EXPRESSION: line ##:
y = 9 + 8
    ^^^^^
    {|{|9|} + {|8|}|}
=== BRACKETED EXPRESSION: line ##:
y = 9 + 8
^^^^^^^^^
    {|y|} = {|{|9|} + {|8|}|}
=== PURELIST EXPRESSION: line ##:
x + y
^
    {|x|}
=== PURELIST EXPRESSION: line ##:
x + y
    ^
    {|y|}
=== BRACKETED EXPRESSION: line ##:
x + y
^^^^^
    {|x|} + {|y|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
   ^
    {|b|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
      ^
    {|c|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
         ^
    {|x|}
=== BRACKETED EXPRESSION: line ##:
f (b, c, x) = b * x + c
  ^^^^^^^^^
    ({|b|}, {|c|}, {|x|})
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
^^^^^^^^^^^
    {|f ({|b|}, {|c|}, {|x|})|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
              ^
    {|b|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
                  ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
                      ^
    {|c|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
              ^^^^^
    {|{|b|} * {|x|}|}
=== PURELIST EXPRESSION: line ##:
f (b, c, x) = b * x + c
              ^^^^^^^^^
    {|{|{|b|} * {|x|}|} + {|c|}|}
=== BRACKETED EXPRESSION: line ##:
f (b, c, x) = b * x + c
^^^^^^^^^^^^^^^^^^^^^^^
    {|f ({|b|}, {|c|}, {|x|})|} = {|{|{|b|} * {|x|}|} + {|c|}|}
=== PURELIST EXPRESSION: line ##:
f (10, x, y)
   ^^
    {|10|}
=== PURELIST EXPRESSION: line ##:
f (10, x, y)
       ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
f (10, x, y)
          ^
    {|y|}
=== BRACKETED EXPRESSION: line ##:
f (10, x, y)
  ^^^^^^^^^^
    ({|10|}, {|x|}, {|y|})
=== BRACKETED EXPRESSION: line ##:
f (10, x, y)
^^^^^^^^^^^^
    f ({|10|}, {|x|}, {|y|})
=== BRACKETED EXPRESSION: line ##:
g = `hello'
    ^^^^^^^
    `hello'
=== PURELIST EXPRESSION: line ##:
g = `hello'
^
    {|g|}
=== BRACKETED EXPRESSION: line ##:
g = `hello'
    ^^^^^^^
    `hello'
=== BRACKETED EXPRESSION: line ##:
g = `hello'
^^^^^^^^^^^
    {|g|} = `hello'
=== BRACKETED EXPRESSION: line ##:
`[g] there'
 ^^^
    [g]
=== BRACKETED EXPRESSION: line ##:
`[g] there'
^^^^^^^^^^^
    `[g] there'
=== BRACKETED EXPRESSION: line ##:
`[g] there'
^^^^^^^^^^^
    `[g] there'
=== BRACKETED EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
                         ^^^
    [g]
=== BRACKETED EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
                        ^^^^^
    `[g]'
=== BRACKETED EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
      ^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|I thought he said `[g]'|s}
=== BRACKETED EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|I thought he said `[g]'|s}''
=== PURELIST EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
^
    {|z|}
=== BRACKETED EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|I thought he said `[g]'|s}''
=== BRACKETED EXPRESSION: line ##:
z = ``I thought he said `[g]'.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|z|} = ``{s: .terminator = "."|I thought he said `[g]'|s}''
=== PREFIX EXPRESSION: line ##:
    {p} // Introduces paragraph.
    ^^^
    {p}
=== BRACKETED EXPRESSION: lines ##-##:
    {p} // Introduces paragraph.
        ^^^^^^^^^^^^^^^^^^^^^^^^
    This document is meant to be read.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|This document is meant to be read|s}
=== BRACKETED EXPRESSION: lines ##-##:
    This document is meant to be read.
                                      ^
    Reading this document is good, but ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s|Reading this document is good "," but "..."|s}
=== BRACKETED EXPRESSION: lines ##-##:
    {p} // Introduces paragraph.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    This document is meant to be read.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Reading this document is good, but ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {p|{s: .terminator = "."|This document is meant to be read|s}
       {s|Reading this document is good "," but "..."|s}|p}
=== PREFIX EXPRESSION: line ##:
    {p}
    ^^^
    {p}
=== BRACKETED EXPRESSION: line ##:
    A line with an insertion [z].
                             ^^^
    [z]
=== BRACKETED EXPRESSION: lines ##-##:
    {p}
       ^
    A line with an insertion [z].
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|A line with an insertion [z]|s}
=== BRACKETED EXPRESSION: lines ##-##:
    {p}
    ^^^
    A line with an insertion [z].
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {p|{s: .terminator = "."|A line with an insertion [z]|s}|p}
=== BRACKETED EXPRESSION: lines ##-##:
notice = *TEXT*:
         ^^^^^^^
    {p} // Introduces paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    This document is meant to be read.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Reading this document is good, but ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^^^^^^^^^^^^
    {p}
^^^^^^^
    A line with an insertion [z].
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator =
         [< *TEXT* ":" >]|
         {p|{s: .terminator = "."|This document is meant to be read|s}
            {s|Reading this document is good "," but "..."|s}|p}
         {p|{s: .terminator = "."|A line with an insertion [z]|s}|p}|}
=== PURELIST EXPRESSION: line ##:
notice = *TEXT*:
^^^^^^
    {|notice|}
=== BRACKETED EXPRESSION: lines ##-##:
notice = *TEXT*:
         ^^^^^^^
    {p} // Introduces paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    This document is meant to be read.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Reading this document is good, but ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^^^^^^^^^^^^
    {p}
^^^^^^^
    A line with an insertion [z].
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator =
         [< *TEXT* ":" >]|
         {p|{s: .terminator = "."|This document is meant to be read|s}
            {s|Reading this document is good "," but "..."|s}|p}
         {p|{s: .terminator = "."|A line with an insertion [z]|s}|p}|}
=== BRACKETED EXPRESSION: lines ##-##:
notice = *TEXT*:
^^^^^^^^^^^^^^^^
    {p} // Introduces paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    This document is meant to be read.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Reading this document is good, but ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<BLANK-LINE>
^^^^^^^^^^^^
    {p}
^^^^^^^
    A line with an insertion [z].
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|notice|} =*TEXT*:
        {p|{s: .terminator = "."|This document is meant to be read|s}
           {s|Reading this document is good "," but "..."|s}|p}
        {p|{s: .terminator = "."|A line with an insertion [z]|s}|p}
=== BRACKETED EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
               ^^^
    [x]
=== BRACKETED EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
                       ^^^
    [y]
=== PURELIST EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
                                    ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
                                        ^
    {|y|}
=== BRACKETED EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
                                   ^^^^^^^
    [{|x|} + {|y|}]
=== BRACKETED EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|When you add [x] and [y] you get
        [{|x|} + {|y|}]|s}
=== BRACKETED EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|When you add [x] and [y] you get
          [{|x|} + {|y|}]|s}''
=== BRACKETED EXPRESSION: line ##:
``When you add [x] and [y] you get [x + y].''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|When you add [x] and [y] you get
          [{|x|} + {|y|}]|s}''
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
       ^^
    {|10|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
            ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
                ^
    {|2|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
                    ^^^^
    {|3.67|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
                           ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
                               ^^^^
    {|0.04|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
            ^^^^^
    {|{|x|} ^ {|2|}|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
       ^^^^^^^^^^
    {|{|10|} * {|{|x|} ^ {|2|}|}|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
                    ^^^^^^^^
    {|{|3.67|} * {|x|}|}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|{|10|} * {|{|x|} ^ {|2|}|}|} - {|{|3.67|} * {|x|}|} - {|0.04|}|}
=== BRACKETED EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{{|{|10|} * {|{|x|} ^ {|2|}|}|} - {|{|3.67|} * {|x|}|} - {|0.04|}}}
=== PURELIST EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
^
    {|f|}
=== BRACKETED EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{{|{|10|} * {|{|x|} ^ {|2|}|}|} - {|{|3.67|} * {|x|}|} - {|0.04|}}}
=== BRACKETED EXPRESSION: line ##:
f = {{ 10 * x ^ 2 - 3.67 * x - 0.04 }}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|f|} =
        {{{|{|10|} * {|{|x|} ^ {|2|}|}|} - {|{|3.67|} * {|x|}|} -
          {|0.04|}}}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
        ^^^^
    {|0.96|}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
               ^^^^
    {|0.67|}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
                      ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
      ^^^^^^
    {|- {|0.96|}|}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
               ^^^^^^^^
    {|{|0.67|} * {|x|}|}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
      ^^^^^^^^^^^^^^^^^
    {|{|- {|0.96|}|} + {|{|0.67|} * {|x|}|}|}
=== BRACKETED EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
    ^^^^^^^^^^^^^^^^^^^^^
    {{{|- {|0.96|}|} + {|{|0.67|} * {|x|}|}}}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
^
    {|h|}
=== PURELIST EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{{{|- {|0.96|}|} + {|{|0.67|} * {|x|}|}}} in x|}
=== BRACKETED EXPRESSION: line ##:
h = {{- 0.96 + 0.67 * x}} in x
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|h|} = {|{{{|- {|0.96|}|} + {|{|0.67|} * {|x|}|}}} in x|}
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x
  ^
    {|f|}
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x
      ^
    {|h|}
=== BRACKETED EXPRESSION: line ##:
{{f + h}} in x
^^^^^^^^^
    {{{|f|} + {|h|}}}
=== BRACKETED EXPRESSION: line ##:
{{f + h}} in x
^^^^^^^^^^^^^^
    {{{|f|} + {|h|}}} in x
=== PURELIST EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
        ^
    {|f|}
=== PURELIST EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
            ^
    {|h|}
=== PURELIST EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
                ^
    {|0|}
=== PURELIST EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
        ^^^^^
    {|{|f|} + {|h|}|}
=== PURELIST EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
        ^^^^^^^^^
    {|{|{|f|} + {|h|}|} = {|0|}|}
=== BRACKETED EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
      ^^^^^^^^^^^^^
    {{{|{|f|} + {|h|}|} = {|0|}}}
=== BRACKETED EXPRESSION: line ##:
solve {{f + h = 0}} in x for x
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    solve {{{|{|f|} + {|h|}|} = {|0|}}} in x for x
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
  ^
    {|f|}
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
      ^
    {|h|}
=== BRACKETED EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
^^^^^^^^^
    {{{|f|} + {|h|}}}
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
                   ^
    {|3|}
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
                      ^
    {|4|}
=== PURELIST EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
                         ^
    {|5|}
=== BRACKETED EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
                  ^^^^^^^^^
    ({|3|}, {|4|}, {|5|})
=== BRACKETED EXPRESSION: line ##:
{{f + h}} in x at (3, 4, 5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{{|f|} + {|h|}}} in x at ({|3|}, {|4|}, {|5|})
=== PURELIST EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
                 ^
    {|x|}
=== PURELIST EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
                     ^
    {|2|}
=== PURELIST EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
                        ^^
    {|dx|}
=== PURELIST EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
                 ^^^^^
    {|{|x|} ^ {|2|}|}
=== BRACKETABLE EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
                 ^^^^^^^^^
    {|{|{|x|} ^ {|2|}|}, {|dx|}|}
=== BRACKETED EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
                ^^^^^^^^^^^
    ({|{|x|} ^ {|2|}|}, {|dx|})
=== BRACKETED EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{integral ({|{|x|} ^ {|2|}|}, {|dx|})}}
=== PURELIST EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
^
    {|g|}
=== BRACKETED EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{integral ({|{|x|} ^ {|2|}|}, {|dx|})}}
=== BRACKETED EXPRESSION: line ##:
g = {{ integral (x ^ 2, dx) }}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|g|} = {{integral ({|{|x|} ^ {|2|}|}, {|dx|})}}
=== BRACKETED EXPRESSION: line ##:
simplify g
^^^^^^^^^^
    simplify g
=== BRACKETED EXPRESSION: line ##:
g from 1 to 5
^^^^^^^^^^^^^
    g from 1 to 5
=== BRACKETED EXPRESSION: line ##:
v = simplify ( g from 1 to 5 )
             ^^^^^^^^^^^^^^^^^
    (g from 1 to 5)
=== PURELIST EXPRESSION: line ##:
v = simplify ( g from 1 to 5 )
^
    {|v|}
=== PURELIST EXPRESSION: line ##:
v = simplify ( g from 1 to 5 )
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|simplify (g from 1 to 5)|}
=== BRACKETED EXPRESSION: line ##:
v = simplify ( g from 1 to 5 )
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|v|} = {|simplify (g from 1 to 5)|}
=== BRACKETED EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
                     ^^^^^^^^^^^^^^^
    [g from 1 to 5]
=== BRACKETED EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
                                        ^^^
    [v]
=== BRACKETED EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|The value of [g from 1 to 5] is [v]|s}
=== BRACKETED EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|The value of [g from 1 to 5] is [v]|s}''
=== PURELIST EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
^^^
    {|out|}
=== BRACKETED EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|The value of [g from 1 to 5] is [v]|s}''
=== BRACKETED EXPRESSION: line ##:
out = ``The value of [g from 1 to 5] is [v].''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|out|} =
        ``{s: .terminator = "."|The value of [g from 1 to 5] is [v]|s}''
=== PURELIST EXPRESSION: line ##:
V =# {| 1 2 3 |}
     ^^^^^^^^^^^
    {|1 2 3|}
=== PURELIST EXPRESSION: line ##:
V =# {| 1 2 3 |}
^
    {|V|}
=== PURELIST EXPRESSION: line ##:
V =# {| 1 2 3 |}
     ^^^^^^^^^^^
    {|1 2 3|}
=== BRACKETED EXPRESSION: line ##:
V =# {| 1 2 3 |}
^^^^^^^^^^^^^^^^
    {|V|} =# {|1 2 3|}
=== BRACKETED EXPRESSION: line ##:
   |  0   1   1 |
   ^^^^^^^^^^^^^^
    "|" 0 1 1 "|"
=== BRACKETED EXPRESSION: line ##:
   | -1   1   0 |
   ^^^^^^^^^^^^^^
    "|" -1 1 0 "|"
=== BRACKETED EXPRESSION: line ##:
   |  1   0  -1 |
   ^^^^^^^^^^^^^^
    "|" 1 0 -1 "|"
=== BRACKETED EXPRESSION: lines ##-##:
M =#:
    ^
   |  0   1   1 |
^^^^^^^^^^^^^^^^^
   | -1   1   0 |
^^^^^^^^^^^^^^^^^
   |  1   0  -1 |
^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|"|" 0 1
              1 "|"|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|"|" -1 1
              0 "|"|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|"|" 1 0
              -1 "|"|}|}
=== PURELIST EXPRESSION: line ##:
M =#:
^
    {|M|}
=== PURELIST EXPRESSION: line ##:
M =#:
^^^^
    {|{|M|} =#|}
=== PURELIST EXPRESSION: lines ##-##:
M =#:
^^^^^
   |  0   1   1 |
^^^^^^^^^^^^^^^^^
   | -1   1   0 |
^^^^^^^^^^^^^^^^^
   |  1   0  -1 |
^^^^^^^^^^^^^^^^^
    {|{|{|M|} =#|}
      {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|"|" 0
                1 1 "|"|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|"|" -1
                1 0 "|"|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|"|" 1
                0 -1 "|"|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
M =#:
^^^^^
   |  0   1   1 |
^^^^^^^^^^^^^^^^^
   | -1   1   0 |
^^^^^^^^^^^^^^^^^
   |  1   0  -1 |
^^^^^^^^^^^^^^^^^
    {|{|M|} =#|}:
        "|" 0 1 1 "|"
        "|" -1 1 0 "|"
        "|" 1 0 -1 "|"
=== PURELIST EXPRESSION: line ##:
V ^ T
^
    {|V|}
=== PURELIST EXPRESSION: line ##:
V ^ T
    ^
    {|T|}
=== BRACKETED EXPRESSION: line ##:
V ^ T
^^^^^
    {|V|} ^ {|T|}
=== PURELIST EXPRESSION: line ##:
M * V ^ T
^
    {|M|}
=== PURELIST EXPRESSION: line ##:
M * V ^ T
    ^
    {|V|}
=== PURELIST EXPRESSION: line ##:
M * V ^ T
        ^
    {|T|}
=== PURELIST EXPRESSION: line ##:
M * V ^ T
    ^^^^^
    {|{|V|} ^ {|T|}|}
=== BRACKETED EXPRESSION: line ##:
M * V ^ T
^^^^^^^^^
    {|M|} * {|{|V|} ^ {|T|}|}
=== BRACKETED EXPRESSION: line ##:
    name = `Jack'
           ^^^^^^
    `Jack'
=== PURELIST EXPRESSION: line ##:
    name = `Jack'
    ^^^^
    {|name|}
=== BRACKETED EXPRESSION: line ##:
    name = `Jack'
           ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ##:
    name = `Jack'
    ^^^^^^^^^^^^^
    {|name|} = `Jack'
=== PURELIST EXPRESSION: line ##:
    weight = 123 lb
    ^^^^^^
    {|weight|}
=== PURELIST EXPRESSION: line ##:
    weight = 123 lb
             ^^^^^^
    {|123 lb|}
=== BRACKETED EXPRESSION: line ##:
    weight = 123 lb
    ^^^^^^^^^^^^^^^
    {|weight|} = {|123 lb|}
=== PURELIST EXPRESSION: line ##:
    height = 5 ft 9 in
    ^^^^^^
    {|height|}
=== PURELIST EXPRESSION: line ##:
    height = 5 ft 9 in
             ^^^^^^^^^
    {|5 ft 9 in|}
=== BRACKETED EXPRESSION: line ##:
    height = 5 ft 9 in
    ^^^^^^^^^^^^^^^^^^
    {|height|} = {|5 ft 9 in|}
=== PURELIST EXPRESSION: line ##:
    age = 23 yr 2 mo
    ^^^
    {|age|}
=== PURELIST EXPRESSION: line ##:
    age = 23 yr 2 mo
          ^^^^^^^^^^
    {|23 yr 2 mo|}
=== BRACKETED EXPRESSION: line ##:
    age = 23 yr 2 mo
    ^^^^^^^^^^^^^^^^
    {|age|} = {|23 yr 2 mo|}
=== BRACKETED EXPRESSION: lines ##-##:
a person:
        ^
    name = `Jack'
^^^^^^^^^^^^^^^^^
    weight = 123 lb
^^^^^^^^^^^^^^^^^^^
    height = 5 ft 9 in
^^^^^^^^^^^^^^^^^^^^^^
    age = 23 yr 2 mo
^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|name|}
              = `Jack'|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|weight|} = {|123 lb|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|height|} = {|5 ft 9 in|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|age|}
              = {|23 yr 2 mo|}|}|}
=== PURELIST EXPRESSION: line ##:
a person:
^^^^^^^^
    {|a person|}
=== BRACKETED EXPRESSION: lines ##-##:
a person:
^^^^^^^^^
    name = `Jack'
^^^^^^^^^^^^^^^^^
    weight = 123 lb
^^^^^^^^^^^^^^^^^^^
    height = 5 ft 9 in
^^^^^^^^^^^^^^^^^^^^^^
    age = 23 yr 2 mo
^^^^^^^^^^^^^^^^^^^^
    {|a person|}:
        {|name|} = `Jack'
        {|weight|} = {|123 lb|}
        {|height|} = {|5 ft 9 in|}
        {|age|} = {|23 yr 2 mo|}
=== BRACKETED EXPRESSION: line ##:
    name = `Jill'
           ^^^^^^
    `Jill'
=== PURELIST EXPRESSION: line ##:
    name = `Jill'
    ^^^^
    {|name|}
=== BRACKETED EXPRESSION: line ##:
    name = `Jill'
           ^^^^^^
    `Jill'
=== BRACKETED EXPRESSION: line ##:
    name = `Jill'
    ^^^^^^^^^^^^^
    {|name|} = `Jill'
=== PURELIST EXPRESSION: line ##:
    weight = 110 lb
    ^^^^^^
    {|weight|}
=== PURELIST EXPRESSION: line ##:
    weight = 110 lb
             ^^^^^^
    {|110 lb|}
=== BRACKETED EXPRESSION: line ##:
    weight = 110 lb
    ^^^^^^^^^^^^^^^
    {|weight|} = {|110 lb|}
=== PURELIST EXPRESSION: line ##:
    height = 5 ft 7 in
    ^^^^^^
    {|height|}
=== PURELIST EXPRESSION: line ##:
    height = 5 ft 7 in
             ^^^^^^^^^
    {|5 ft 7 in|}
=== BRACKETED EXPRESSION: line ##:
    height = 5 ft 7 in
    ^^^^^^^^^^^^^^^^^^
    {|height|} = {|5 ft 7 in|}
=== PURELIST EXPRESSION: line ##:
    age = 21 yr 8 mo
    ^^^
    {|age|}
=== PURELIST EXPRESSION: line ##:
    age = 21 yr 8 mo
          ^^^^^^^^^^
    {|21 yr 8 mo|}
=== BRACKETED EXPRESSION: line ##:
    age = 21 yr 8 mo
    ^^^^^^^^^^^^^^^^
    {|age|} = {|21 yr 8 mo|}
=== BRACKETED EXPRESSION: lines ##-##:
a person:
        ^
    name = `Jill'
^^^^^^^^^^^^^^^^^
    weight = 110 lb
^^^^^^^^^^^^^^^^^^^
    height = 5 ft 7 in
^^^^^^^^^^^^^^^^^^^^^^
    age = 21 yr 8 mo
^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|name|}
              = `Jill'|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|weight|} = {|110 lb|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|height|} = {|5 ft 7 in|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|age|}
              = {|21 yr 8 mo|}|}|}
=== PURELIST EXPRESSION: line ##:
a person:
^^^^^^^^
    {|a person|}
=== BRACKETED EXPRESSION: lines ##-##:
a person:
^^^^^^^^^
    name = `Jill'
^^^^^^^^^^^^^^^^^
    weight = 110 lb
^^^^^^^^^^^^^^^^^^^
    height = 5 ft 7 in
^^^^^^^^^^^^^^^^^^^^^^
    age = 21 yr 8 mo
^^^^^^^^^^^^^^^^^^^^
    {|a person|}:
        {|name|} = `Jill'
        {|weight|} = {|110 lb|}
        {|height|} = {|5 ft 7 in|}
        {|age|} = {|21 yr 8 mo|}
=== BRACKETED EXPRESSION: line ##:
the person named Jack's height
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    the person named Jack's height
=== BRACKETED EXPRESSION: line ##:
the weight of the person named Jack
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    the weight of the person named Jack
=== PURELIST EXPRESSION: line ##:
    body mass index = 703.06958 * weight in lbs
    ^^^^^^^^^^^^^^^
    {|body mass index|}
=== PURELIST EXPRESSION: line ##:
    body mass index = 703.06958 * weight in lbs
                      ^^^^^^^^^
    {|703.06958|}
=== PURELIST EXPRESSION: line ##:
    body mass index = 703.06958 * weight in lbs
                                  ^^^^^^^^^^^^^
    {|weight in lbs|}
=== PURELIST EXPRESSION: line ##:
                    / height in inches ^ 2
                      ^^^^^^^^^^^^^^^^
    {|height in inches|}
=== PURELIST EXPRESSION: line ##:
                    / height in inches ^ 2
                                         ^
    {|2|}
=== PURELIST EXPRESSION: line ##:
    body mass index = 703.06958 * weight in lbs
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|703.06958|} * {|weight in lbs|}|}
=== PURELIST EXPRESSION: line ##:
                    / height in inches ^ 2
                      ^^^^^^^^^^^^^^^^^^^^
    {|{|height in inches|} ^ {|2|}|}
=== PURELIST EXPRESSION: lines ##-##:
    body mass index = 703.06958 * weight in lbs
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
                    / height in inches ^ 2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|{|703.06958|} * {|weight in lbs|}|} /
      {|{|height in inches|} ^ {|2|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    body mass index = 703.06958 * weight in lbs
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    / height in inches ^ 2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|body mass index|} =
        {|{|{|703.06958|} * {|weight in lbs|}|} /
          {|{|height in inches|} ^ {|2|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
for every person:
                ^
    body mass index = 703.06958 * weight in lbs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    / height in inches ^ 2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|body mass index|} =
              {|{|{|703.06958|} * {|weight in lbs|}|} /
                {|{|height in inches|} ^ {|2|}|}|}|}|}
=== PURELIST EXPRESSION: line ##:
for every person:
          ^^^^^^
    {|person|}
=== PURELIST EXPRESSION: line ##:
for every person:
^^^^^^^^^^^^^^^^
    {|[< for every >] {|person|}|}
=== PURELIST EXPRESSION: lines ##-##:
for every person:
^^^^^^^^^^^^^^^^^
    body mass index = 703.06958 * weight in lbs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    / height in inches ^ 2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|[< for every >] {|person|}|}
      {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                {|body mass index|} =
                {|{|{|703.06958|} * {|weight in lbs|}|} /
                  {|{|height in inches|} ^ {|2|}|}|}|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
for every person:
^^^^^^^^^^^^^^^^^
    body mass index = 703.06958 * weight in lbs
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    / height in inches ^ 2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|[< for every >] {|person|}|}:
        {|body mass index|} =
            {|{|{|703.06958|} * {|weight in lbs|}|} /
              {|{|height in inches|} ^ {|2|}|}|}
=== BRACKETED EXPRESSION: line ##:
    ``Sum of integers from X through Y.''
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|Sum of integers from X through Y|s}
=== BRACKETED EXPRESSION: line ##:
    ``Sum of integers from X through Y.''
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|Sum of integers from X through Y|s}''
=== BRACKETED EXPRESSION: line ##:
    ``Sum of integers from X through Y.''
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|Sum of integers from X through Y|s}''
=== PURELIST EXPRESSION: line ##:
    if X > Y:     value = 0
       ^
    {|X|}
=== PURELIST EXPRESSION: line ##:
    if X > Y:     value = 0
           ^
    {|Y|}
=== PURELIST EXPRESSION: line ##:
    if X > Y:     value = 0
                  ^^^^^
    {|value|}
=== PURELIST EXPRESSION: line ##:
    if X > Y:     value = 0
                          ^
    {|0|}
=== PURELIST EXPRESSION: line ##:
    if X > Y:     value = 0
       ^^^^^
    {|{|X|} > {|Y|}|}
=== PURELIST EXPRESSION: line ##:
    if X > Y:     value = 0
                  ^^^^^^^^^
    {|{|value|} = {|0|}|}
=== BRACKETED EXPRESSION: line ##:
    if X > Y:     value = 0
    ^^^^^^^^^^^^^^^^^^^^^^^
    if {|{|X|} > {|Y|}|} ":" {|{|value|} = {|0|}|}
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                                   ^
    {|X|}
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                                       ^
    {|1|}
=== BRACKETED EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                                  ^^^^^^^
    ({|X|} + {|1|})
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                  ^^^^^
    {|value|}
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                          ^
    {|X|}
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                              ^^^^^^^^^^^^^^^^^^^^^
    {|sum ({|X|} + {|1|}) through Y|}
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|X|} + {|sum ({|X|} + {|1|}) through Y|}|}
=== PURELIST EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|value|} = {|{|X|} + {|sum ({|X|} + {|1|}) through Y|}|}|}
=== BRACKETED EXPRESSION: line ##:
    else:         value = X + sum (X + 1) through Y
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    else ":"
        {|{|value|} = {|{|X|} + {|sum ({|X|} + {|1|}) through Y|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
                          is an integer Y:
                                         ^
    ``Sum of integers from X through Y.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    if X > Y:     value = 0
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    else:         value = X + sum (X + 1) through Y
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              ``{s: .terminator = "."|Sum of integers from X through
                    Y|s}''|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|if
              {|{|X|} > {|Y|}|} ":" {|{|value|} = {|0|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|else ":"
              {|{|value|} =
                {|{|X|} + {|sum ({|X|} + {|1|}) through Y|}|}|}|}|}
=== PURELIST EXPRESSION: line ##:
sum from X through Y <-- is an integer X,
^^^^^^^^^^^^^^^^^^^^
    {|sum from X through Y|}
=== PURELIST EXPRESSION: line ##:
sum from X through Y <-- is an integer X,
                         ^^^^^^^^^^^^^^^
    {|is an integer X|}
=== PURELIST EXPRESSION: line ##:
                          is an integer Y:
                          ^^^^^^^^^^^^^^^
    {|is an integer Y|}
=== BRACKETABLE EXPRESSION: lines ##-##:
sum from X through Y <-- is an integer X,
                         ^^^^^^^^^^^^^^^^
                          is an integer Y:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|is an integer X|}, {|is an integer Y|}|}
=== BRACKETED EXPRESSION: lines ##-##:
sum from X through Y <-- is an integer X,
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          is an integer Y:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``Sum of integers from X through Y.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    if X > Y:     value = 0
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    else:         value = X + sum (X + 1) through Y
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|sum from X through Y|} <--
        {|{|is an integer X|}, {|is an integer Y|}|}:
        ``{s: .terminator = "."|Sum of integers from X through Y|s}''
        if {|{|X|} > {|Y|}|} ":" {|{|value|} = {|0|}|}
        else ":"
            {|{|value|} =
              {|{|X|} + {|sum ({|X|} + {|1|}) through Y|}|}|}
=== BRACKETED EXPRESSION: line ##:
sum from 5 through 10
^^^^^^^^^^^^^^^^^^^^^
    sum from 5 through 10
=== BRACKETED EXPRESSION: line ##:
all (sums from X through Y)
    ^^^^^^^^^^^^^^^^^^^^^^^
    (sums from X through Y)
=== BRACKETED EXPRESSION: line ##:
all (sums from X through Y)
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    all (sums from X through Y)
=== BRACKETED EXPRESSION: line ##:
sum from 1 through 2
^^^^^^^^^^^^^^^^^^^^
    sum from 1 through 2
=== BRACKETED EXPRESSION: line ##:
all (sums from X through Y)
    ^^^^^^^^^^^^^^^^^^^^^^^
    (sums from X through Y)
=== BRACKETED EXPRESSION: line ##:
all (sums from X through Y)
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    all (sums from X through Y)
=== BRACKETED EXPRESSION: line ##:
    ``Sum of integers from X through Y.''
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|Sum of integers from X through Y|s}
=== BRACKETED EXPRESSION: line ##:
    ``Sum of integers from X through Y.''
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|Sum of integers from X through Y|s}''
=== BRACKETED EXPRESSION: line ##:
    ``Sum of integers from X through Y.''
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|Sum of integers from X through Y|s}''
=== PURELIST EXPRESSION: line ##:
    value = 0
    ^^^^^
    {|value|}
=== PURELIST EXPRESSION: line ##:
    value = 0
            ^
    {|0|}
=== BRACKETED EXPRESSION: line ##:
    value = 0
    ^^^^^^^^^
    {|value|} = {|0|}
=== PURELIST EXPRESSION: line ##:
        next value = value + X
        ^^^^^^^^^^
    {|next value|}
=== PURELIST EXPRESSION: line ##:
        next value = value + X
                     ^^^^^
    {|value|}
=== PURELIST EXPRESSION: line ##:
        next value = value + X
                             ^
    {|X|}
=== PURELIST EXPRESSION: line ##:
        next value = value + X
                     ^^^^^^^^^
    {|{|value|} + {|X|}|}
=== BRACKETED EXPRESSION: line ##:
        next value = value + X
        ^^^^^^^^^^^^^^^^^^^^^^
    {|next value|} = {|{|value|} + {|X|}|}
=== PURELIST EXPRESSION: line ##:
        next X = X + 1
        ^^^^^^
    {|next X|}
=== PURELIST EXPRESSION: line ##:
        next X = X + 1
                 ^
    {|X|}
=== PURELIST EXPRESSION: line ##:
        next X = X + 1
                     ^
    {|1|}
=== PURELIST EXPRESSION: line ##:
        next X = X + 1
                 ^^^^^
    {|{|X|} + {|1|}|}
=== BRACKETED EXPRESSION: line ##:
        next X = X + 1
        ^^^^^^^^^^^^^^
    {|next X|} = {|{|X|} + {|1|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    while X <= Y:
                ^
        next value = value + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = X + 1
^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next value|} = {|{|value|} + {|X|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next X|} = {|{|X|} + {|1|}|}|}|}
=== PURELIST EXPRESSION: line ##:
    while X <= Y:
          ^
    {|X|}
=== PURELIST EXPRESSION: line ##:
    while X <= Y:
               ^
    {|Y|}
=== PURELIST EXPRESSION: line ##:
    while X <= Y:
          ^^^^^^
    {|{|X|} <= {|Y|}|}
=== PURELIST EXPRESSION: line ##:
    while X <= Y:
    ^^^^^^^^^^^^
    {|while {|{|X|} <= {|Y|}|}|}
=== PURELIST EXPRESSION: lines ##-##:
    while X <= Y:
    ^^^^^^^^^^^^^
        next value = value + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = X + 1
^^^^^^^^^^^^^^^^^^^^^^
    {|{|while {|{|X|} <= {|Y|}|}|}
      {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                {|next value|} = {|{|value|} + {|X|}|}|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                {|next X|} = {|{|X|} + {|1|}|}|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    while X <= Y:
    ^^^^^^^^^^^^^
        next value = value + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = X + 1
^^^^^^^^^^^^^^^^^^^^^^
    {|while {|{|X|} <= {|Y|}|}|}:
        {|next value|} = {|{|value|} + {|X|}|}
        {|next X|} = {|{|X|} + {|1|}|}
=== BRACKETED EXPRESSION: lines ##-##:
                         is an integer Y:
                                        ^
    ``Sum of integers from X through Y.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    value = 0
^^^^^^^^^^^^^
    while X <= Y:
^^^^^^^^^^^^^^^^^
        next value = value + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = X + 1
^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              ``{s: .terminator = "."|Sum of integers from X through
                    Y|s}''|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|value|} = {|0|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|while {|{|X|} <= {|Y|}|}|}
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next value|} =
                        {|{|value|} + {|X|}|}|}
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next X|} = {|{|X|} + {|1|}|}|}|}|}|}
=== PURELIST EXPRESSION: line ##:
sum from X through Y <-- is an integer X,
^^^^^^^^^^^^^^^^^^^^
    {|sum from X through Y|}
=== PURELIST EXPRESSION: line ##:
sum from X through Y <-- is an integer X,
                         ^^^^^^^^^^^^^^^
    {|is an integer X|}
=== PURELIST EXPRESSION: line ##:
                         is an integer Y:
                         ^^^^^^^^^^^^^^^
    {|is an integer Y|}
=== BRACKETABLE EXPRESSION: lines ##-##:
sum from X through Y <-- is an integer X,
                         ^^^^^^^^^^^^^^^^
                         is an integer Y:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|is an integer X|}, {|is an integer Y|}|}
=== BRACKETED EXPRESSION: lines ##-##:
sum from X through Y <-- is an integer X,
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         is an integer Y:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``Sum of integers from X through Y.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    value = 0
^^^^^^^^^^^^^
    while X <= Y:
^^^^^^^^^^^^^^^^^
        next value = value + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = X + 1
^^^^^^^^^^^^^^^^^^^^^^
    {|sum from X through Y|} <--
        {|{|is an integer X|}, {|is an integer Y|}|}:
        ``{s: .terminator = "."|Sum of integers from X through Y|s}''
        {|value|} = {|0|}
        {|while {|{|X|} <= {|Y|}|}|}:
            {|next value|} = {|{|value|} + {|X|}|}
            {|next X|} = {|{|X|} + {|1|}|}
=== BRACKETED EXPRESSION: line ##:
sum from 5 through 10
^^^^^^^^^^^^^^^^^^^^^
    sum from 5 through 10
=== BRACKETED EXPRESSION: line ##:
all ( sums from X through Y)
    ^^^^^^^^^^^^^^^^^^^^^^^^
    (sums from X through Y)
=== BRACKETED EXPRESSION: line ##:
all ( sums from X through Y)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    all (sums from X through Y)
=== PURELIST EXPRESSION: line ##:
    count = 0
    ^^^^^
    {|count|}
=== PURELIST EXPRESSION: line ##:
    count = 0
            ^
    {|0|}
=== BRACKETED EXPRESSION: line ##:
    count = 0
    ^^^^^^^^^
    {|count|} = {|0|}
=== PURELIST EXPRESSION: line ##:
    sum = 0
    ^^^
    {|sum|}
=== PURELIST EXPRESSION: line ##:
    sum = 0
          ^
    {|0|}
=== BRACKETED EXPRESSION: line ##:
    sum = 0
    ^^^^^^^
    {|sum|} = {|0|}
=== BRACKETED EXPRESSION: line ##:
    while X != ():
               ^^
    ()
=== PURELIST EXPRESSION: line ##:
        next count = count + 1
        ^^^^^^^^^^
    {|next count|}
=== PURELIST EXPRESSION: line ##:
        next count = count + 1
                     ^^^^^
    {|count|}
=== PURELIST EXPRESSION: line ##:
        next count = count + 1
                             ^
    {|1|}
=== PURELIST EXPRESSION: line ##:
        next count = count + 1
                     ^^^^^^^^^
    {|{|count|} + {|1|}|}
=== BRACKETED EXPRESSION: line ##:
        next count = count + 1
        ^^^^^^^^^^^^^^^^^^^^^^
    {|next count|} = {|{|count|} + {|1|}|}
=== BRACKETED EXPRESSION: line ##:
        next sum = sum + the weight of (first X)
                                       ^^^^^^^^^
    (first X)
=== PURELIST EXPRESSION: line ##:
        next sum = sum + the weight of (first X)
        ^^^^^^^^
    {|next sum|}
=== PURELIST EXPRESSION: line ##:
        next sum = sum + the weight of (first X)
                   ^^^
    {|sum|}
=== PURELIST EXPRESSION: line ##:
        next sum = sum + the weight of (first X)
                         ^^^^^^^^^^^^^^^^^^^^^^^
    {|the weight of (first X)|}
=== PURELIST EXPRESSION: line ##:
        next sum = sum + the weight of (first X)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|sum|} + {|the weight of (first X)|}|}
=== BRACKETED EXPRESSION: line ##:
        next sum = sum + the weight of (first X)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|next sum|} = {|{|sum|} + {|the weight of (first X)|}|}
=== PURELIST EXPRESSION: line ##:
        next X = rest X
        ^^^^^^
    {|next X|}
=== PURELIST EXPRESSION: line ##:
        next X = rest X
                 ^^^^^^
    {|rest X|}
=== BRACKETED EXPRESSION: line ##:
        next X = rest X
        ^^^^^^^^^^^^^^^
    {|next X|} = {|rest X|}
=== BRACKETED EXPRESSION: lines ##-##:
    while X != ():
                 ^
        next count = count + 1
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next sum = sum + the weight of (first X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = rest X
^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next count|} = {|{|count|} + {|1|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next sum|} = {|{|sum|} + {|the weight of (first X)|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next X|} = {|rest X|}|}|}
=== PURELIST EXPRESSION: line ##:
    while X != ():
          ^
    {|X|}
=== BRACKETED EXPRESSION: line ##:
    while X != ():
               ^^
    ()
=== PURELIST EXPRESSION: line ##:
    while X != ():
          ^^^^^^^
    {|{|X|} != ()|}
=== PURELIST EXPRESSION: line ##:
    while X != ():
    ^^^^^^^^^^^^^
    {|while {|{|X|} != ()|}|}
=== PURELIST EXPRESSION: lines ##-##:
    while X != ():
    ^^^^^^^^^^^^^^
        next count = count + 1
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next sum = sum + the weight of (first X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = rest X
^^^^^^^^^^^^^^^^^^^^^^^
    {|{|while {|{|X|} != ()|}|}
      {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                {|next count|} = {|{|count|} + {|1|}|}|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                {|next sum|} =
                {|{|sum|} + {|the weight of (first X)|}|}|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                {|next X|} = {|rest X|}|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    while X != ():
    ^^^^^^^^^^^^^^
        next count = count + 1
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next sum = sum + the weight of (first X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = rest X
^^^^^^^^^^^^^^^^^^^^^^^
    {|while {|{|X|} != ()|}|}:
        {|next count|} = {|{|count|} + {|1|}|}
        {|next sum|} = {|{|sum|} + {|the weight of (first X)|}|}
        {|next X|} = {|rest X|}
=== BRACKETED EXPRESSION: line ##:
        value = error ``Cannot average 0 things.''
                        ^^^^^^^^^^^^^^^^^^^^^^^^
    {s: .terminator = "."|Cannot average 0 things|s}
=== BRACKETED EXPRESSION: line ##:
        value = error ``Cannot average 0 things.''
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``{s: .terminator = "."|Cannot average 0 things|s}''
=== PURELIST EXPRESSION: line ##:
        value = error ``Cannot average 0 things.''
        ^^^^^
    {|value|}
=== PURELIST EXPRESSION: line ##:
        value = error ``Cannot average 0 things.''
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|error ``{s: .terminator = "."|Cannot average 0 things|s}''|}
=== BRACKETED EXPRESSION: line ##:
        value = error ``Cannot average 0 things.''
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|value|} =
        {|error ``{s: .terminator = "."|Cannot average 0 things|s}''|}
=== BRACKETED EXPRESSION: lines ##-##:
    if count == 0:
                 ^
        value = error ``Cannot average 0 things.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|value|} =
              {|error
                ``{s: .terminator = "."|Cannot average 0 things|s}''|}|}|}
=== PURELIST EXPRESSION: line ##:
    if count == 0:
       ^^^^^
    {|count|}
=== PURELIST EXPRESSION: line ##:
    if count == 0:
                ^
    {|0|}
=== PURELIST EXPRESSION: line ##:
    if count == 0:
       ^^^^^^^^^^
    {|{|count|} == {|0|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    if count == 0:
    ^^^^^^^^^^^^^^
        value = error ``Cannot average 0 things.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    if {|{|count|} == {|0|}|}:
        {|value|} =
            {|error
              ``{s: .terminator = "."|Cannot average 0 things|s}''|}
=== PURELIST EXPRESSION: line ##:
        value = sum / count
        ^^^^^
    {|value|}
=== PURELIST EXPRESSION: line ##:
        value = sum / count
                ^^^
    {|sum|}
=== PURELIST EXPRESSION: line ##:
        value = sum / count
                      ^^^^^
    {|count|}
=== PURELIST EXPRESSION: line ##:
        value = sum / count
                ^^^^^^^^^^^
    {|{|sum|} / {|count|}|}
=== BRACKETED EXPRESSION: line ##:
        value = sum / count
        ^^^^^^^^^^^^^^^^^^^
    {|value|} = {|{|sum|} / {|count|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    else:
        ^
        value = sum / count
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|value|} = {|{|sum|} / {|count|}|}|}|}
=== BRACKETED EXPRESSION: lines ##-##:
    else:
    ^^^^^
        value = sum / count
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    else:
        {|value|} = {|{|sum|} / {|count|}|}
=== BRACKETED EXPRESSION: lines ##-##:
average weight of X <-- list X of persons:
                                         ^
    count = 0
^^^^^^^^^^^^^
    sum = 0
^^^^^^^^^^^
    while X != ():
^^^^^^^^^^^^^^^^^^
        next count = count + 1
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next sum = sum + the weight of (first X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = rest X
^^^^^^^^^^^^^^^^^^^^^^^
    if count == 0:
^^^^^^^^^^^^^^^^^^
        value = error ``Cannot average 0 things.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    else:
^^^^^^^^^
        value = sum / count
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|count|} = {|0|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|sum|}
              = {|0|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|while {|{|X|} != ()|}|}
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next count|} =
                        {|{|count|} + {|1|}|}|}
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next sum|} =
                        {|{|sum|} + {|the weight of (first X)|}|}|}
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next X|} = {|rest X|}|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|if
              {|{|count|} == {|0|}|}
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|value|} =
                        {|error
                          ``{s: .terminator = "."|Cannot average 0
                                things|s}''|}|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|else
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|value|} =
                        {|{|sum|} / {|count|}|}|}|}|}|}
=== PURELIST EXPRESSION: line ##:
average weight of X <-- list X of persons:
^^^^^^^^^^^^^^^^^^^
    {|average weight of X|}
=== PURELIST EXPRESSION: line ##:
average weight of X <-- list X of persons:
                        ^^^^^^^^^^^^^^^^^
    {|list X of persons|}
=== BRACKETED EXPRESSION: lines ##-##:
average weight of X <-- list X of persons:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    count = 0
^^^^^^^^^^^^^
    sum = 0
^^^^^^^^^^^
    while X != ():
^^^^^^^^^^^^^^^^^^
        next count = count + 1
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next sum = sum + the weight of (first X)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next X = rest X
^^^^^^^^^^^^^^^^^^^^^^^
    if count == 0:
^^^^^^^^^^^^^^^^^^
        value = error ``Cannot average 0 things.''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    else:
^^^^^^^^^
        value = sum / count
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|average weight of X|} <-- {|list X of persons|}:
        {|count|} = {|0|}
        {|sum|} = {|0|}
        {|while {|{|X|} != ()|}|}:
            {|next count|} = {|{|count|} + {|1|}|}
            {|next sum|} = {|{|sum|} + {|the weight of (first X)|}|}
            {|next X|} = {|rest X|}
        if {|{|count|} == {|0|}|}:
            {|value|} =
                {|error
                  ``{s: .terminator = "."|Cannot average 0 things|s}''|}
        else:
            {|value|} = {|{|sum|} / {|count|}|}
=== BRACKETED EXPRESSION: line ##:
average weight of (all persons)
                  ^^^^^^^^^^^^^
    (all persons)
=== BRACKETED EXPRESSION: line ##:
average weight of (all persons)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    average weight of (all persons)
=== BRACKETED EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
                                              ^^^^^^
    `Bill'
=== BRACKETED EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    (all persons named `Bill')
=== PURELIST EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
^
    {|z|}
=== PURELIST EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
    ^^
    {|10|}
=== PURELIST EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|average weight of (all persons named `Bill')|}
=== PURELIST EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|10|} + {|average weight of (all persons named `Bill')|}|}
=== BRACKETED EXPRESSION: line ###:
z = 10 + average weight of (all persons named `Bill')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|z|} =
        {|{|10|} + {|average weight of (all persons named `Bill')|}|}
=== BRACKETED EXPRESSION: line ###:
raw (all persons)
    ^^^^^^^^^^^^^
    (all persons)
=== BRACKETED EXPRESSION: line ###:
raw (all persons)
^^^^^^^^^^^^^^^^^
    raw (all persons)
=== BRACKETED EXPRESSION: line ###:
really raw (all persons)
           ^^^^^^^^^^^^^
    (all persons)
=== BRACKETED EXPRESSION: line ###:
really raw (all persons)
^^^^^^^^^^^^^^^^^^^^^^^^
    really raw (all persons)
=== PURELIST EXPRESSION: line ###:
x = (1, (2, 3), 4)
         ^
    {|2|}
=== PURELIST EXPRESSION: line ###:
x = (1, (2, 3), 4)
            ^
    {|3|}
=== BRACKETED EXPRESSION: line ###:
x = (1, (2, 3), 4)
        ^^^^^^
    ({|2|}, {|3|})
=== PURELIST EXPRESSION: line ###:
x = (1, (2, 3), 4)
     ^
    {|1|}
=== BRACKETED EXPRESSION: line ###:
x = (1, (2, 3), 4)
        ^^^^^^
    ({|2|}, {|3|})
=== PURELIST EXPRESSION: line ###:
x = (1, (2, 3), 4)
                ^
    {|4|}
=== BRACKETED EXPRESSION: line ###:
x = (1, (2, 3), 4)
    ^^^^^^^^^^^^^^
    ({|1|}, ({|2|}, {|3|}), {|4|})
=== PURELIST EXPRESSION: line ###:
x = (1, (2, 3), 4)
^
    {|x|}
=== BRACKETED EXPRESSION: line ###:
x = (1, (2, 3), 4)
    ^^^^^^^^^^^^^^
    ({|1|}, ({|2|}, {|3|}), {|4|})
=== BRACKETED EXPRESSION: line ###:
x = (1, (2, 3), 4)
^^^^^^^^^^^^^^^^^^
    {|x|} = ({|1|}, ({|2|}, {|3|}), {|4|})
=== BRACKETED EXPRESSION: line ###:
first x
^^^^^^^
    first x
=== BRACKETED EXPRESSION: line ###:
rest x
^^^^^^
    rest x
=== BRACKETED EXPRESSION: line ###:
rest (rest x)
     ^^^^^^^^
    (rest x)
=== BRACKETED EXPRESSION: line ###:
rest (rest x)
^^^^^^^^^^^^^
    rest (rest x)
=== BRACKETED EXPRESSION: line ###:
rest (rest (rest x))
           ^^^^^^^^
    (rest x)
=== BRACKETED EXPRESSION: line ###:
rest (rest (rest x))
     ^^^^^^^^^^^^^^^
    (rest (rest x))
=== BRACKETED EXPRESSION: line ###:
rest (rest (rest x))
^^^^^^^^^^^^^^^^^^^^
    rest (rest (rest x))
=== BRACKETED EXPRESSION: line ###:
rest 4
^^^^^^
    rest 4
=== BRACKETED EXPRESSION: line ###:
(a person named `Jack') is husband of
                ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
(a person named `Jack') is husband of
^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jill')
                    ^^^^^^
    `Jill'
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jill')
    ^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jill')
=== BRACKETED EXPRESSION: lines ###-###:
(a person named `Jack') is husband of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jill')
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack') is husband of (a person named `Jill')
=== PURELIST EXPRESSION: line ###:
Y is wife of X <-- X is husband of Y
^^^^^^^^^^^^^^
    {|Y is wife of X|}
=== PURELIST EXPRESSION: line ###:
Y is wife of X <-- X is husband of Y
                   ^^^^^^^^^^^^^^^^^
    {|X is husband of Y|}
=== BRACKETED EXPRESSION: line ###:
Y is wife of X <-- X is husband of Y
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|Y is wife of X|} <-- {|X is husband of Y|}
=== BRACKETED EXPRESSION: line ###:
(a person named `Jill') is wife of
                ^^^^^^
    `Jill'
=== BRACKETED EXPRESSION: line ###:
(a person named `Jill') is wife of
^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jill')
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jack')?
                    ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jack')?
    ^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')
=== BRACKETED EXPRESSION: lines ###-###:
(a person named `Jill') is wife of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jill') is wife of (a person named `Jack') "?"
=== BRACKETED EXPRESSION: line ###:
(a person named `Jack') is wife of
                ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
(a person named `Jack') is wife of
^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jill')?
                    ^^^^^^
    `Jill'
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jill')?
    ^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jill')
=== BRACKETED EXPRESSION: lines ###-###:
(a person named `Jack') is wife of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jill')?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack') is wife of (a person named `Jill') "?"
=== BRACKETED EXPRESSION: line ###:
(a person named X) is wife of
^^^^^^^^^^^^^^^^^^
    (a person named X)
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jack')?
                    ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
    (a person named `Jack')?
    ^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')
=== BRACKETED EXPRESSION: lines ###-###:
(a person named X) is wife of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (a person named X) is wife of (a person named `Jack') "?"
=== BRACKETED EXPRESSION: line ###:
X is wife of (a person named `Jack')
                             ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
X is wife of (a person named `Jack')
             ^^^^^^^^^^^^^^^^^^^^^^^
    (a person named `Jack')
=== BRACKETED EXPRESSION: line ###:
X is wife of (a person named `Jack')
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    X is wife of (a person named `Jack')
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|--------------------------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|-------------------------------------------------------#
                #-|row}|table}
=== BRACKETED EXPRESSION: line ###:
| header 1 | header 2 | header 3 | header 4 | header 5 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" header 1 "|" header 2 "|" header 3 "|" header 4 "|" header
         5 "|"|row}
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|--------------------------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| entry 11 | entry 12 | entry 13 | entry 14 | entry 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" entry 11 "|" entry 12 "|" entry 13 "|" entry 14 "|" entry
         15 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| entry 21 | entry 22 | entry 23 | entry 24 | entry 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" entry 21 "|" entry 22 "|" entry 23 "|" entry 24 "|" entry
         25 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| entry 31 | entry 32 | entry 33 | entry 34 | entry 35 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" entry 31 "|" entry 32 "|" entry 33 "|" entry 34 "|" entry
         35 "|"|row}
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|--------------------------------------------------------|row}
=== BRACKETED EXPRESSION: lines ###-###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| header 1 | header 2 | header 3 | header 4 | header 5 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| entry 11 | entry 12 | entry 13 | entry 14 | entry 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| entry 21 | entry 22 | entry 23 | entry 24 | entry 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| entry 31 | entry 32 | entry 33 | entry 34 | entry 35 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|-------------------------------------------------------#
                #-|row}
           {row|"|" header 1 "|" header 2 "|" header 3 "|" header 4 "|"
                header 5 "|"|row}
           {row|--------------------------------------------------------|row}
           {row|"|" entry 11 "|" entry 12 "|" entry 13 "|" entry 14 "|"
                entry 15 "|"|row}
           {row|"|" entry 21 "|" entry 22 "|" entry 23 "|" entry 24 "|"
                entry 25 "|"|row}
           {row|"|" entry 31 "|" entry 32 "|" entry 33 "|" entry 34 "|"
                entry 35 "|"|row}
           {row|--------------------------------------------------------|row}|table}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|------------------------------------|row}|table}
=== BRACKETED EXPRESSION: line ###:
| H  1 | H  2 | H  3 | H  4 | H  5 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" H 1 "|" H 2 "|" H 3 "|" H 4 "|" H 5 "|"|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| E 11 | E 12 | E 13 | E 14 | E 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 11 "|" E 12 "|" E 13 "|" E 14 "|" E 15 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| E 21 | E 22 | E 23 | E 24 | E 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 21 "|" E 22 "|" E 23 "|" E 24 "|" E 25 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| E 31 | E 32 | E 33 | E 34 | E 35 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 31 "|" E 32 "|" E 33 "|" E 34 "|" E 35 "|"|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: lines ###-###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| H  1 | H  2 | H  3 | H  4 | H  5 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 11 | E 12 | E 13 | E 14 | E 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 21 | E 22 | E 23 | E 24 | E 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 31 | E 32 | E 33 | E 34 | E 35 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
H: header
^^^^^^^^^
E: entry
^^^^^^^^
    {table|{row|------------------------------------|row}
           {row|"|" H 1 "|" H 2 "|" H 3 "|" H 4 "|" H 5 "|"|row}
           {row|------------------------------------|row}
           {row|"|" E 11 "|" E 12 "|" E 13 "|" E 14 "|" E 15 "|"|row}
           {row|"|" E 21 "|" E 22 "|" E 23 "|" E 24 "|" E 25 "|"|row}
           {row|"|" E 31 "|" E 32 "|" E 33 "|" E 34 "|" E 35 "|"|row}
           {row|------------------------------------|row}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|H ":"
                header|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|E ":"
                entry|}|table}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|------------------------------------|row}|table}
=== BRACKETED EXPRESSION: line ###:
| H  1 | H  2 | H  3 | H  4 | H  5 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" H 1 "|" H 2 "|" H 3 "|" H 4 "|" H 5 "|"|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| E 11 | E 12 | ABOT | <    | E 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 11 "|" E 12 "|" ABOT "|" < "|" E 15 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| E 21 | E 22 |    > | ^    | E 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 21 "|" E 22 "|" > "|" ^ "|" E 25 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| E 31 | E 32 | E 33 | E 34 | E 35 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 31 "|" E 32 "|" E 33 "|" E 34 "|" E 35 "|"|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: lines ###-###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| H  1 | H  2 | H  3 | H  4 | H  5 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 11 | E 12 | ABOT | <    | E 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 21 | E 22 |    > | ^    | E 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 31 | E 32 | E 33 | E 34 | E 35 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
H: header
^^^^^^^^^
E: entry
^^^^^^^^
ABOT: a bit of text
^^^^^^^^^^^^^^^^^^^
    {table|{row|------------------------------------|row}
           {row|"|" H 1 "|" H 2 "|" H 3 "|" H 4 "|" H 5 "|"|row}
           {row|------------------------------------|row}
           {row|"|" E 11 "|" E 12 "|" ABOT "|" < "|" E 15 "|"|row}
           {row|"|" E 21 "|" E 22 "|" > "|" ^ "|" E 25 "|"|row}
           {row|"|" E 31 "|" E 32 "|" E 33 "|" E 34 "|" E 35 "|"|row}
           {row|------------------------------------|row}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|H ":"
                header|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|E ":"
                entry|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|ABOT
                ":" a bit of text|}|table}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|------------------------------------|row}|table}
=== BRACKETED EXPRESSION: line ###:
| H  1 | H  2 | H  3 | H  4 | H  5 | /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" H 1 "|" H 2 "|" H 3 "|" H 4 "|" H 5 "|" /ib/|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| /l/  | /r/  | c    | P    | cb   |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" /l/ "|" /r/ "|" c "|" P "|" cb "|"|row}
=== BRACKETED EXPRESSION: line ###:
|   11 |   12 |   13 | 5.4% | E 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" 11 "|" 12 "|" 13 "|" 5.4% "|" E 15 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| E 21 | E 22 | E23  | 0.8% | E 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 21 "|" E 22 "|" E23 "|" 0.8% "|" E 25 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| E 31 | E 32 | E 33 | 0.09 | E 35 | /!b/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" E 31 "|" E 32 "|" E 33 "|" 0.09 "|" E 35 "|" /!b/|row}
=== BRACKETED EXPRESSION: line ###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|------------------------------------|row}
=== BRACKETED EXPRESSION: lines ###-###:
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| H  1 | H  2 | H  3 | H  4 | H  5 | /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| /l/  | /r/  | c    | P    | cb   |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
|   11 |   12 |   13 | 5.4% | E 15 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 21 | E 22 | E23  | 0.8% | E 25 |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| E 31 | E 32 | E 33 | 0.09 | E 35 | /!b/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
H: header
^^^^^^^^^
E: entry
^^^^^^^^
E23: /b/ entry 23
^^^^^^^^^^^^^^^^^
P: /.0u%r/
^^^^^^^^^^
    {table|{row|------------------------------------|row}
           {row|"|" H 1 "|" H 2 "|" H 3 "|" H 4 "|" H 5 "|" /ib/|row}
           {row|------------------------------------|row}
           {row|"|" /l/ "|" /r/ "|" c "|" P "|" cb "|"|row}
           {row|"|" 11 "|" 12 "|" 13 "|" 5.4% "|" E 15 "|"|row}
           {row|"|" E 21 "|" E 22 "|" E23 "|" 0.8% "|" E 25 "|"|row}
           {row|"|" E 31 "|" E 32 "|" E 33 "|" 0.09 "|" E 35 "|"
                /!b/|row} {row|------------------------------------|row}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|H ":"
                header|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|E ":"
                entry|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|E23
                ":" /b/ entry 23|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|P ":"
                /.0u%r/|}|table}
=== BRACKETED EXPRESSION: line ###:
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|---------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|---------------------------------|row}|table}
=== BRACKETED EXPRESSION: line ###:
| Value | Factor | Contribution |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" Value "|" Factor "|" Contribution "|"|row}
=== BRACKETED EXPRESSION: line ###:
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|---------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| <V>   | <F>    |              |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" <V> "|" <F> "|" "|"|row}
=== BRACKETED EXPRESSION: line ###:
| /u$/  | /u%/   | /u$.00/      |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" /u$/ "|" /u%/ "|" /u$.00/ "|"|row}
=== BRACKETED EXPRESSION: line ###:
| 100   | 20     | C            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" 100 "|" 20 "|" C "|"|row}
=== BRACKETED EXPRESSION: line ###:
| 200   | 5      | C            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" 200 "|" 5 "|" C "|"|row}
=== BRACKETED EXPRESSION: line ###:
| 300   | 8      | C            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" 300 "|" 8 "|" C "|"|row}
=== BRACKETED EXPRESSION: line ###:
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|---------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| /lb/ Total | < | T            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" /lb/ Total "|" < "|" T "|"|row}
=== BRACKETED EXPRESSION: line ###:
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|---------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
C: [(0,<V>) * (@,<F>)]
    ^^^^^^^
    (0,<V>)
=== BRACKETED EXPRESSION: line ###:
C: [(0,<V>) * (@,<F>)]
              ^^^^^^^
    (@,<F>)
=== BRACKETED EXPRESSION: line ###:
C: [(0,<V>) * (@,<F>)]
    ^^^^^^^
    (0,<V>)
=== BRACKETED EXPRESSION: line ###:
C: [(0,<V>) * (@,<F>)]
              ^^^^^^^
    (@,<F>)
=== BRACKETED EXPRESSION: line ###:
C: [(0,<V>) * (@,<F>)]
   ^^^^^^^^^^^^^^^^^^^
    [(0,<V>) * (@,<F>)]
=== PURELIST EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
         ^^^^^^^
    {|<FIRST>|}
=== PURELIST EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
                  ^^^
    {|"..."|}
=== PURELIST EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
                       ^^^
    {|@-1|}
=== BRACKETED EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
        ^^^^^^^^^^^^^^^^^^^
    [{|<FIRST>|}, {|"..."|}, {|@-1|}]
=== BRACKETED EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
        ^^^^^^^^^^^^^^^^^^^
    [{|<FIRST>|}, {|"..."|}, {|@-1|}]
=== PURELIST EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
                             ^
    {|@|}
=== BRACKETED EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
       ^^^^^^^^^^^^^^^^^^^^^^^^
    ([{|<FIRST>|}, {|"..."|}, {|@-1|}], {|@|})
=== BRACKETED EXPRESSION: line ###:
T: [sum([<FIRST>, ..., @-1], @)]
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [sum ([{|<FIRST>|}, {|"..."|}, {|@-1|}], {|@|})]
=== BRACKETED EXPRESSION: lines ###-###:
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Value | Factor | Contribution |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| <V>   | <F>    |              |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| /u$/  | /u%/   | /u$.00/      |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| 100   | 20     | C            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| 200   | 5      | C            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| 300   | 8      | C            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| /lb/ Total | < | T            |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
---------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C: [(0,<V>) * (@,<F>)]
^^^^^^^^^^^^^^^^^^^^^^
T: [sum([<FIRST>, ..., @-1], @)]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|---------------------------------|row}
           {row|"|" Value "|" Factor "|" Contribution "|"|row}
           {row|---------------------------------|row}
           {row|"|" <V> "|" <F> "|" "|"|row}
           {row|"|" /u$/ "|" /u%/ "|" /u$.00/ "|"|row}
           {row|"|" 100 "|" 20 "|" C "|"|row}
           {row|"|" 200 "|" 5 "|" C "|"|row}
           {row|"|" 300 "|" 8 "|" C "|"|row}
           {row|---------------------------------|row}
           {row|"|" /lb/ Total "|" < "|" T "|"|row}
           {row|---------------------------------|row}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|C ":"
                [(0,<V>) * (@,<F>)]|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|T ":"
                [sum ([{|<FIRST>|}, {|"..."|}, {|@-1|}], {|@|})]|}|table}
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|--------------------------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {table|{row|-------------------------------------------------------#
                #-|row}|table}
=== BRACKETED EXPRESSION: line ###:
| Name   | Weight   | Height     | Age       | BMI  | /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" Name "|" Weight "|" Height "|" Age "|" BMI "|" /ib/|row}
=== BRACKETED EXPRESSION: line ###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|--------------------------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| <name> | <weight> | <height>   | <age>     | B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" <name> "|" <weight> "|" <height> "|" <age> "|" B|row}
=== BRACKETED EXPRESSION: line ###:
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|----------------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" /l/ "|" /U`lb'/ "|" /U`ft_in'/ "|" /u`yr'.0/ "|" /.2/|row}
=== BRACKETED EXPRESSION: line ###:
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|----------------------------------------------|row}
=== BRACKETED EXPRESSION: line ###:
| George | 205lb    | 6ft 3in    | 25        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" George "|" 205lb "|" 6ft 3in "|" 25 "|"|row}
=== BRACKETED EXPRESSION: line ###:
| Mary   | 135lb    | 5ft 5in    | 26        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|"|" Mary "|" 135lb "|" 5ft 5in "|" 26 "|"|row}
=== BRACKETED EXPRESSION: line ###:
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {row|----------------------------------------------|row}
=== BRACKETED EXPRESSION: lines ###-###:
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Name   | Weight   | Height     | Age       | BMI  | /ib/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
--------------------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| <name> | <weight> | <height>   | <age>     | B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| /l/    | /U`lb'/  | /U`ft_in'/ | /u`yr'.0/ | /.2/
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| George | 205lb    | 6ft 3in    | 25        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Mary   | 135lb    | 5ft 5in    | 26        |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------------------------------------
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BMI: Body Mass Index
^^^^^^^^^^^^^^^^^^^^
B: <body mass index>
^^^^^^^^^^^^^^^^^^^^
ROW_TYPE: person
^^^^^^^^^^^^^^^^
SORT ROWS BY: name
^^^^^^^^^^^^^^^^^^
    {table|{row|-------------------------------------------------------#
                #-|row}
           {row|"|" Name "|" Weight "|" Height "|" Age "|" BMI "|"
                /ib/|row}
           {row|--------------------------------------------------------|row}
           {row|"|" <name> "|" <weight> "|" <height> "|" <age> "|"
                B|row}
           {row|----------------------------------------------|row}
           {row|"|" /l/ "|" /U`lb'/ "|" /U`ft_in'/ "|" /u`yr'.0/ "|"
                /.2/|row}
           {row|----------------------------------------------|row}
           {row|"|" George "|" 205lb "|" 6ft 3in "|" 25 "|"|row}
           {row|"|" Mary "|" 135lb "|" 5ft 5in "|" 26 "|"|row}
           {row|----------------------------------------------|row}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|BMI
                ":" Body Mass Index|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|B ":"
                <body mass index>|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                ROW_TYPE ":" person|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|SORT
                ROWS BY ":" name|}|table}
=== BRACKETED EXPRESSION: line ###:
x = {{circle 0.4}}
    ^^^^^^^^^^^^^^
    {{circle 0.4}}
=== PURELIST EXPRESSION: line ###:
x = {{circle 0.4}}
^
    {|x|}
=== BRACKETED EXPRESSION: line ###:
x = {{circle 0.4}}
    ^^^^^^^^^^^^^^
    {{circle 0.4}}
=== BRACKETED EXPRESSION: line ###:
x = {{circle 0.4}}
^^^^^^^^^^^^^^^^^^
    {|x|} = {{circle 0.4}}
=== PURELIST EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
                 ^^^
    {|0.4|}
=== PURELIST EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
                      ^^^
    {|0.2|}
=== BRACKETED EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
                ^^^^^^^^^^
    ({|0.4|}, {|0.2|})
=== BRACKETED EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
    ^^^^^^^^^^^^^^^^^^^^^^^^
    {{rectangle ({|0.4|}, {|0.2|})}}
=== PURELIST EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
^
    {|y|}
=== BRACKETED EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
    ^^^^^^^^^^^^^^^^^^^^^^^^
    {{rectangle ({|0.4|}, {|0.2|})}}
=== BRACKETED EXPRESSION: line ###:
y = {{rectangle (0.4, 0.2)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|y|} = {{rectangle ({|0.4|}, {|0.2|})}}
=== BRACKETED EXPRESSION: line ###:
z = {{(circle 0.4) labeled `Jack'}}
      ^^^^^^^^^^^^
    (circle 0.4)
=== BRACKETED EXPRESSION: line ###:
z = {{(circle 0.4) labeled `Jack'}}
                           ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
z = {{(circle 0.4) labeled `Jack'}}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{(circle 0.4) labeled `Jack'}}
=== PURELIST EXPRESSION: line ###:
z = {{(circle 0.4) labeled `Jack'}}
^
    {|z|}
=== BRACKETED EXPRESSION: line ###:
z = {{(circle 0.4) labeled `Jack'}}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{(circle 0.4) labeled `Jack'}}
=== BRACKETED EXPRESSION: line ###:
z = {{(circle 0.4) labeled `Jack'}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|z|} = {{(circle 0.4) labeled `Jack'}}
=== BRACKETED EXPRESSION: line ###:
{{([x] right of [y]) above [z]}}
   ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
{{([x] right of [y]) above [z]}}
                ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
{{([x] right of [y]) above [z]}}
  ^^^^^^^^^^^^^^^^^^
    ([x] right of [y])
=== BRACKETED EXPRESSION: line ###:
{{([x] right of [y]) above [z]}}
                           ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
{{([x] right of [y]) above [z]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{([x] right of [y]) above [z]}}
=== BRACKETED EXPRESSION: line ###:
{{([x] right of [y]) above [z]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{([x] right of [y]) above [z]}}
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
      ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
           ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
                ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
      ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
           ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
                ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
     ^^^^^^^^^^^^^^^
    ([x], [y], [z])
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
^^^^^^^^^^^^^^^^^^^^^^
    {{row ([x], [y], [z])}}
=== BRACKETED EXPRESSION: line ###:
{{row([x], [y], [z])}}
^^^^^^^^^^^^^^^^^^^^^^
    {{row ([x], [y], [z])}}
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                   ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                        ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                             ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                   ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                        ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                             ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
                  ^^^^^^^^^^^^^^^
    ([x], [y], [z])
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                   ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                        ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                             ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                   ^^^
    [z]
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                        ^^^
    [y]
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                             ^^^
    [x]
=== BRACKETED EXPRESSION: line ###:
               row([z], [y], [x]) )}}
                  ^^^^^^^^^^^^^^^
    ([z], [y], [x])
=== PURELIST EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
               ^^^^^^^^^^^^^^^^^^
    {|row ([x], [y], [z])|}
=== PURELIST EXPRESSION: line ###:
               row([z], [y], [x]) )}}
               ^^^^^^^^^^^^^^^^^^
    {|row ([z], [y], [x])|}
=== BRACKETED EXPRESSION: lines ###-###:
p = {{column ( row([x], [y], [z]),
             ^^^^^^^^^^^^^^^^^^^^^
               row([z], [y], [x]) )}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ({|row ([x], [y], [z])|}, {|row ([z], [y], [x])|})
=== BRACKETED EXPRESSION: lines ###-###:
p = {{column ( row([x], [y], [z]),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               row([z], [y], [x]) )}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{column ({|row ([x], [y], [z])|}, {|row ([z], [y], [x])|})}}
=== PURELIST EXPRESSION: line ###:
p = {{column ( row([x], [y], [z]),
^
    {|p|}
=== BRACKETED EXPRESSION: lines ###-###:
p = {{column ( row([x], [y], [z]),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               row([z], [y], [x]) )}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{column ({|row ([x], [y], [z])|}, {|row ([z], [y], [x])|})}}
=== BRACKETED EXPRESSION: lines ###-###:
p = {{column ( row([x], [y], [z]),
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               row([z], [y], [x]) )}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|p|} =
        {{column ({|row ([x], [y], [z])|}, {|row ([z], [y], [x])|})}}
=== BRACKETED EXPRESSION: line ###:
raw x
^^^^^
    raw x
=== BRACKETED EXPRESSION: line ###:
raw p
^^^^^
    raw p
=== BRACKETED EXPRESSION: line ###:
display ( P ) <-- person ( P ) has name ( X ):
        ^^^^^
    (P)
=== BRACKETED EXPRESSION: line ###:
display ( P ) <-- person ( P ) has name ( X ):
                         ^^^^^
    (P)
=== BRACKETED EXPRESSION: line ###:
display ( P ) <-- person ( P ) has name ( X ):
                                        ^^^^^
    (X)
=== PURELIST EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
                    ^^^
    {|0.4|}
=== PURELIST EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
                         ^^^
    {|0.2|}
=== BRACKETED EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
                   ^^^^^^^^^^
    ({|0.4|}, {|0.2|})
=== BRACKETED EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
                                      ^^^
    [X]
=== BRACKETED EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{oval ({|0.4|}, {|0.2|}) labeled [X]}}
=== PURELIST EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
    ^^^^^
    {|value|}
=== BRACKETED EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{oval ({|0.4|}, {|0.2|}) labeled [X]}}
=== BRACKETED EXPRESSION: line ###:
    value = {{oval (0.4, 0.2) labeled [X]}}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|value|} = {{oval ({|0.4|}, {|0.2|}) labeled [X]}}
=== BRACKETED EXPRESSION: lines ###-###:
display ( P ) <-- person ( P ) has name ( X ):
                                             ^
    value = {{oval (0.4, 0.2) labeled [X]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|value|} = {{oval ({|0.4|}, {|0.2|}) labeled [X]}}|}|}
=== PURELIST EXPRESSION: line ###:
display ( P ) <-- person ( P ) has name ( X ):
^^^^^^^^^^^^^
    {|display (P)|}
=== PURELIST EXPRESSION: line ###:
display ( P ) <-- person ( P ) has name ( X ):
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|person (P) has name (X)|}
=== BRACKETED EXPRESSION: lines ###-###:
display ( P ) <-- person ( P ) has name ( X ):
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    value = {{oval (0.4, 0.2) labeled [X]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|display (P)|} <-- {|person (P) has name (X)|}:
        {|value|} = {{oval ({|0.4|}, {|0.2|}) labeled [X]}}
=== BRACKETED EXPRESSION: line ###:
a person named `Jack'
               ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
a person named `Jack'
^^^^^^^^^^^^^^^^^^^^^
    a person named `Jack'
=== BRACKETED EXPRESSION: line ###:
``[a person named `Jill'] is the wife of
                  ^^^^^^
    `Jill'
=== BRACKETED EXPRESSION: line ###:
``[a person named `Jill'] is the wife of
  ^^^^^^^^^^^^^^^^^^^^^^^
    [a person named `Jill']
=== BRACKETED EXPRESSION: line ###:
  [a person named `Jack']''
                  ^^^^^^
    `Jack'
=== BRACKETED EXPRESSION: line ###:
  [a person named `Jack']''
  ^^^^^^^^^^^^^^^^^^^^^^^
    [a person named `Jack']
=== BRACKETED EXPRESSION: lines ###-###:
``[a person named `Jill'] is the wife of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  [a person named `Jack']''
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``[a person named `Jill'] is the wife of [a person named `Jack']''
=== BRACKETED EXPRESSION: lines ###-###:
``[a person named `Jill'] is the wife of
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  [a person named `Jack']''
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ``[a person named `Jill'] is the wife of [a person named `Jack']''
=== PURELIST EXPRESSION: line ###:
        angle = X
        ^^^^^
    {|angle|}
=== PURELIST EXPRESSION: line ###:
        angle = X
                ^
    {|X|}
=== BRACKETED EXPRESSION: line ###:
        angle = X
        ^^^^^^^^^
    {|angle|} = {|X|}
=== BRACKETED EXPRESSION: lines ###-###:
    on a demo with angle X:
                          ^
        angle = X
^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|angle|} = {|X|}|}|}
=== PURELIST EXPRESSION: line ###:
    on a demo with angle X:
       ^^^^^^^^^^^^^^^^^^^
    {|a demo with angle X|}
=== BRACKETED EXPRESSION: lines ###-###:
    on a demo with angle X:
    ^^^^^^^^^^^^^^^^^^^^^^^
        angle = X
^^^^^^^^^^^^^^^^^
    on {|a demo with angle X|}:
        {|angle|} = {|X|}
=== BRACKETED EXPRESSION: lines ###-###:
for every demo:
              ^
    on a demo with angle X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        angle = X
^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|on
              {|a demo with angle X|}
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|angle|} = {|X|}|}|}|}|}
=== PURELIST EXPRESSION: line ###:
for every demo:
          ^^^^
    {|demo|}
=== PURELIST EXPRESSION: line ###:
for every demo:
^^^^^^^^^^^^^^
    {|[< for every >] {|demo|}|}
=== PURELIST EXPRESSION: lines ###-###:
for every demo:
^^^^^^^^^^^^^^^
    on a demo with angle X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        angle = X
^^^^^^^^^^^^^^^^^
    {|{|[< for every >] {|demo|}|}
      {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|on
                {|a demo with angle X|}
                {"": .terminator = *INDENTED_PARAGRAPH*, .initiator =
                     ":"|
                     {"": .terminator = "<LF>", .initiator =
                          *LOGICAL_LINE*|{|angle|} = {|X|}|}|}|}|}|}
=== BRACKETED EXPRESSION: lines ###-###:
for every demo:
^^^^^^^^^^^^^^^
    on a demo with angle X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        angle = X
^^^^^^^^^^^^^^^^^
    {|[< for every >] {|demo|}|}:
        on {|a demo with angle X|}:
            {|angle|} = {|X|}
=== PURELIST EXPRESSION: line ###:
x = a demo with angle 30 degrees
^
    {|x|}
=== PURELIST EXPRESSION: line ###:
x = a demo with angle 30 degrees
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|a demo with angle 30 degrees|}
=== BRACKETED EXPRESSION: line ###:
x = a demo with angle 30 degrees
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|x|} = {|a demo with angle 30 degrees|}
=== PURELIST EXPRESSION: line ###:
        next angle = X
        ^^^^^^^^^^
    {|next angle|}
=== PURELIST EXPRESSION: line ###:
        next angle = X
                     ^
    {|X|}
=== BRACKETED EXPRESSION: line ###:
        next angle = X
        ^^^^^^^^^^^^^^
    {|next angle|} = {|X|}
=== BRACKETED EXPRESSION: lines ###-###:
    on update THIS to X:
                       ^
        next angle = X
^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next angle|} = {|X|}|}|}
=== PURELIST EXPRESSION: line ###:
    on update THIS to X:
       ^^^^^^^^^^^^^^^^
    {|update THIS to X|}
=== BRACKETED EXPRESSION: lines ###-###:
    on update THIS to X:
    ^^^^^^^^^^^^^^^^^^^^
        next angle = X
^^^^^^^^^^^^^^^^^^^^^^
    on {|update THIS to X|}:
        {|next angle|} = {|X|}
=== PURELIST EXPRESSION: line ###:
        next angle = angle + X
        ^^^^^^^^^^
    {|next angle|}
=== PURELIST EXPRESSION: line ###:
        next angle = angle + X
                     ^^^^^
    {|angle|}
=== PURELIST EXPRESSION: line ###:
        next angle = angle + X
                             ^
    {|X|}
=== PURELIST EXPRESSION: line ###:
        next angle = angle + X
                     ^^^^^^^^^
    {|{|angle|} + {|X|}|}
=== BRACKETED EXPRESSION: line ###:
        next angle = angle + X
        ^^^^^^^^^^^^^^^^^^^^^^
    {|next angle|} = {|{|angle|} + {|X|}|}
=== BRACKETED EXPRESSION: lines ###-###:
    on increment THIS by X:
                          ^
        next angle = angle + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|next angle|} = {|{|angle|} + {|X|}|}|}|}
=== PURELIST EXPRESSION: line ###:
    on increment THIS by X:
       ^^^^^^^^^^^^^^^^^^^
    {|increment THIS by X|}
=== BRACKETED EXPRESSION: lines ###-###:
    on increment THIS by X:
    ^^^^^^^^^^^^^^^^^^^^^^^
        next angle = angle + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    on {|increment THIS by X|}:
        {|next angle|} = {|{|angle|} + {|X|}|}
=== BRACKETED EXPRESSION: lines ###-###:
for every demo:
              ^
    on update THIS to X:
^^^^^^^^^^^^^^^^^^^^^^^^
        next angle = X
^^^^^^^^^^^^^^^^^^^^^^
    on increment THIS by X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next angle = angle + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|on
              {|update THIS to X|}
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next angle|} = {|X|}|}|}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|on
              {|increment THIS by X|}
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {"": .terminator = "<LF>", .initiator =
                        *LOGICAL_LINE*|{|next angle|} =
                        {|{|angle|} + {|X|}|}|}|}|}|}
=== PURELIST EXPRESSION: line ###:
for every demo:
          ^^^^
    {|demo|}
=== PURELIST EXPRESSION: line ###:
for every demo:
^^^^^^^^^^^^^^
    {|[< for every >] {|demo|}|}
=== PURELIST EXPRESSION: lines ###-###:
for every demo:
^^^^^^^^^^^^^^^
    on update THIS to X:
^^^^^^^^^^^^^^^^^^^^^^^^
        next angle = X
^^^^^^^^^^^^^^^^^^^^^^
    on increment THIS by X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next angle = angle + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|[< for every >] {|demo|}|}
      {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|on
                {|update THIS to X|}
                {"": .terminator = *INDENTED_PARAGRAPH*, .initiator =
                     ":"|
                     {"": .terminator = "<LF>", .initiator =
                          *LOGICAL_LINE*|{|next angle|} = {|X|}|}|}|}
           {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|on
                {|increment THIS by X|}
                {"": .terminator = *INDENTED_PARAGRAPH*, .initiator =
                     ":"|
                     {"": .terminator = "<LF>", .initiator =
                          *LOGICAL_LINE*|{|next angle|} =
                          {|{|angle|} + {|X|}|}|}|}|}|}|}
=== BRACKETED EXPRESSION: lines ###-###:
for every demo:
^^^^^^^^^^^^^^^
    on update THIS to X:
^^^^^^^^^^^^^^^^^^^^^^^^
        next angle = X
^^^^^^^^^^^^^^^^^^^^^^
    on increment THIS by X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^
        next angle = angle + X
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|[< for every >] {|demo|}|}:
        on {|update THIS to X|}:
            {|next angle|} = {|X|}
        on {|increment THIS by X|}:
            {|next angle|} = {|{|angle|} + {|X|}|}
=== BRACKETED EXPRESSION: line ###:
update x to 40 degrees
^^^^^^^^^^^^^^^^^^^^^^
    update x to 40 degrees
=== PURELIST EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
                                             ^^^
    {|0|}
=== PURELIST EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
                                                  ^^^
    {|0|}
=== BRACKETED EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
                                            ^^^^^^^^^^
    ({|0|}, {|0|})
=== BRACKETED EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{circle dotted diameter 1 center ({|0|}, {|0|})}}
=== PURELIST EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
    ^
    {|c|}
=== BRACKETED EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{circle dotted diameter 1 center ({|0|}, {|0|})}}
=== BRACKETED EXPRESSION: line ###:
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|c|} = {{circle dotted diameter 1 center ({|0|}, {|0|})}}
=== PURELIST EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
                           ^^^^^
    {|-0.75|}
=== PURELIST EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
                                  ^^^
    {|0|}
=== BRACKETED EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
                          ^^^^^^^^^^^^
    ({|-0.75|}, {|0|})
=== PURELIST EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
                                           ^^^^
    {|0.75|}
=== PURELIST EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
                                                 ^^^
    {|0|}
=== BRACKETED EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
                                          ^^^^^^^^^^^
    ({|0.75|}, {|0|})
=== BRACKETED EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{arrow from ({|-0.75|}, {|0|}) to ({|0.75|}, {|0|})}}
=== PURELIST EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
    ^^^^^^
    {|x axis|}
=== BRACKETED EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{arrow from ({|-0.75|}, {|0|}) to ({|0.75|}, {|0|})}}
=== BRACKETED EXPRESSION: line ###:
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|x axis|} = {{arrow from ({|-0.75|}, {|0|}) to ({|0.75|}, {|0|})}}
=== PURELIST EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
                           ^^^
    {|0|}
=== PURELIST EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
                                ^^^^^
    {|-0.75|}
=== BRACKETED EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
                          ^^^^^^^^^^^^
    ({|0|}, {|-0.75|})
=== PURELIST EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
                                           ^^^
    {|0|}
=== PURELIST EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
                                                ^^^^
    {|0.75|}
=== BRACKETED EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
                                          ^^^^^^^^^^^
    ({|0|}, {|0.75|})
=== BRACKETED EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{arrow from ({|0|}, {|-0.75|}) to ({|0|}, {|0.75|})}}
=== PURELIST EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
    ^^^^^^
    {|y axis|}
=== BRACKETED EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{arrow from ({|0|}, {|-0.75|}) to ({|0|}, {|0.75|})}}
=== BRACKETED EXPRESSION: line ###:
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|y axis|} = {{arrow from ({|0|}, {|-0.75|}) to ({|0|}, {|0.75|})}}
=== PURELIST EXPRESSION: line ###:
    line = {{line from (0.0, 0.0)
                        ^^^
    {|0|}
=== PURELIST EXPRESSION: line ###:
    line = {{line from (0.0, 0.0)
                             ^^^
    {|0|}
=== BRACKETED EXPRESSION: line ###:
    line = {{line from (0.0, 0.0)
                       ^^^^^^^^^^
    ({|0|}, {|0|})
=== PURELIST EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                       ^^^
    {|0.5|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                             ^^^^^
    {|cos X|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                                    ^^^
    {|0.5|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                                          ^^^^^
    {|sin X|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                       ^^^^^^^^^^^
    {|{|0.5|} * {|cos X|}|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                                    ^^^^^^^^^^^
    {|{|0.5|} * {|sin X|}|}
=== BRACKETABLE EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                       ^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|}|}
=== BRACKETED EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})
=== BRACKETED EXPRESSION: line ###:
                  to [(0.5 * cos X, 0.5 * sin X)]}}
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})]
=== BRACKETED EXPRESSION: lines ###-###:
    line = {{line from (0.0, 0.0)
           ^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.5 * cos X, 0.5 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{line from ({|0|}, {|0|}) to
      [({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})]}}
=== PURELIST EXPRESSION: line ###:
    line = {{line from (0.0, 0.0)
    ^^^^
    {|line|}
=== BRACKETED EXPRESSION: lines ###-###:
    line = {{line from (0.0, 0.0)
           ^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.5 * cos X, 0.5 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{line from ({|0|}, {|0|}) to
      [({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})]}}
=== BRACKETED EXPRESSION: lines ###-###:
    line = {{line from (0.0, 0.0)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.5 * cos X, 0.5 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|line|} =
        {{line from ({|0|}, {|0|}) to
          [({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})]}}
=== PURELIST EXPRESSION: line ###:
    arc = {{arc arrow from (0.3, 0.0)
                            ^^^
    {|0.3|}
=== PURELIST EXPRESSION: line ###:
    arc = {{arc arrow from (0.3, 0.0)
                                 ^^^
    {|0|}
=== BRACKETED EXPRESSION: line ###:
    arc = {{arc arrow from (0.3, 0.0)
                           ^^^^^^^^^^
    ({|0.3|}, {|0|})
=== PURELIST EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                       ^^^
    {|0.3|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                             ^^^^^
    {|cos X|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                                    ^^^
    {|0.3|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                                          ^^^^^
    {|sin X|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                       ^^^^^^^^^^^
    {|{|0.3|} * {|cos X|}|}
=== PURELIST EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                                    ^^^^^^^^^^^
    {|{|0.3|} * {|sin X|}|}
=== BRACKETABLE EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                       ^^^^^^^^^^^^^^^^^^^^^^^^
    {|{|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|}|}
=== BRACKETED EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})
=== BRACKETED EXPRESSION: line ###:
                  to [(0.3 * cos X, 0.3 * sin X)]}}
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    [({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})]
=== BRACKETED EXPRESSION: lines ###-###:
    arc = {{arc arrow from (0.3, 0.0)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.3 * cos X, 0.3 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{arc arrow from ({|0.3|}, {|0|}) to
      [({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})]}}
=== PURELIST EXPRESSION: line ###:
    arc = {{arc arrow from (0.3, 0.0)
    ^^^
    {|arc|}
=== BRACKETED EXPRESSION: lines ###-###:
    arc = {{arc arrow from (0.3, 0.0)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.3 * cos X, 0.3 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{arc arrow from ({|0.3|}, {|0|}) to
      [({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})]}}
=== BRACKETED EXPRESSION: lines ###-###:
    arc = {{arc arrow from (0.3, 0.0)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.3 * cos X, 0.3 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|arc|} =
        {{arc arrow from ({|0.3|}, {|0|}) to
          [({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})]}}
=== BRACKETED EXPRESSION: line ###:
    theta = {{Greek th}}
            ^^^^^^^^^^^^
    {{Greek th}}
=== PURELIST EXPRESSION: line ###:
    theta = {{Greek th}}
    ^^^^^
    {|theta|}
=== BRACKETED EXPRESSION: line ###:
    theta = {{Greek th}}
            ^^^^^^^^^^^^
    {{Greek th}}
=== BRACKETED EXPRESSION: line ###:
    theta = {{Greek th}}
    ^^^^^^^^^^^^^^^^^^^^
    {|theta|} = {{Greek th}}
=== BRACKETED EXPRESSION: line ###:
                `Depiction of Angle [theta] = [X]',
                                    ^^^^^^^
    [theta]
=== BRACKETED EXPRESSION: line ###:
                `Depiction of Angle [theta] = [X]',
                                              ^^^
    [X]
=== BRACKETED EXPRESSION: line ###:
                `Depiction of Angle [theta] = [X]',
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `Depiction of Angle [theta] = [X]'
=== BRACKETED EXPRESSION: line ###:
                    [c],
                    ^^^
    [c]
=== BRACKETED EXPRESSION: line ###:
                    [x axis] labeled `X Axis',
                    ^^^^^^^^
    [x axis]
=== BRACKETED EXPRESSION: line ###:
                    [x axis] labeled `X Axis',
                                     ^^^^^^^^
    `X Axis'
=== BRACKETED EXPRESSION: line ###:
                    [y axis] labeled `Y Axis',
                    ^^^^^^^^
    [y axis]
=== BRACKETED EXPRESSION: line ###:
                    [y axis] labeled `Y Axis',
                                     ^^^^^^^^
    `Y Axis'
=== BRACKETED EXPRESSION: line ###:
                    [line],
                    ^^^^^^
    [line]
=== BRACKETED EXPRESSION: line ###:
                    [arc] labeled `[theta]' ))}}
                    ^^^^^
    [arc]
=== BRACKETED EXPRESSION: line ###:
                    [arc] labeled `[theta]' ))}}
                                   ^^^^^^^
    [theta]
=== BRACKETED EXPRESSION: line ###:
                    [arc] labeled `[theta]' ))}}
                                  ^^^^^^^^^
    `[theta]'
=== BRACKETED EXPRESSION: line ###:
                    [c],
                    ^^^
    [c]
=== PURELIST EXPRESSION: line ###:
                    [x axis] labeled `X Axis',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
    {|[x axis] labeled `X Axis'|}
=== PURELIST EXPRESSION: line ###:
                    [y axis] labeled `Y Axis',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
    {|[y axis] labeled `Y Axis'|}
=== BRACKETED EXPRESSION: line ###:
                    [line],
                    ^^^^^^
    [line]
=== PURELIST EXPRESSION: line ###:
                    [arc] labeled `[theta]' ))}}
                    ^^^^^^^^^^^^^^^^^^^^^^^
    {|[arc] labeled `[theta]'|}
=== BRACKETED EXPRESSION: lines ###-###:
                overlap (
                        ^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ([c], {|[x axis] labeled `X Axis'|}, {|[y axis] labeled `Y Axis'|},
     [line], {|[arc] labeled `[theta]'|})
=== BRACKETED EXPRESSION: line ###:
                `Depiction of Angle [theta] = [X]',
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `Depiction of Angle [theta] = [X]'
=== PURELIST EXPRESSION: lines ###-###:
                overlap (
                ^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|overlap
      ([c], {|[x axis] labeled `X Axis'|},
       {|[y axis] labeled `Y Axis'|}, [line],
       {|[arc] labeled `[theta]'|})|}
=== BRACKETED EXPRESSION: lines ###-###:
    value = {{label (
                    ^
                `Depiction of Angle [theta] = [X]',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                overlap (
^^^^^^^^^^^^^^^^^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    (`Depiction of Angle [theta] = [X]',
     {|overlap
       ([c], {|[x axis] labeled `X Axis'|},
        {|[y axis] labeled `Y Axis'|}, [line],
        {|[arc] labeled `[theta]'|})|})
=== BRACKETED EXPRESSION: lines ###-###:
    value = {{label (
            ^^^^^^^^^
                `Depiction of Angle [theta] = [X]',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                overlap (
^^^^^^^^^^^^^^^^^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{label
      (`Depiction of Angle [theta] = [X]',
       {|overlap
         ([c], {|[x axis] labeled `X Axis'|},
          {|[y axis] labeled `Y Axis'|}, [line],
          {|[arc] labeled `[theta]'|})|})}}
=== PURELIST EXPRESSION: line ###:
    value = {{label (
    ^^^^^
    {|value|}
=== BRACKETED EXPRESSION: lines ###-###:
    value = {{label (
            ^^^^^^^^^
                `Depiction of Angle [theta] = [X]',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                overlap (
^^^^^^^^^^^^^^^^^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {{label
      (`Depiction of Angle [theta] = [X]',
       {|overlap
         ([c], {|[x axis] labeled `X Axis'|},
          {|[y axis] labeled `Y Axis'|}, [line],
          {|[arc] labeled `[theta]'|})|})}}
=== BRACKETED EXPRESSION: lines ###-###:
    value = {{label (
    ^^^^^^^^^^^^^^^^^
                `Depiction of Angle [theta] = [X]',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                overlap (
^^^^^^^^^^^^^^^^^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|value|} =
        {{label
          (`Depiction of Angle [theta] = [X]',
           {|overlap
             ([c], {|[x axis] labeled `X Axis'|},
              {|[y axis] labeled `Y Axis'|}, [line],
              {|[arc] labeled `[theta]'|})|})}}
=== BRACKETED EXPRESSION: lines ###-###:
display D <-- D is a demo with angle X:
                                      ^
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    line = {{line from (0.0, 0.0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.5 * cos X, 0.5 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    arc = {{arc arrow from (0.3, 0.0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.3 * cos X, 0.3 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    theta = {{Greek th}}
^^^^^^^^^^^^^^^^^^^^^^^^
    value = {{label (
^^^^^^^^^^^^^^^^^^^^^
                `Depiction of Angle [theta] = [X]',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                overlap (
^^^^^^^^^^^^^^^^^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|c|} =
              {{circle dotted diameter 1 center ({|0|}, {|0|})}}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|x axis|} =
              {{arrow from ({|-0.75|}, {|0|}) to ({|0.75|}, {|0|})}}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|y axis|} =
              {{arrow from ({|0|}, {|-0.75|}) to ({|0|}, {|0.75|})}}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|line|}
              =
              {{line from ({|0|}, {|0|}) to
                [({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})]}}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|{|arc|}
              =
              {{arc arrow from ({|0.3|}, {|0|}) to
                [({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})]}}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|theta|} = {{Greek th}}|}
         {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
              {|value|} =
              {{label
                (`Depiction of Angle [theta] = [X]',
                 {|overlap
                   ([c], {|[x axis] labeled `X Axis'|},
                    {|[y axis] labeled `Y Axis'|}, [line],
                    {|[arc] labeled `[theta]'|})|})}}|}|}
=== PURELIST EXPRESSION: line ###:
display D <-- D is a demo with angle X:
^^^^^^^^^
    {|display D|}
=== PURELIST EXPRESSION: line ###:
display D <-- D is a demo with angle X:
              ^^^^^^^^^^^^^^^^^^^^^^^^
    {|D is a demo with angle X|}
=== BRACKETED EXPRESSION: lines ###-###:
display D <-- D is a demo with angle X:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    c = {{circle dotted diameter 1.0 center (0.0, 0.0)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    x axis = {{arrow from (-0.75, 0.0) to (0.75, 0.0)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    y axis = {{arrow from (0.0, -0.75) to (0.0, 0.75)}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    line = {{line from (0.0, 0.0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.5 * cos X, 0.5 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    arc = {{arc arrow from (0.3, 0.0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  to [(0.3 * cos X, 0.3 * sin X)]}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    theta = {{Greek th}}
^^^^^^^^^^^^^^^^^^^^^^^^
    value = {{label (
^^^^^^^^^^^^^^^^^^^^^
                `Depiction of Angle [theta] = [X]',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                overlap (
^^^^^^^^^^^^^^^^^^^^^^^^^
                    [c],
^^^^^^^^^^^^^^^^^^^^^^^^
                    [x axis] labeled `X Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [y axis] labeled `Y Axis',
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [line],
^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    [arc] labeled `[theta]' ))}}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {|display D|} <-- {|D is a demo with angle X|}:
        {|c|} = {{circle dotted diameter 1 center ({|0|}, {|0|})}}
        {|x axis|} =
            {{arrow from ({|-0.75|}, {|0|}) to ({|0.75|}, {|0|})}}
        {|y axis|} =
            {{arrow from ({|0|}, {|-0.75|}) to ({|0|}, {|0.75|})}}
        {|line|} =
            {{line from ({|0|}, {|0|}) to
              [({|{|0.5|} * {|cos X|}|}, {|{|0.5|} * {|sin X|}|})]}}
        {|arc|} =
            {{arc arrow from ({|0.3|}, {|0|}) to
              [({|{|0.3|} * {|cos X|}|}, {|{|0.3|} * {|sin X|}|})]}}
        {|theta|} = {{Greek th}}
        {|value|} =
            {{label
              (`Depiction of Angle [theta] = [X]',
               {|overlap
                 ([c], {|[x axis] labeled `X Axis'|},
                  {|[y axis] labeled `Y Axis'|}, [line],
                  {|[arc] labeled `... ... ...'|})|})}}
=== BRACKETED EXPRESSION: line ###:
show x
^^^^^^
    show x
=== BRACKETED EXPRESSION: line ###:
increment x by -15 degrees
^^^^^^^^^^^^^^^^^^^^^^^^^^
    increment x by -15 degrees
=== PURELIST EXPRESSION: line ###:
x = y + z
^
    {|x|}
=== PURELIST EXPRESSION: line ###:
x = y + z
    ^
    {|y|}
=== PURELIST EXPRESSION: line ###:
x = y + z
        ^
    {|z|}
=== PURELIST EXPRESSION: line ###:
x = y + z
    ^^^^^
    {|{|y|} + {|z|}|}
=== BRACKETED EXPRESSION: line ###:
x = y + z
^^^^^^^^^
    {|x|} = {|{|y|} + {|z|}|}
=== PURELIST EXPRESSION: line ###:
w = {|u|} + ( v )
    ^^^^^
    {|u|}
=== BRACKETED EXPRESSION: line ###:
w = {|u|} + ( v )
            ^^^^^
    (v)
=== PURELIST EXPRESSION: line ###:
w = {|u|} + ( v )
^
    {|w|}
=== PURELIST EXPRESSION: line ###:
w = {|u|} + ( v )
    ^^^^^
    {|u|}
=== BRACKETED EXPRESSION: line ###:
w = {|u|} + ( v )
            ^^^^^
    (v)
=== PURELIST EXPRESSION: line ###:
w = {|u|} + ( v )
    ^^^^^^^^^^^^^
    {|{|u|} + (v)|}
=== BRACKETED EXPRESSION: line ###:
w = {|u|} + ( v )
^^^^^^^^^^^^^^^^^
    {|w|} = {|{|u|} + (v)|}
