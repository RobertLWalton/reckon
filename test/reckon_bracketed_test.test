*PARSER*:
    trace [+ parser output]
    trace [+ subexpression lines]
    trace [+ subexpression elements]
    trace [+ subexpression details]
BRACKETED EXPRESSION:
    [< X 1 >]
!@@ := [< X 1 >]:
           .terminator = "<LF>"
           .position[H] = PACKED_VEC
           .initiator = [$ LOGICAL_LINE $]
    line ##:
[< X 1 >]
^^^^^^^^^
ERROR: in line ##: missing operand; error operand inserted:
    < X 1 >]
            ^
BRACKETED EXPRESSION:
    [{|< X 1|} > ERROR'OPERAND]
!@@ := @@:
           .terminator = "<LF>"
           .position[H] = PACKED_VEC
           .initiator = [$ LOGICAL_LINE $]
!@@ := @@ ">" ERROR'OPERAND:
           .terminator = "]"
           .initiator = "["
           .position[H] = PACKED_VEC
!@@ := "<" X 1:
           .position[H] = PACKED_VEC
    lines ##-##:
[
^
    < X 1 >]
^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({|x|} + {|y|})
!@@ := @@:
           .terminator = "<LF>"
           .position[H] = PACKED_VEC
           .initiator = [$ LOGICAL_LINE $]
!@@ := @@ "+" @@:
           .terminator = ")"
           .initiator = "("
           .position[H] = PACKED_VEC
!@@ := x:
           .position[H] = PACKED_VEC
!@@ := y:
           .position[H] = PACKED_VEC
    line ##:
(x + y)
^^^^^^^
BRACKETED EXPRESSION:
    {{{|x|} + {|y|}}}
!@@ := @@@:
           .terminator = "<LF>"
           .position[H] = PACKED_VEC
           .initiator = [$ LOGICAL_LINE $]
!@@@ := @@@ "+" @@@:
            .terminator = [< "}" "}" >]
            .initiator = [< "{" "{" >]
            .position[H] = PACKED_VEC
!@@@ := x:
            .position[H] = PACKED_VEC
!@@@ := y:
            .position[H] = PACKED_VEC
    line ##:
{{x + y}}
^^^^^^^^^
BRACKETED EXPRESSION:
    X Y Z
!@@@ := X Y Z:
            .terminator = "<LF>"
            .initiator = [$ LOGICAL_LINE $]
            .position[H] = PACKED_VEC
    lines ##-##:
{
^
    | X Y Z|
^^^^^^^^^^^^
    }
^^^^^
BRACKETED EXPRESSION:
    ``{s: .terminator = "."|This is text X + Y with insert
          [{|X|} + {|Y|}]|s}''
!@@@ := @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = [$ LOGICAL_LINE $]
!@@@ := @@@:
            .terminator = "''"
            .initiator = "``"
            .position[H] = PACKED_VEC
!@@@ := This is text X "+" Y with insert @@@:
            .terminator = "."
            .position[H] = PACKED_VEC
            .type = s
!@@@ := @@@ "+" @@@:
            .terminator = "]"
            .initiator = "["
            .position[H] = PACKED_VEC
!@@@ := X:
            .position[H] = PACKED_VEC
!@@@ := Y:
            .position[H] = PACKED_VEC
    line ##:
``This is text X + Y with insert [X + Y].''
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
